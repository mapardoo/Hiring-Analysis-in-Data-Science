# Machine Learning project focused on analyze jobs search and hiring process in the field of data science. Neural networks are used.

{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mapardoo/Hiring-Analysis-in-Data-Science/blob/main/ScopeGenius(2).ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U1AK5ZH2QWLe"
      },
      "source": [
        "# Precisión del precio y locación a la que se debe axpirar dependiendo del nivel de experiencia"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6kwdpi-2MNdf"
      },
      "source": [
        "## Exploración de los datos"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tn7kEtyqddOe"
      },
      "source": [
        "### Nota.\n",
        "Estamos utilizando la ***API***  de kaggle podemos cargar los archivos directamente al entorno de trabajo"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N6Hzvp7o3tcK"
      },
      "source": [
        "### Importación y descarga de nuestra base de datos.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nz1z4Q4P5Nhx"
      },
      "outputs": [],
      "source": [
        "# from google.colab import drive\n",
        "# drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7W0dxZz9eyY6"
      },
      "outputs": [],
      "source": [
        "# df=pd.read_csv(\"/content/drive/MyDrive/ScopeGenius🐍/Entregables/jobs_in_data.csv\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "da0x2VspOx5g"
      },
      "source": [
        "ㅤ\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7dl6_ZZZNHPu"
      },
      "outputs": [],
      "source": [
        "## importación de libreria\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import sklearn\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import tensorflow as tf\n",
        "import keras\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import plotly.express as px\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "\n",
        "from sklearn.compose import ColumnTransformer\n",
        "\n",
        "from sklearn.feature_selection import SelectPercentile, chi2\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.linear_model import LogisticRegression, LinearRegression\n",
        "from sklearn.model_selection import RandomizedSearchCV, train_test_split\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.preprocessing import OneHotEncoder, StandardScaler,LabelEncoder,MinMaxScaler\n",
        "from sklearn.compose import make_column_selector as selector\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.metrics import r2_score, mean_squared_error"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "klUaXzT4Xi66",
        "outputId": "e580432a-6ff6-4314-c70a-e899e314b50d"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Dataset URL: https://www.kaggle.com/datasets/hummaamqaasim/jobs-in-data\n",
            "License(s): DbCL-1.0\n",
            "jobs-in-data.zip: Skipping, found more recently modified local copy (use --force to force download)\n"
          ]
        }
      ],
      "source": [
        "!kaggle datasets download -d hummaamqaasim/jobs-in-data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "7gZ6C9SkcEan",
        "outputId": "cc3c4016-3708-4dd0-ef25-09450401f031"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Archive:  jobs-in-data.zip\n",
            "replace jobs_in_data.csv? [y]es, [n]o, [A]ll, [N]one, [r]ename: "
          ]
        }
      ],
      "source": [
        "!unzip jobs-in-data.zip # extraemos los datos que estan en el archivo .zip"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 345
        },
        "id": "EAMbF-_PdQXG",
        "outputId": "f71b60da-c92f-4163-975e-92c3de7e67db"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 9355,\n  \"fields\": [\n    {\n      \"column\": \"work_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2020,\n        \"max\": 2023,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2022,\n          2021,\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"AI Engineer\",\n          \"Data Management Specialist\",\n          \"Business Intelligence Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Data Management and Strategy\",\n          \"Data Architecture and Modeling\",\n          \"Leadership and Management\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary_currency\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"PLN\",\n          \"EUR\",\n          \"SGD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 63608,\n        \"min\": 14000,\n        \"max\": 450000,\n        \"num_unique_values\": 1507,\n        \"samples\": [\n          205218,\n          201450,\n          119636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 63177,\n        \"min\": 15000,\n        \"max\": 450000,\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employee_residence\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"Turkey\",\n          \"Germany\",\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Senior\",\n          \"Entry-level\",\n          \"Mid-level\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Part-time\",\n          \"Freelance\",\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hybrid\",\n          \"In-person\",\n          \"Remote\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          \"Mauritius\",\n          \"Germany\",\n          \"Bosnia and Herzegovina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"L\",\n          \"M\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-4aea3284-2bc1-4396-aa7e-06c2b72f02be\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>work_year</th>\n",
              "      <th>job_title</th>\n",
              "      <th>job_category</th>\n",
              "      <th>salary_currency</th>\n",
              "      <th>salary</th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>employee_residence</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_location</th>\n",
              "      <th>company_size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023</td>\n",
              "      <td>Data DevOps Engineer</td>\n",
              "      <td>Data Engineering</td>\n",
              "      <td>EUR</td>\n",
              "      <td>88000</td>\n",
              "      <td>95012</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>Germany</td>\n",
              "      <td>L</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Data Architecture and Modeling</td>\n",
              "      <td>USD</td>\n",
              "      <td>186000</td>\n",
              "      <td>186000</td>\n",
              "      <td>United States</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>United States</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Data Architecture and Modeling</td>\n",
              "      <td>USD</td>\n",
              "      <td>81800</td>\n",
              "      <td>81800</td>\n",
              "      <td>United States</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>United States</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Data Science and Research</td>\n",
              "      <td>USD</td>\n",
              "      <td>212000</td>\n",
              "      <td>212000</td>\n",
              "      <td>United States</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>United States</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Data Science and Research</td>\n",
              "      <td>USD</td>\n",
              "      <td>93300</td>\n",
              "      <td>93300</td>\n",
              "      <td>United States</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>United States</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4aea3284-2bc1-4396-aa7e-06c2b72f02be')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4aea3284-2bc1-4396-aa7e-06c2b72f02be button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4aea3284-2bc1-4396-aa7e-06c2b72f02be');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4b0b1968-f295-474b-9d47-a20ff3d0eb08\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b0b1968-f295-474b-9d47-a20ff3d0eb08')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4b0b1968-f295-474b-9d47-a20ff3d0eb08 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   work_year             job_title                    job_category  \\\n",
              "0       2023  Data DevOps Engineer                Data Engineering   \n",
              "1       2023        Data Architect  Data Architecture and Modeling   \n",
              "2       2023        Data Architect  Data Architecture and Modeling   \n",
              "3       2023        Data Scientist       Data Science and Research   \n",
              "4       2023        Data Scientist       Data Science and Research   \n",
              "\n",
              "  salary_currency  salary  salary_in_usd employee_residence experience_level  \\\n",
              "0             EUR   88000          95012            Germany        Mid-level   \n",
              "1             USD  186000         186000      United States           Senior   \n",
              "2             USD   81800          81800      United States           Senior   \n",
              "3             USD  212000         212000      United States           Senior   \n",
              "4             USD   93300          93300      United States           Senior   \n",
              "\n",
              "  employment_type work_setting company_location company_size  \n",
              "0       Full-time       Hybrid          Germany            L  \n",
              "1       Full-time    In-person    United States            M  \n",
              "2       Full-time    In-person    United States            M  \n",
              "3       Full-time    In-person    United States            M  \n",
              "4       Full-time    In-person    United States            M  "
            ]
          },
          "execution_count": 88,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df = pd.read_csv('jobs_in_data.csv') # creamos un dataframe para ver los datos.\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Oilf0NUpfw4h"
      },
      "source": [
        "## Definición del problema"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jYVA_akdf1Hc"
      },
      "source": [
        "* **Datos de entrada**: experiencia y titulo del trabajo, tipo de trabajo.\n",
        "* **Datos esperados**: salario esperado y pais"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ReHGhOqqj06L"
      },
      "source": [
        "*Nota*. vamos a dejar las columnas que mejor se adapten a nuestro problema.\n",
        "\n",
        "<font size=\"+2\"> Tenemos datos categoricos y numericos por lo que debemos hacer una conversión. </font>\n",
        "\n",
        "Como podemos ver, tenemos datos de entrada:\n",
        "- job_title - titulo\n",
        "- experence_level - experiencia\n",
        "- employment_type - tipo de trabajo\n",
        "\n",
        "Como salida tenemos:\n",
        "- company_location - locación de la compañia\n",
        "- salary_in_usd - salario en USD\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WKkWBAJ3ftUD"
      },
      "source": [
        "1. Debemos quedarmos con las columnas de interes y trabajar con ellas para buscar la relacion entre ellas.\n",
        "2. realizar la limpieza de los datos.\n",
        "3. convertirlos para poder trabajar con ellos."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hcTWq0qxKBhL"
      },
      "source": [
        "## Como podemos ver este dataset, esta balanceado a nivel general, pero debemos mirar como se comporta cada columna.\n",
        "* Veamos las caracteristicas de estos datos.\n",
        "Nota de aqui obtenemos Datacleaned\n",
        "\n",
        "---\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JjOxGhUc4WMP",
        "outputId": "59d977be-e8b2-45dd-dcbf-9b9cc01f8371"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "Number of duplicate rows: 4014\n"
          ]
        }
      ],
      "source": [
        "# Check for duplicates\n",
        "df_duplicados = pd.DataFrame()\n",
        "\n",
        "duplicates = df.duplicated().sum()\n",
        "print(\"\\nNumber of duplicate rows:\", duplicates)\n",
        "\n",
        "Xx = df.drop_duplicates()\n",
        "df_duplicados = Xx.copy()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7N_LK5p3cly2"
      },
      "source": [
        "Podemos ver como al eliminar los datos duplicados, se elimina en su mayoria información de las categorias con mas datos. Es decir que no perdemos información relevante, por ello se toma la decisión de eliminarlos."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mdevppk-Zp_2",
        "outputId": "da8e6887-9641-4f0b-cf1f-2b4401493479"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Comparar distribuciones\n",
        "for column in df_duplicados.columns:\n",
        "    if df_duplicados[column].dtype == 'object':\n",
        "        plt.figure(figsize=(10, 5))\n",
        "        order = df[column].value_counts().index[:10]\n",
        "        sns.countplot(x=column, data=df, order=order, color='blue', alpha=0.5, label='Duplicated')\n",
        "        sns.countplot(x=column, data=df_duplicados, order=order, color='red', alpha=0.5, label='Cleaned')\n",
        "        plt.title(f'Distribution of {column}')\n",
        "        plt.legend()\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.show()\n",
        "    else:\n",
        "        plt.figure(figsize=(10, 5))\n",
        "        sns.histplot(df[column], kde=True, color='blue', alpha=0.5, label='Duplicated')\n",
        "        sns.histplot(df_duplicados[column], kde=True, color='red', alpha=0.5, label='Cleaned')\n",
        "        plt.title(f'Distribution of {column}')\n",
        "        plt.legend()\n",
        "        plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XIqlxbn2rdzF"
      },
      "outputs": [],
      "source": [
        "df_duplicados =df_duplicados[['job_title','experience_level','employment_type','work_setting','company_size','company_location','employee_residence','salary_in_usd']]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FmETZKQREg6y",
        "outputId": "f7acd2b5-388d-4253-dc9c-86c779022f5a"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df_duplicados\",\n  \"rows\": 5341,\n  \"fields\": [\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"AI Engineer\",\n          \"Data Management Specialist\",\n          \"Business Intelligence Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Senior\",\n          \"Entry-level\",\n          \"Mid-level\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Part-time\",\n          \"Freelance\",\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hybrid\",\n          \"In-person\",\n          \"Remote\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"L\",\n          \"M\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          \"Mauritius\",\n          \"Germany\",\n          \"Bosnia and Herzegovina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employee_residence\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"Turkey\",\n          \"Germany\",\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66594,\n        \"min\": 15000,\n        \"max\": 450000,\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df_duplicados"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-1f3167c4-4d23-40e4-88cf-6c0d16481063\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "      <th>company_location</th>\n",
              "      <th>employee_residence</th>\n",
              "      <th>salary_in_usd</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Data DevOps Engineer</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>L</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Germany</td>\n",
              "      <td>95012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>186000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>81800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>212000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>93300</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f3167c4-4d23-40e4-88cf-6c0d16481063')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1f3167c4-4d23-40e4-88cf-6c0d16481063 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1f3167c4-4d23-40e4-88cf-6c0d16481063');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8519b506-f8d1-46fd-ba20-0c8a40d6b7e8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8519b506-f8d1-46fd-ba20-0c8a40d6b7e8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8519b506-f8d1-46fd-ba20-0c8a40d6b7e8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "              job_title experience_level employment_type work_setting  \\\n",
              "0  Data DevOps Engineer        Mid-level       Full-time       Hybrid   \n",
              "1        Data Architect           Senior       Full-time    In-person   \n",
              "2        Data Architect           Senior       Full-time    In-person   \n",
              "3        Data Scientist           Senior       Full-time    In-person   \n",
              "4        Data Scientist           Senior       Full-time    In-person   \n",
              "\n",
              "  company_size company_location employee_residence  salary_in_usd  \n",
              "0            L          Germany            Germany          95012  \n",
              "1            M    United States      United States         186000  \n",
              "2            M    United States      United States          81800  \n",
              "3            M    United States      United States         212000  \n",
              "4            M    United States      United States          93300  "
            ]
          },
          "execution_count": 92,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_duplicados.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8_EOjFjYJTjT",
        "outputId": "0692e292-ac05-446f-9fbd-c3b79e94eb23"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Número de filas y columnas: (5341, 8)\n"
          ]
        }
      ],
      "source": [
        "print(\"Número de filas y columnas:\", df_duplicados.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "erDr_0nHJ2Gb",
        "outputId": "54284055-5723-41ea-c8df-63e75296b35b"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Número total de elementos: 42728\n"
          ]
        }
      ],
      "source": [
        "print(\"Número total de elementos:\", df_duplicados.size)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0xoGMwY1J5NN",
        "outputId": "3c073bd0-6ffa-4efb-a8cb-186f9dd3f38a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Número de valores nulos en cada columna:\n",
            " job_title             0\n",
            "experience_level      0\n",
            "employment_type       0\n",
            "work_setting          0\n",
            "company_size          0\n",
            "company_location      0\n",
            "employee_residence    0\n",
            "salary_in_usd         0\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "print(\"Número de valores nulos en cada columna:\\n\", df_duplicados.isnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UwEsVVtfJ9vN",
        "outputId": "45cc8840-95a7-40f7-91c5-a77e8ae734e1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Número de valores no nulos en cada columna:\n",
            " job_title             5341\n",
            "experience_level      5341\n",
            "employment_type       5341\n",
            "work_setting          5341\n",
            "company_size          5341\n",
            "company_location      5341\n",
            "employee_residence    5341\n",
            "salary_in_usd         5341\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "print(\"Número de valores no nulos en cada columna:\\n\", df_duplicados.notnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qfTKZ0x9-Eab"
      },
      "outputs": [],
      "source": [
        "\n",
        "# Optimize data types for memory usage\n",
        "df_duplicados['job_title'] = df_duplicados['job_title'].astype('category')\n",
        "df_duplicados['experience_level'] = df_duplicados['experience_level'].astype('category')\n",
        "df_duplicados['employment_type'] = df_duplicados['employment_type'].astype('category')\n",
        "df_duplicados['work_setting'] = df_duplicados['work_setting'].astype('category')\n",
        "df_duplicados['salary_in_usd'] = pd.to_numeric(df_duplicados['salary_in_usd'], downcast='integer')\n",
        "df_duplicados['company_size'] = df_duplicados['company_size'].astype('category')\n",
        "df_duplicados['employee_residence'] = df_duplicados['employee_residence'].astype('category')\n",
        "df_duplicados['company_location'] = df_duplicados['company_location'].astype('category')\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mu5oaMdwl5GF"
      },
      "source": [
        "Vamos a graficar para ver donde se estan concentrando los datos y si tenemos datos que nos puedan producir overfitting"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3VcsEvIVkI9J",
        "outputId": "e831ff34-df63-4174-f480-2d55e095d817"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"2ffd3b79-bf32-4ca0-a3b3-115457e12357\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2ffd3b79-bf32-4ca0-a3b3-115457e12357\")) {                    Plotly.newPlot(                        \"2ffd3b79-bf32-4ca0-a3b3-115457e12357\",                        [{\"alignmentgroup\":\"True\",\"boxpoints\":\"all\",\"hovertemplate\":\"salary_in_usd=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x0\":\" \",\"xaxis\":\"x\",\"y\":[95012,186000,81800,212000,93300,130000,100000,224400,138700,210000,168000,224400,138700,43064,36912,95000,75000,300000,234000,140000,120000,204500,142200,155000,110000,266500,152000,222200,136000,273400,182200,167500,106500,185900,129300,185000,79600,122000,94500,247300,139700,176000,100000,204500,142200,247600,127300,223400,186200,167500,106500,185900,129300,72000,64000,179820,143860,283050,188700,133000,58400,141298,115607,100000,266500,144400,71363,55368,287500,156000,90000,70000,199000,162000,170884,113923,184000,123000,235750,174250,165000,118800,225000,150000,213900,116800,220000,150000,150000,100000,247500,172200,155000,120000,226700,133300,184000,123000,130000,117000,160000,140000,166000,73000,185900,129300,130000,104000,143000,116000,220000,180000,215000,200000,253000,131000,220000,176000,49216,36912,210000,147000,186000,161000,205000,220000,190000,137000,110000,172000,146000,148000,99000,150000,105000,99000,52500,180514,108308,210000,147000,290300,196685,220000,176000,175000,130000,185000,150000,145000,115000,133000,58300,115000,95000,110244,39372,43187,31310,92280,67672,75577,303387,100017,230300,140000,124935,76050,224800,131100,258000,171000,196000,121000,195800,171500,166000,73100,220000,160000,85000,65000,220000,100000,185000,152000,48585,38868,220000,100000,110000,80000,36912,150200,71000,167200,133000,58400,135000,110000,104584,73824,187415,114080,166000,73100,306400,168700,32974,165000,140000,150000,167000,121000,190200,95100,133000,58400,90000,70000,73100,135000,100000,180514,108308,294000,192000,266000,167000,200000,150000,163800,88200,180400,138800,67672,55368,319000,206000,215000,142000,266000,167000,140130,84870,178300,105400,215000,142000,240000,210000,150000,116000,90000,145000,128000,154000,126000,240000,157250,219650,136000,180000,125000,247600,127300,60000,55000,250000,125000,190000,170000,202600,168800,132000,111000,203000,127000,125009,83339,112200,91800,200000,160000,161952,160000,133000,58300,254000,159000,170000,85000,130500,116000,81400,43500,169000,92000,166000,73100,190000,165000,305600,146600,150000,120000,275000,146400,208500,165000,258700,172500,185000,198200,110200,166000,73100,212000,93300,212000,93300,166000,73100,167100,111400,166000,73100,170000,145000,170000,135000,139810,95325,278700,159300,226700,151100,247300,139700,188000,139000,160000,94000,127000,65000,276000,174000,260000,136000,250000,210000,238000,212000,190000,261500,134500,239000,122900,158500,115000,331640,267720,180000,90000,83000,66000,224250,121550,109000,100000,205400,92900,220000,130000,160000,110000,230000,186030,110200,130000,100000,242000,106200,220000,120000,91200,58200,192000,178000,210000,130000,160000,150000,206000,134000,180000,135000,200000,120000,212000,93300,106700,57700,266400,173300,125000,100000,165600,65800,210400,170500,170000,160000,185400,81536,193000,158000,170000,100000,95000,75000,115000,105000,161900,80000,192500,100000,75000,91000,216600,166000,73100,336300,179000,296400,159600,258500,226500,247250,118400,160000,140000,93400,172256,123040,219000,132000,130500,116000,323300,184700,250000,200000,136000,91000,143000,78000,135000,110000,142000,102200,137500,81500,202000,147000,140000,125000,170625,127950,123040,86128,85256,71615,100000,100000,185000,125000,60000,52000,300000,260000,225000,170000,100000,80000,204500,142200,297300,198200,240000,185000,79600,222200,110000,95000,324000,159000,207700,133700,71000,57000,59000,50000,234000,208000,187000,128000,50000,64781,57223,21000,135000,120000,150000,140000,280000,190000,43064,245700,132300,90000,80000,212000,93300,58300,145640,84400,300000,195000,190000,107500,105000,75000,98000,236160,159408,115000,85000,145000,120000,120350,74400,158494,88052,181500,127000,300000,260000,25000,225300,197400,205500,128500,191600,125600,130410,92000,183900,108800,275000,121200,231250,111000,300000,130000,210500,105300,158400,85800,156100,100400,134200,103200,85000,220000,160000,95000,95400,57800,86000,125000,87500,170000,133200,84000,171000,93000,216450,123750,212800,124100,205000,166000,231650,189100,160000,120000,266875,128250,158600,115300,225300,197400,109900,61200,161000,75000,166000,73100,138510,95490,150000,110000,232200,133300,121788,79032,178250,110500,190000,160000,216000,184000,166000,104000,230000,196000,165600,65800,186000,81800,135000,82500,247250,169000,105500,195800,161900,108500,78800,225000,166000,160000,110000,120000,105000,87500,135000,100000,105000,95000,289800,214200,167500,106500,146000,128000,81500,370000,200000,175000,160000,240000,100000,180000,143000,127000,249300,149300,190000,160000,248100,145900,170200,83900,166000,90000,94100,226600,140100,156000,124000,132600,308000,190400,155000,136000,75000,214500,132600,111000,104000,85000,75000,180250,118000,212800,111600,157500,132500,75000,93918,51962,171000,152000,223600,115000,140000,110000,130900,72700,333500,144000,180000,118200,354200,221800,73000,156600,137200,149000,65300,187000,180000,119636,70374,105000,67000,102000,94770,133000,58400,169900,164100,305600,75000,37573,36940,180240,120160,93400,119000,71400,115950,69570,225100,140900,179000,144000,250800,167200,144000,76000,230000,180000,156450,119200,150000,130000,247500,172200,155000,125000,175000,97500,220000,185000,303050,202350,21593,201650,124600,93400,145000,110000,89500,65000,328400,205600,184800,85000,61800,70748,67056,116000,72500,215000,169850,225000,180000,147400,107682,225300,197400,160000,136000,204600,126500,210000,115000,86500,40400,329700,192351,280000,106700,97000,175000,150000,88000,60000,123000,93593,222405,172800,205600,105700,263500,189360,192000,124000,230000,124000,148500,82500,184800,310000,206000,372000,223000,172256,123040,131000,148500,82500,233500,146000,280889,187259,305100,146900,78800,44100,166000,73100,80000,150000,80000,110000,202800,104300,272400,140100,154000,103000,80750,48450,85600,57000,190400,112000,119636,70374,304750,98873,58161,138000,85500,307100,216800,153600,106800,250000,280000,180000,160000,130000,162000,164640,131712,74800,63600,92280,67672,140000,253792,158620,259900,139200,118118,79976,293000,185000,115500,70000,142000,102000,141600,121400,240000,55000,49000,135000,200000,180000,246080,184560,168000,105000,70000,100000,243000,152000,79976,115600,79700,281700,141100,173100,86900,258700,133800,225300,197400,157000,125000,208000,134000,140000,65000,188200,49216,110000,73400,183414,97200,299000,187000,66000,140000,170200,83900,101570,177000,118000,234500,127000,114979,287500,168000,155000,153000,136000,254000,214500,134500,136000,104000,143000,117000,110000,73824,55368,370000,200000,275300,183500,230000,196000,253000,172040,234000,178000,164000,109238,68274,57223,51824,80800,53800,258900,176080,120000,110000,309000,65000,60000,132100,68400,160000,140000,62500,142000,128000,155000,139500,221000,129000,259000,138750,100000,155000,130000,215000,182750,207000,141000,90000,36000,300000,116700,93400,80000,50000,179000,176490,195000,143750,180000,162000,199000,196760,90000,70000,324000,159000,222000,50000,70179,110000,75000,46426,38868,80000,150000,130000,126500,78000,250000,222000,120000,204500,142200,297000,138000,147600,106300,102586,79981,131250,128100,174500,113000,56500,38868,227000,185000,230000,160000,138300,110700,130000,80000,212175,156000,111151,66691,190000,138700,95040,59400,197802,156453,308000,144000,172000,140000,89819,72593,122400,80000,70000,90000,227500,147500,150000,50000,73824,55368,220000,180000,331640,267720,190000,130000,150000,50000,172200,131200,250000,100000,165000,155000,280000,200000,73824,67672,290000,173200,235000,204000,300000,222000,155000,105000,287500,212500,190027,152022,19434,131000,88000,198000,132000,125000,115000,145000,130000,170700,113900,185000,81000,123000,80000,75000,53000,48000,369120,73824,125000,190000,115000,194000,175000,185000,160000,185000,50000,70000,130916,120000,160000,218213,178538,316000,202000,189750,119213,162000,130000,170200,83900,250944,205318,125000,135000,114000,218213,178538,240000,163200,258800,199200,215625,159375,203000,133000,272400,140100,282000,208000,93919,51962,211000,118800,75000,159350,130100,262000,245000,205218,136743,185000,94600,160000,107000,264400,176300,275000,175000,76000,53984,43187,150000,125000,210000,210000,169500,138000,180000,120000,297300,198200,204500,138900,110400,68000,260600,63750,46400,214872,186846,95000,70600,149500,127075,162000,111000,280000,182750,196000,142600,193000,110000,245000,80000,70000,250000,225000,61520,49216,205000,240000,220000,297300,198200,156000,196500,97300,192000,164000,227700,154836,140000,285000,190000,405000,270000,214300,108500,145000,115000,130000,113000,194500,110250,295000,177300,55368,44294,192000,164000,220000,187000,353200,249300,85000,79000,131000,220000,163000,107400,101500,80976,300000,100000,175000,164000,211000,276000,184000,115000,167000,144000,96000,145000,116000,161000,116300,140000,125000,175564,144854,225000,166000,190000,150000,151300,126100,190000,152000,190000,150000,180000,125000,113000,90400,204300,139000,124000,157000,212800,111600,183000,147000,169000,91000,210000,160000,70900,193000,128000,275000,243000,174500,113000,80000,145000,115000,202000,96313,250000,48585,43187,204000,127500,145500,108000,206000,175100,122500,82500,95000,130000,217000,192000,90000,60000,350000,168000,234900,113500,385000,245000,255000,170200,83900,202500,177500,150000,155000,130000,240000,170200,83900,300000,150000,300000,150000,213600,103200,230000,153000,127500,250000,385000,310000,88000,158000,108000,310000,129192,98432,369120,40680,306000,204000,75577,18000,369120,270000,200000,204500,142200,92280,188600,111550,360000,240000,129100,111400,135000,242921,170045,175000,90000,156450,119200,154800,76300,178600,88600,207345,180300,205000,167500,228045,198300,140000,100000,78125,40423,140000,100000,125000,120000,127000,99000,120000,194500,132320,223602,143520,180000,140000,121809,83667,140000,154000,103000,90000,140000,100000,296100,144500,118600,96800,100000,48585,142000,128000,99500,53300,165000,172000,125000,250000,245000,234900,68400,139000,172000,125000,139600,85700,100000,143000,95000,330000,188000,238000,156000,145000,106000,172256,123040,269100,131300,220000,150000,73824,61520,252990,162170,260000,235000,190000,145000,212800,111600,130000,194521,176838,200000,170000,191765,134236,198800,90700,154800,76300,130000,115000,42107,200000,155000,115500,73500,179000,109000,221000,180000,233300,155500,306000,180000,212800,115100,117500,86720,150000,90000,70000,212800,111600,135000,110000,175000,208450,151600,324000,159000,155000,135000,223250,156275,220000,245000,185000,67500,46500,270000,232200,43187,78000,370000,178200,115000,204000,143000,95000,240000,156400,168000,112000,253430,212780,265800,165500,193000,134000,180000,150000,120681,72409,180000,139750,254000,260000,192000,272290,169374,195000,204500,142200,17000,181500,112200,150000,100000,250500,166600,247500,172200,223290,131310,44753,35000,53984,204500,142200,220000,140000,135960,70960,128750,86250,110736,92280,185100,133300,150000,75000,130000,73824,61520,85000,80000,70000,260000,105000,80000,150000,95000,204750,153550,141000,175000,120000,207611,127876,170000,144500,255360,212800,106400,81800,130000,69139,100631,80505,300105,151090,217600,145000,79976,55368,129000,185000,50000,108000,80000,59500,173400,215000,153000,210398,147648,60000,54000,202000,132000,73824,81206,330000,188000,110000,190000,170000,150000,125000,105000,90000,73000,150000,135000,329500,269600,156400,185900,129300,146000,97000,147100,90700,257000,197000,120000,84800,135344,98432,246080,184560,53120,33686,260000,225000,340000,213600,142400,125000,85000,207900,158400,385000,200000,241300,211949,115000,90000,172200,131200,123800,240000,142500,34924,330000,204000,180000,160000,193600,130838,225500,139400,328133,218755,250830,143370,260000,203500,166500,148350,87400,157550,104650,139500,118575,129150,98400,67672,98010,66825,190000,170000,170000,120000,229000,131000,104584,92280,192000,164000,223800,172100,258800,199200,185000,148000,193600,119700,175750,136742,257400,193500,228856,144540,140000,155000,125000,150600,120500,176000,200000,115500,73500,135344,98432,225000,172758,86128,67672,51676,43064,245000,194992,140000,213800,180300,375500,250300,262269,230797,147100,90700,185000,145000,123040,92280,98432,62442,90000,195000,73500,185000,145000,158900,132400,140000,130000,100000,163800,126000,111967,88000,216027,101028,309400,159100,174350,126800,262000,186000,129000,95000,175000,120000,29691,130000,105000,232200,119000,268000,153300,104244,145000,226000,70000,198800,122600,181500,127000,210000,120000,385000,245000,225000,175000,110019,86682,131650,105320,210000,151800,147500,112500,163200,65000,55000,165400,127300,107968,32811,145000,135000,126900,77900,110736,92280,169000,110600,150000,140000,162000,195000,160000,154000,82000,160000,145000,239400,136800,204500,142200,230000,323300,184700,120000,210000,136000,171250,113750,195000,142000,185900,129300,194100,152300,190000,120000,240000,157250,212000,194400,132192,174000,134000,38868,152000,144700,85500,38868,265800,177200,222000,115920,250000,64781,284310,153090,204500,142200,111000,213210,102434,226600,140100,156400,250000,176000,80000,233400,145300,248000,149000,156450,119200,185000,120250,225000,152700,64781,139152,82452,85000,65000,139000,200000,145000,269500,295500,165200,235000,135000,180000,144000,49216,43064,65000,160667,27568,304200,173800,191765,134326,173000,258384,153100,70000,146200,116960,370000,111600,72000,359170,295490,90000,90000,84000,110000,90000,70000,253000,115000,85000,145900,127000,95000,94600,86000,72000,60000,104000,173650,113900,126000,139500,110000,248100,145900,220000,175000,175000,108000,115000,110000,182500,135000,35000,146000,94000,300000,91000,86000,205500,132500,180000,97750,75000,252990,162170,216000,184000,120000,67500,86128,61520,140000,265000,153000,143000,126277,224500,126900,227700,154836,126000,165000,209000,112500,110000,370000,136000,104000,214000,154000,205000,157500,178000,109283,189000,137000,120000,170500,118575,97712,24940,154500,131325,140000,100000,138240,207500,172900,254000,147100,90700,90000,168400,105200,237000,170112,25912,134960,155000,130000,105000,70000,260000,234000,330000,204000,167310,121000,175000,125000,325000,171000,180000,137000,155810,106720,160800,132200,133000,113000,208400,157550,104650,240500,123700,78000,121000,78000,85600,48915,68000,53444,45150,275500,206000,56359,47799,102000,228000,180000,175000,16455,207611,127876,111000,104000,128000,81500,61520,43064,97750,192000,92000,195000,132600,81500,202400,147200,239000,54000,36000,176000,118720,95000,240000,157000,165000,136000,272300,222800,172750,82500,281000,181000,207611,127876,225000,168000,280600,158600,283780,218540,178500,323300,184700,123040,104584,185000,137700,205500,132500,65100,44640,161000,123000,200000,278700,159300,125000,65000,230000,175000,252990,162170,183000,122000,310270,239080,70000,135000,125000,253000,172040,135000,108000,129562,50000,227850,180500,199000,159000,350000,80000,240000,160000,107500,96750,174000,104000,275300,183500,250000,174350,126800,284050,193800,232989,85000,204500,138900,168400,105200,147100,150550,116710,147100,90700,120000,147100,90700,125000,100000,198800,105200,150600,120500,183000,167500,106500,239000,149000,122000,181500,127000,186000,138000,185000,122000,140000,112000,36000,91270,180000,165000,247000,118440,138900,297300,198200,110736,86128,204500,138900,87500,62500,244000,157000,136000,90600,49216,43064,160000,91773,315300,210200,177000,110000,65000,55000,183200,122200,150000,131000,101000,171050,124400,187000,128000,138000,92000,200000,138000,92000,120000,241300,124100,185000,152000,288000,107968,90599,189750,145000,252000,82254,61699,247500,172200,87500,62500,146000,108000,273000,166500,65000,45000,174000,189750,119213,190000,140000,228830,148590,140000,180514,108308,220000,170000,169000,110600,77737,64311,78000,75577,62433,204500,142200,64781,94000,81900,199000,162000,67672,208000,109500,240000,238530,95000,82000,80000,70000,154700,118900,232960,166400,156000,105000,193000,143000,138860,119610,205485,156560,210600,135000,170000,105000,135000,100000,100000,70132,51676,92280,79976,15000,64781,144100,89100,140000,100000,193600,119700,94000,81900,131721,180000,120000,242000,134000,104000,258800,199200,201000,141100,94100,126000,170000,104584,208500,165000,77737,86374,169000,110600,130800,87200,215000,61520,49216,238000,173000,205785,123471,299500,245100,40000,71259,290000,226000,161000,151000,53120,38868,136994,214500,120000,278300,205700,185900,167310,114000,194000,161000,32390,184950,119250,178500,136000,189000,159090,82000,149076,82365,194595,158000,305000,245000,205485,156560,168000,78400,175000,130002,71908,212000,132000,177000,148000,248100,145900,155000,38000,218000,235400,108320,152375,115934,81666,79000,273400,182200,160000,112000,285000,154000,220000,170000,200000,250000,125000,275000,200000,177000,136000,122720,231500,118000,299500,249600,297000,138000,267100,167200,188500,117000,150931,143250,231000,157250,240000,157250,232000,277300,213300,209000,184250,167500,85000,110736,92280,154440,68550,90000,60000,226600,140100,49216,41833,80000,52500,253000,156400,235000,223100,114700,172800,110000,152375,94000,183000,125000,120350,74400,134000,57007,44051,258750,172500,220000,150000,109528,287500,207500,134200,103200,160000,93919,180000,186600,119800,200000,383910,315850,198000,132000,141600,94400,209450,167560,185000,164000,80000,52500,238000,149500,186600,116500,61520,175000,145000,195000,220000,190000,113366,118539,86128,146000,97400,40747,166364,116455,145000,125000,76000,131000,222000,166500,205600,105700,138000,67000,211200,230000,60000,200000,180000,18381,200000,120000,126500,78000,157750,104650,133000,70000,40000,190000,158080,182000,252000,129000,231000,200800,159100,120160,140000,110000,165000,149094,290000,247500,172200,72250,162500,23753,83000,63967,188600,111550,219300,143000,133300,80000,204060,140358,198900,183310,43064,392000,224000,233000,199098,172000,107000,128000,81500,208450,151600,240960,200800,120681,72409,250000,176000,250000,170000,38290,215936,178560,148800,331640,283780,167954,115830,125000,185000,50000,331640,283780,189110,139000,199000,145000,199000,142000,230000,170000,66000,52000,200000,178560,148800,200000,166500,113220,365630,229000,185000,86700,192300,153800,67419,131650,105320,126400,235400,160080,146190,175000,228856,144540,151800,150000,100000,126500,78000,126500,78000,70000,300000,200000,96000,72000,205150,167850,222750,182250,104024,50745,148594,206000,140250,254500,130900,198000,124000,234485,112655,125000,51676,70179,64781,258000,190000,184184,167441,74087,32390,204500,90000,84000,202400,147200,139500,90000,192000,142000,143000,129000,191000,85000,70000,147648,98432,144800,250000,16000,27000,72000,172900,144100,160000,135000,101500,83700,283000,184000,220000,185000,246500,133500,174000,134000,330000,230000,167000,109000,47899,115000,145000,284000,227000,205000,160000,191400,127600,230000,95000,70000,258000,171000,87000,73000,20000,300000,110736,55368,151840,163152,108768,285000,193900,345000,234700,100000,40000,241000,210000,90000,59382,90000,84000,160000,221300,147500,210000,160000,192000,151000,169000,204500,142200,210000,170000,72000,60000,210000,159090,94400,90000,190000,125000,130002,71908,60000,81838,60000,255000,116990,82920,159000,105000,155000,102000,374000,197500,187000,20000,195000,119000,266450,177700,55720,50700,56000,135000,115000,302000,189000,220000,150000,93000,190000,46565,216000,184000,100000,128750,79350,155000,125000,273400,182200,165000,142500,213654,142436,124230,68637,204000,161500,185900,129300,148750,95000,287700,148000,227240,197600,178500,146100,112400,86128,79976,285000,90000,146000,237400,158200,192000,164000,150000,141000,267000,147100,90700,72000,177177,240000,142000,180000,105000,80000,60000,268000,144628,115702,144000,132000,106400,81800,93500,208200,151200,270000,194500,115500,140000,100000,225000,199000,50000,40000,98432,399880,41027,155000,100000,65000,280100,168100,120000,149040,113900,165000,145000,274450,199600,83500,52500,140000,76500,280000,250000,180000,157000,140700,109600,278000,173000,305000,125000,155000,120000,24000,165400,127300,259000,138750,218000,85000,132000,71500,215050,113100,130000,85000,250000,200000,168400,136505,100895,275300,183500,168400,105200,240000,120000,93000,237400,132870,105000,317070,170730,170000,125000,158700,123906,80976,66940,333500,180500,76284,257400,210600,65000,50000,293000,260000,192000,170000,125000,99000,233000,185100,127600,105000,160000,55000,241000,163000,120000,218000,118000,311000,162540,258750,225000,145000,153600,106800,140000,76500,182850,113000,126000,86400,232760,169280,162500,240350,174800,116000,153600,107500,94100,72400,178000,152000,233200,210000,160000,206000,130000,146100,112400,110000,70000,150120,120096,168000,178600,142880,255000,169000,155000,151410,144200,151410,115360,193170,116480,146000,94000,246080,203016,135344,110736,329500,269600,250500,159500,115000,94035,57920,113600,60000,256000,116000,245000,210000,283200,188800,36000,205640,142600,193200,156400,121000,72000,48000,132300,197000,328000,211000,237000,201450,229000,206000,231000,183750,165400,175000,152900,117700,285800,154600,289120,192400,179998,35000,258000,196000,121000,141000,206000,192000,164000,300000,260000,147000,92000,110000,261500,134500,83200,204500,142200,275300,183500,147648,123040,136600,109280,84000,60000,61520,70000,60000,281000,69500,285000,69525,61800,192000,178000,152000,160000,40000,130000,110000,225000,168000,130001,71907,144000,80000,205000,150000,189400,131685,204500,142200,172000,60000,77791,55410,57000,120000,277500,150000,236500,172800,110000,60000,100000,323905,150000,100000,62000,55000,155000,140000,36000,144000,77000,110736,55368,265000,217000,177300,136300,83000,208450,170550,72000,60000,130000,165000,145000,336400,201900,189750,131100,270000,95000,117300,69000,182000,144000,244000,200000,260000,225000,102500,186600,116500,80000,60000,222000,138000,207300,149200,292000,164500,292200,163800,126000,120000,280000,210000,150000,200000,170000,225000,175000,189750,131100,123400,82200,225000,50000,161800,121400,285000,193900,240000,196000,214000,170000,155000,98000,199000,260000,105066,110736,86128,145000,289800,214000,87500,165000,280830,173175,92280,49216,75038,64781,71475,61541,231250,138750,155000,242000,195000,155000,125000,160000,140000,183924,125760,430640,86374,30000,25500,175000,120000,219000,141000,213660,130760,275000,174000,143200,90000,72000,253200,342810,184590,105380,64500,30000,204620,110680,270703,221484,212750,218500,199098,203300,123600,231500,166000,172500,110500,238000,176000,237000,201450,193500,139000,150000,70179,97171,185900,129300,163196,145885,202800,104300,179170,94300,152500,116450,133800,220000,56536,214000,283200,188800,161800,141600,342300,176100,85000,65000,138784,83270,70000,318300,212200,230000,143200,105000,46755,43064,168400,105200,55368,43064,220000,67672,15000,86128,58444,85000,75000,250000,186000,230000,200000,53984,205000,180000,215000,170000,224000,176000,67635,74883,100000,80000,162500,200000,115000,239000,122900,237000,191765,134236,190000,112000,88256,105500,293000,148500,152900,117100,173000,113000,175000,110000,110000,205000,149500,127075,219535,146115,221000,153000,187000,179000,109000,142000,198800,105200,112000,115000,86000,106000,275000,50000,280700,150450,51861,93918,51962,175000,135000,257000,222000,133200,221000,147000,238000,156000,304000,48585,198340,104055,183600,130000,160000,120000,289076,202353,157750,104650,180000,200000,68000,60000,90000,155000,125000,181000,252000,154000,180000,155000,64200,56100,135000,171250,113750,153600,100500,115000,182500,121500,203100,114500,92700,167500,106500,59888,286000,207000,178600,230000,220000,210000,151800,317070,170730,21593,108000,60000,134000,124000,124500,175000,148700,125600,120000,185000,120250,183000,125000,135000,143865,115092,90000,173000,132000,208049,128500,149600,102000,100000,190000,106800,97171,80976,151000,43187,145000,154000,143000,79976,190000,120000,110736,111000,265000,235000,122638,73546,75000,60400,172309,60462,83500,52500,201036,134024,62000,58000,172000,115000,125000,90000,139500,109400,145000,239748,159832,186300,102500,149040,113900,153600,106800,172600,107900,180180,106020,376080,213120,206500,121600,170000,90000,95000,70000,120000,175000,206000,65000,48000,87000,145000,115100,73900,86128,58444,130000,205000,141288,94192,184000,143000,160000,147000,74883,70000,80000,210914,116704,185700,165000,193000,136850,139500,109400,276000,59382,48585,75577,48585,198094,102492,138666,102492,130000,150000,260000,110000,170000,130000,163800,126000,106250,167500,106500,250000,138000,130000,100000,124163,104500,70000,90000,70000,125000,127000,210550,153300,200000,161500,119500,105000,85000,215000,146300,215936,72000,60000,153400,122700,123900,340000,150000,64781,185900,121700,50000,100000,310000,239000,150000,149076,82365,85500,97750,116990,82920,200000,125000,155000,140000,205920,171600,121500,78000,116000,79976,44356,180000,200000,129192,104584,30000,185000,125000,34320,75577,106000,122000,93800,150000,90000,220000,72338,64781,40000,152380,121904,168400,105200,128280,106900,192000,100000,107968,86374,275000,174000,170500,73857,55044,162288,129058,80000,65000,124740,65488,72200,64980,179975,86466,175000,120000,230000,120000,205920,171600,265000,130000,168000,38868,167580,87980,104000,65000,230000,269000,158000,197000,106000,150000,100000,290000,192000,172800,300240,200160,140000,169000,100000,116888,110000,80000,55000,48000,137500,81500,30000,186000,153088,190000,160000,190000,183310,66000,148500,126277,228000,180000,90000,272000,170000,259000,110736,73824,18160,19910,247500,172200,107968,75577,288000,73824,61520,215050,198000,114000,209300,182200,85000,49216,120000,60000,147100,90700,227000,160000,56143,51824,60000,50000,153799,52500,250000,162500,165000,124000,63000,253750,169200,170000,120000,213580,163625,375000,102569,210000,231250,138750,284310,153090,110736,86128,100000,225900,156400,385000,241871,133832,36000,123040,98432,216100,140800,147648,53984,110000,63980,284000,236000,248100,145900,155850,102544,151410,115360,59382,125948,100000,185000,120250,26992,180000,85000,70000,100000,155000,140000,220000,204500,138900,23000,110000,182750,137500,314100,195800,205000,180000,165000,144000,160000,100000,199000,112000,130000,160000,135000,183000,350000,262500,122000,158677,103200,61200,155000,66970,63701,174500,113000,87000,108000,107250,119000,285800,154600,30000,220000,195000,168400,200000,153000,94000,90000,124234,74540,109000,84053,50000,125600,141290,74178,107500,52500,84000,125000,110000,200000,135000,48000,120000,200000,80000,257000,77737,38868,140000,53984,51824,41027,183310,102500,122000,94000,182000,77737,38868,300000,105500,110000,79976,44356,153400,122700,87000,50000,234100,203500,232200,167200,197000,106000,180000,145000,225000,200000,114000,291500,196200,150900,95000,80000,116000,72000,207000,167000,145000,135000,133800,96100,140000,100000,140000,115000,219000,126100,72000,175000,240500,137500,187500,165000,73824,25216,165750,225000,165750,110367,67979,115000,275000,175000,175308,100706,235000,135000,289076,202353,70179,37788,120000,231250,138750,100000,150000,120000,133000,272550,198200,187500,155000,64000,235000,185000,143100,113000,142000,180560,115440,120000,110000,76284,63980,141600,59059,46755,128000,236000,130000,125000,175000,155000,153600,106800,150000,140000,122000,94500,170000,130000,145000,128000,145000,100000,120000,115000,150000,150000,100000,150000,127500,126500,51000,260000,175000,40000,40000,250000,63000,210000,160000,272550,198200,94560,52533,220000,146000,248400,183600,150000,40000,120000,95000,160000,135000,24165,216000,144000,85000,65000,149000,119000,120000,150000,110000,246000,201000,190000,155000,235000,185000,190000,160000,100000,130000,115000,92350,67723,105000,70000,204500,142200,192000,164000,185900,129300,75000,175000,120000,167500,106500,75000,60000,184000,142000,145000,100000,44365,200000,145000,92350,73880,192000,164000,310000,239000,120000,95000,145000,135000,78000,73546,36773,160000,120000,125000,95000,47280,37824,115934,81666,175000,140000,249500,149850,122500,100000,249500,149850,55000,48000,249500,149850,58837,190000,120000,127000,104000,210000,150000,150000,210000,130000,182750,161500,102640,66100,210000,150000,198800,122600,130000,80000,136000,104000,150000,100000,159000,130000,215000,150000,187000,153000,255000,185000,430967,55410,50432,39925,169000,110600,60938,140000,120000,50000,134000,124000,166700,119000,124234,74540,100000,65000,200000,220000,146000,68293,110000,70000,190000,135000,128000,81500,173000,110000,192000,120000,190000,194000,129400,201000,89200,165000,125000,230000,196000,130000,90000,150000,100000,230000,150000,130000,180000,120000,192500,140000,152500,65000,55000,178750,160000,63040,165000,135000,170000,125000,105000,70000,130000,95000,203500,152000,197430,134760,120000,197000,99000,162000,110446,79178,70186,51716,149040,113900,95000,115000,171000,50000,185900,129300,230000,154600,75000,213000,152000,120000,110000,70000,227200,168000,64090,60938,243000,183000,150000,130000,90000,165000,124000,178000,132000,300000,116000,96000,92350,70186,105000,70000,105236,100000,189750,140250,130000,160000,109000,250000,150000,206000,135000,115573,73546,42026,191200,66192,230000,154600,80000,135000,110000,155000,140000,205000,179500,134000,145000,235000,175000,27317,90000,165000,135000,168400,105200,86193,49253,200000,198800,122600,100000,105066,104663,73880,125000,110000,148000,107000,100000,65000,63040,36773,299500,245100,168000,130000,161000,118000,205000,247500,172200,68293,177000,131000,146000,102000,80000,65000,61566,43096,175000,135000,80000,231250,138750,193750,116250,231250,138750,193750,116250,208000,127000,300000,196000,45555,205000,185000,247500,172200,110000,375000,225000,156400,104663,80036,140700,93800,350000,135000,104697,33000,34672,201000,119000,175000,154560,123648,170000,145000,135000,100000,247500,172200,177500,134000,192564,144854,179305,142127,315000,225000,243900,156600,79000,89306,182500,128500,77300,45600,110000,210000,136000,170000,140000,247500,172200,225000,184100,100000,85000,78000,161000,205000,160000,61566,49253,245000,180000,220000,198440,144000,240000,198440,144000,150000,57872,64000,39925,187200,116100,150000,127000,275000,166000,159699,138938,76000,103432,92350,80000,52500,236000,182000,180000,135000,240000,125404,195000,110000,123000,92250,180000,100000,97000,90000,180000,260000,180000,210000,157000,80000,52500,128000,81500,105000,70000,175000,122500,171000,117000,202800,104300,36773,30000,78000,48000,78000,42000,345600,230400,78000,48000,175950,130050,205600,105700,236600,84000,54000,80000,200000,73742,165000,33246,75050,108000,155000,38000,85000,65000,110820,92350,153600,106800,50000,123400,88100,120000,55000,150000,120000,139000,139600,85700,185000,50000,200000,148500,98200,115000,95000,225000,66000,134000,98000,105000,62000,57000,161311,144200,115360,83171,73546,42026,180000,160000,108000,200000,150000,125976,188700,160395,198440,144000,191475,141525,75648,156868,200000,69344,90000,126080,84053,200000,180000,108000,85000,165000,132000,130000,110000,45050,42028,135000,178800,132100,20000,140000,110000,160000,85000,250000,63000,187200,116100,145000,229998,154545,215000,159000,50000,183000,99750,68400,236900,159200,243225,179775,128000,191475,141525,218000,145300,195400,131300,105000,207000,153000,99000,200000,135000,195700,130500,130000,84000,100000,60000,80036,67723,141300,102100,150000,102200,144000,113000,31520,195400,131300,195400,131300,80000,60000,63040,50000,105000,190000,140000,180000,165000,108000,20000,179400,154000,193900,129300,222640,182160,150000,100000,122500,100000,297500,260000,15000,193000,93000,73000,136994,101570,57786,136000,112000,172000,215000,164000,45390,97500,212800,142800,73546,50000,151800,130240,165000,140250,179400,154000,75000,84053,73546,98506,86193,84053,73546,102663,80041,104611,82280,191475,141525,115000,31520,81000,66000,46000,80000,200000,180000,200000,204100,136100,250000,63000,118208,110820,19073,95000,70000,75000,113000,170000,113000,140000,50000,53368,29944,160000,119300,145000,90000,146200,124270,225000,160000,54634,185800,137400,245000,180000,203500,152000,250000,63000,186000,148800,128058,82000,110000,173000,186000,148800,158000,134000,200000,150000,216200,144100,115573,89306,250000,63000,135000,85000,206000,175100,189650,164996,154000,126000,200000,150000,135000,98506,73880,117000,99450,200000,135000,193900,129300,55410,86193,61566,175000,130000,188100,139860,248700,167100,50432,205000,141300,102100,50000,84053,61566,250000,63000,189500,140100,177600,131300,24000,202900,115000,115000,193900,129300,140000,216200,144100,216000,144000,150000,50000,250000,84053,131752,48000,260500,175100,55000,130000,77119,52008,206699,99100,200000,54000,130000,100000,80000,100000,221300,148700,30000,28368,91118,61566,60938,249260,185400,80036,128875,93700,100000,136260,109280,160000,92000,135446,104663,129000,86000,100000,25000,65257,200000,180000,153000,150075,110925,22800,22809,15000,133766,83000,186000,148800,112900,90320,240000,160000,300000,200000,65666,200000,116976,92350,120000,112900,90320,145000,105400,49268,215300,158200,209100,154600,115934,81666,155000,84053,164000,132000,123000,52533,115222,165400,132320,208775,147800,136994,101570,35093,183600,100800,49253,36940,42026,31520,42026,31520,215300,140400,63040,47280,260000,43096,63040,47280,55410,51064,60000,82900,63900,160000,112300,241000,159000,80000,58000,136000,108800,242000,200000,61566,36940,49253,165220,120160,124190,181940,132320,220110,160080,180000,120000,126500,106260,116000,155000,120600,130000,90000,170000,102100,84900,136620,99360,110820,98506,146000,43096,130000,110000,170000,161342,137141,167000,73880,61566,211500,138600,192400,90700,130000,61300,160000,113000,95550,167000,115500,243900,156600,136600,128875,93700,224000,167875,175000,135000,205300,176000,200100,70500,54000,205300,140400,205300,184700,175100,140250,116150,99050,85000,75000,214000,192600,266400,213120,141300,102100,206699,99100,110500,61566,43096,80000,60000,230000,150260,109280,160000,67000,52000,129000,69000,25000,126500,106260,220110,160080,105000,135000,50000,220000,172386,86193,220000,120000,200000,120000,65000,324000,216000,185100,104890,76814,117104,192037,120000,55685,52533,75000,157000,69133,65000,68293,109000,67597,20000,102839,200000,51081,83864,40000,31520,59888,54742,89306,83171,165000,153000,100000,76814,33609,75000,20000,30469,69999,55475,61989,152500,120000,135000,405000,150000,240000,135000,80000,380000,120402,177000,65141,48000,20000,220000,150000,90000,100000,100000,100000,144000,155499,24000,38400,100000,82500,49646,120000,84053,20000,125000,120000,110037,21013,50000,200000,60000,200000,100000,100000,82744,59303,62649,82528,170000,150000,55000,250000,80000,70000,130026,63831,68428,85000,230000,125000,120000,450000,46759,74130,127221,144000,75774,150000,103000,153000,90000,90000,60000,50000,270000,54238,47282,153667,28476,110000,82528,250000,59102,80000,138000,140000,79197,170000,80000,45760,100000,53192,235000,150000,79833,225000,76833,50180,88654,103160,113476,94564,150000,115000,187442,51519,106000,112872,150000,15966,95746,70000,76958,89294,276000,188000,160000,105000,174000,93000,60757,90000,70139,170000,96282,36643,72212,91000,99703,165000,80000,103691,42000,115000,63810,260000,110000,180000,200000,109024,200000,256000,110000,79833,72500,185000,69741,100000,112000,150000,20171,55000,58000,100000,77684,85000,76833,105000,72000,65013,28016,111775,93150,160000,25532,63831,190000,141846,71786,135000,24823,147000,96113,174000,135000,21844,125000,51321,69741,50000,39916,87000,26005,90734,81000,90000,61467,195000,37825,85000,416000,225000,56256,116914,46597,114047,88654,56000,28609,88654,47899,98000,66022,56738,24823,120000,20000,325000,200000,45896,160000,50000,40189,165000,42197,185000,62726,21669,110000,140000,120000,87738,61896,76833,74000,152000,18000,60000,130000,18907,59102,173762,148261,38776,46809,91237,62726,115000,235000,75000,62000,73000,45391,190200,118000,138350,130800,45618,168000,119059,423000,28369,165000,412000,151000,105000,100000],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Experience Level\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Salary in USD\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Salary Distribution Across Experience Levels\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('2ffd3b79-bf32-4ca0-a3b3-115457e12357');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig = px.box(df_duplicados, y='salary_in_usd',  points=\"all\", title='Salary Distribution Across Experience Levels')\n",
        "fig.update_layout(\n",
        "    xaxis_title='Experience Level',\n",
        "    yaxis_title='Salary in USD',\n",
        "    boxmode='group'\n",
        ")\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4JOfQzNwBife",
        "outputId": "d4c8a558-bad5-461e-bf5b-188523ff2474"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"d3be28f7-8ca0-495b-aa86-1fe9be2b969b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"d3be28f7-8ca0-495b-aa86-1fe9be2b969b\")) {                    Plotly.newPlot(                        \"d3be28f7-8ca0-495b-aa86-1fe9be2b969b\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"experience_level=%{x}\\u003cbr\\u003esalary_in_usd=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Executive\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[95012,186000,81800,212000,93300,130000,100000,224400,138700,210000,168000,224400,138700,43064,36912,95000,75000,300000,234000,140000,120000,204500,142200,155000,110000,266500,152000,222200,136000,273400,182200,167500,106500,185900,129300,185000,79600,122000,94500,247300,139700,176000,100000,204500,142200,247600,127300,223400,186200,167500,106500,185900,129300,72000,64000,179820,143860,283050,188700,133000,58400,141298,115607,100000,266500,144400,71363,55368,287500,156000,90000,70000,199000,162000,170884,113923,184000,123000,235750,174250,165000,118800,225000,150000,213900,116800,220000,150000,150000,100000,247500,172200,155000,120000,226700,133300,184000,123000,130000,117000,160000,140000,166000,73000,185900,129300,130000,104000,143000,116000,220000,180000,215000,200000,253000,131000,220000,176000,49216,36912,210000,147000,186000,161000,205000,220000,190000,137000,110000,172000,146000,148000,99000,150000,105000,99000,52500,180514,108308,210000,147000,290300,196685,220000,176000,175000,130000,185000,150000,145000,115000,133000,58300,115000,95000,110244,39372,43187,31310,92280,67672,75577,303387,100017,230300,140000,124935,76050,224800,131100,258000,171000,196000,121000,195800,171500,166000,73100,220000,160000,85000,65000,220000,100000,185000,152000,48585,38868,220000,100000,110000,80000,36912,150200,71000,167200,133000,58400,135000,110000,104584,73824,187415,114080,166000,73100,306400,168700,32974,165000,140000,150000,167000,121000,190200,95100,133000,58400,90000,70000,73100,135000,100000,180514,108308,294000,192000,266000,167000,200000,150000,163800,88200,180400,138800,67672,55368,319000,206000,215000,142000,266000,167000,140130,84870,178300,105400,215000,142000,240000,210000,150000,116000,90000,145000,128000,154000,126000,240000,157250,219650,136000,180000,125000,247600,127300,60000,55000,250000,125000,190000,170000,202600,168800,132000,111000,203000,127000,125009,83339,112200,91800,200000,160000,161952,160000,133000,58300,254000,159000,170000,85000,130500,116000,81400,43500,169000,92000,166000,73100,190000,165000,305600,146600,150000,120000,275000,146400,208500,165000,258700,172500,185000,198200,110200,166000,73100,212000,93300,212000,93300,166000,73100,167100,111400,166000,73100,170000,145000,170000,135000,139810,95325,278700,159300,226700,151100,247300,139700,188000,139000,160000,94000,127000,65000,276000,174000,260000,136000,250000,210000,238000,212000,190000,261500,134500,239000,122900,158500,115000,331640,267720,180000,90000,83000,66000,224250,121550,109000,100000,205400,92900,220000,130000,160000,110000,230000,186030,110200,130000,100000,242000,106200,220000,120000,91200,58200,192000,178000,210000,130000,160000,150000,206000,134000,180000,135000,200000,120000,212000,93300,106700,57700,266400,173300,125000,100000,165600,65800,210400,170500,170000,160000,185400,81536,193000,158000,170000,100000,95000,75000,115000,105000,161900,80000,192500,100000,75000,91000,216600,166000,73100,336300,179000,296400,159600,258500,226500,247250,118400,160000,140000,93400,172256,123040,219000,132000,130500,116000,323300,184700,250000,200000,136000,91000,143000,78000,135000,110000,142000,102200,137500,81500,202000,147000,140000,125000,170625,127950,123040,86128,85256,71615,100000,100000,185000,125000,60000,52000,300000,260000,225000,170000,100000,80000,204500,142200,297300,198200,240000,185000,79600,222200,110000,95000,324000,159000,207700,133700,71000,57000,59000,50000,234000,208000,187000,128000,50000,64781,57223,21000,135000,120000,150000,140000,280000,190000,43064,245700,132300,90000,80000,212000,93300,58300,145640,84400,300000,195000,190000,107500,105000,75000,98000,236160,159408,115000,85000,145000,120000,120350,74400,158494,88052,181500,127000,300000,260000,25000,225300,197400,205500,128500,191600,125600,130410,92000,183900,108800,275000,121200,231250,111000,300000,130000,210500,105300,158400,85800,156100,100400,134200,103200,85000,220000,160000,95000,95400,57800,86000,125000,87500,170000,133200,84000,171000,93000,216450,123750,212800,124100,205000,166000,231650,189100,160000,120000,266875,128250,158600,115300,225300,197400,109900,61200,161000,75000,166000,73100,138510,95490,150000,110000,232200,133300,121788,79032,178250,110500,190000,160000,216000,184000,166000,104000,230000,196000,165600,65800,186000,81800,135000,82500,247250,169000,105500,195800,161900,108500,78800,225000,166000,160000,110000,120000,105000,87500,135000,100000,105000,95000,289800,214200,167500,106500,146000,128000,81500,370000,200000,175000,160000,240000,100000,180000,143000,127000,249300,149300,190000,160000,248100,145900,170200,83900,166000,90000,94100,226600,140100,156000,124000,132600,308000,190400,155000,136000,75000,214500,132600,111000,104000,85000,75000,180250,118000,212800,111600,157500,132500,75000,93918,51962,171000,152000,223600,115000,140000,110000,130900,72700,333500,144000,180000,118200,354200,221800,73000,156600,137200,149000,65300,187000,180000,119636,70374,105000,67000,102000,94770,133000,58400,169900,164100,305600,75000,37573,36940,180240,120160,93400,119000,71400,115950,69570,225100,140900,179000,144000,250800,167200,144000,76000,230000,180000,156450,119200,150000,130000,247500,172200,155000,125000,175000,97500,220000,185000,303050,202350,21593,201650,124600,93400,145000,110000,89500,65000,328400,205600,184800,85000,61800,70748,67056,116000,72500,215000,169850,225000,180000,147400,107682,225300,197400,160000,136000,204600,126500,210000,115000,86500,40400,329700,192351,280000,106700,97000,175000,150000,88000,60000,123000,93593,222405,172800,205600,105700,263500,189360,192000,124000,230000,124000,148500,82500,184800,310000,206000,372000,223000,172256,123040,131000,148500,82500,233500,146000,280889,187259,305100,146900,78800,44100,166000,73100,80000,150000,80000,110000,202800,104300,272400,140100,154000,103000,80750,48450,85600,57000,190400,112000,119636,70374,304750,98873,58161,138000,85500,307100,216800,153600,106800,250000,280000,180000,160000,130000,162000,164640,131712,74800,63600,92280,67672,140000,253792,158620,259900,139200,118118,79976,293000,185000,115500,70000,142000,102000,141600,121400,240000,55000,49000,135000,200000,180000,246080,184560,168000,105000,70000,100000,243000,152000,79976,115600,79700,281700,141100,173100,86900,258700,133800,225300,197400,157000,125000,208000,134000,140000,65000,188200,49216,110000,73400,183414,97200,299000,187000,66000,140000,170200,83900,101570,177000,118000,234500,127000,114979,287500,168000,155000,153000,136000,254000,214500,134500,136000,104000,143000,117000,110000,73824,55368,370000,200000,275300,183500,230000,196000,253000,172040,234000,178000,164000,109238,68274,57223,51824,80800,53800,258900,176080,120000,110000,309000,65000,60000,132100,68400,160000,140000,62500,142000,128000,155000,139500,221000,129000,259000,138750,100000,155000,130000,215000,182750,207000,141000,90000,36000,300000,116700,93400,80000,50000,179000,176490,195000,143750,180000,162000,199000,196760,90000,70000,324000,159000,222000,50000,70179,110000,75000,46426,38868,80000,150000,130000,126500,78000,250000,222000,120000,204500,142200,297000,138000,147600,106300,102586,79981,131250,128100,174500,113000,56500,38868,227000,185000,230000,160000,138300,110700,130000,80000,212175,156000,111151,66691,190000,138700,95040,59400,197802,156453,308000,144000,172000,140000,89819,72593,122400,80000,70000,90000,227500,147500,150000,50000,73824,55368,220000,180000,331640,267720,190000,130000,150000,50000,172200,131200,250000,100000,165000,155000,280000,200000,73824,67672,290000,173200,235000,204000,300000,222000,155000,105000,287500,212500,190027,152022,19434,131000,88000,198000,132000,125000,115000,145000,130000,170700,113900,185000,81000,123000,80000,75000,53000,48000,369120,73824,125000,190000,115000,194000,175000,185000,160000,185000,50000,70000,130916,120000,160000,218213,178538,316000,202000,189750,119213,162000,130000,170200,83900,250944,205318,125000,135000,114000,218213,178538,240000,163200,258800,199200,215625,159375,203000,133000,272400,140100,282000,208000,93919,51962,211000,118800,75000,159350,130100,262000,245000,205218,136743,185000,94600,160000,107000,264400,176300,275000,175000,76000,53984,43187,150000,125000,210000,210000,169500,138000,180000,120000,297300,198200,204500,138900,110400,68000,260600,63750,46400,214872,186846,95000,70600,149500,127075,162000,111000,280000,182750,196000,142600,193000,110000,245000,80000,70000,250000,225000,61520,49216,205000,240000,220000,297300,198200,156000,196500,97300,192000,164000,227700,154836,140000,285000,190000,405000,270000,214300,108500,145000,115000,130000,113000,194500,110250,295000,177300,55368,44294,192000,164000,220000,187000,353200,249300,85000,79000,131000,220000,163000,107400,101500,80976,300000,100000,175000,164000,211000,276000,184000,115000,167000,144000,96000,145000,116000,161000,116300,140000,125000,175564,144854,225000,166000,190000,150000,151300,126100,190000,152000,190000,150000,180000,125000,113000,90400,204300,139000,124000,157000,212800,111600,183000,147000,169000,91000,210000,160000,70900,193000,128000,275000,243000,174500,113000,80000,145000,115000,202000,96313,250000,48585,43187,204000,127500,145500,108000,206000,175100,122500,82500,95000,130000,217000,192000,90000,60000,350000,168000,234900,113500,385000,245000,255000,170200,83900,202500,177500,150000,155000,130000,240000,170200,83900,300000,150000,300000,150000,213600,103200,230000,153000,127500,250000,385000,310000,88000,158000,108000,310000,129192,98432,369120,40680,306000,204000,75577,18000,369120,270000,200000,204500,142200,92280,188600,111550,360000,240000,129100,111400,135000,242921,170045,175000,90000,156450,119200,154800,76300,178600,88600,207345,180300,205000,167500,228045,198300,140000,100000,78125,40423,140000,100000,125000,120000,127000,99000,120000,194500,132320,223602,143520,180000,140000,121809,83667,140000,154000,103000,90000,140000,100000,296100,144500,118600,96800,100000,48585,142000,128000,99500,53300,165000,172000,125000,250000,245000,234900,68400,139000,172000,125000,139600,85700,100000,143000,95000,330000,188000,238000,156000,145000,106000,172256,123040,269100,131300,220000,150000,73824,61520,252990,162170,260000,235000,190000,145000,212800,111600,130000,194521,176838,200000,170000,191765,134236,198800,90700,154800,76300,130000,115000,42107,200000,155000,115500,73500,179000,109000,221000,180000,233300,155500,306000,180000,212800,115100,117500,86720,150000,90000,70000,212800,111600,135000,110000,175000,208450,151600,324000,159000,155000,135000,223250,156275,220000,245000,185000,67500,46500,270000,232200,43187,78000,370000,178200,115000,204000,143000,95000,240000,156400,168000,112000,253430,212780,265800,165500,193000,134000,180000,150000,120681,72409,180000,139750,254000,260000,192000,272290,169374,195000,204500,142200,17000,181500,112200,150000,100000,250500,166600,247500,172200,223290,131310,44753,35000,53984,204500,142200,220000,140000,135960,70960,128750,86250,110736,92280,185100,133300,150000,75000,130000,73824,61520,85000,80000,70000,260000,105000,80000,150000,95000,204750,153550,141000,175000,120000,207611,127876,170000,144500,255360,212800,106400,81800,130000,69139,100631,80505,300105,151090,217600,145000,79976,55368,129000,185000,50000,108000,80000,59500,173400,215000,153000,210398,147648,60000,54000,202000,132000,73824,81206,330000,188000,110000,190000,170000,150000,125000,105000,90000,73000,150000,135000,329500,269600,156400,185900,129300,146000,97000,147100,90700,257000,197000,120000,84800,135344,98432,246080,184560,53120,33686,260000,225000,340000,213600,142400,125000,85000,207900,158400,385000,200000,241300,211949,115000,90000,172200,131200,123800,240000,142500,34924,330000,204000,180000,160000,193600,130838,225500,139400,328133,218755,250830,143370,260000,203500,166500,148350,87400,157550,104650,139500,118575,129150,98400,67672,98010,66825,190000,170000,170000,120000,229000,131000,104584,92280,192000,164000,223800,172100,258800,199200,185000,148000,193600,119700,175750,136742,257400,193500,228856,144540,140000,155000,125000,150600,120500,176000,200000,115500,73500,135344,98432,225000,172758,86128,67672,51676,43064,245000,194992,140000,213800,180300,375500,250300,262269,230797,147100,90700,185000,145000,123040,92280,98432,62442,90000,195000,73500,185000,145000,158900,132400,140000,130000,100000,163800,126000,111967,88000,216027,101028,309400,159100,174350,126800,262000,186000,129000,95000,175000,120000,29691,130000,105000,232200,119000,268000,153300,104244,145000,226000,70000,198800,122600,181500,127000,210000,120000,385000,245000,225000,175000,110019,86682,131650,105320,210000,151800,147500,112500,163200,65000,55000,165400,127300,107968,32811,145000,135000,126900,77900,110736,92280,169000,110600,150000,140000,162000,195000,160000,154000,82000,160000,145000,239400,136800,204500,142200,230000,323300,184700,120000,210000,136000,171250,113750,195000,142000,185900,129300,194100,152300,190000,120000,240000,157250,212000,194400,132192,174000,134000,38868,152000,144700,85500,38868,265800,177200,222000,115920,250000,64781,284310,153090,204500,142200,111000,213210,102434,226600,140100,156400,250000,176000,80000,233400,145300,248000,149000,156450,119200,185000,120250,225000,152700,64781,139152,82452,85000,65000,139000,200000,145000,269500,295500,165200,235000,135000,180000,144000,49216,43064,65000,160667,27568,304200,173800,191765,134326,173000,258384,153100,70000,146200,116960,370000,111600,72000,359170,295490,90000,90000,84000,110000,90000,70000,253000,115000,85000,145900,127000,95000,94600,86000,72000,60000,104000,173650,113900,126000,139500,110000,248100,145900,220000,175000,175000,108000,115000,110000,182500,135000,35000,146000,94000,300000,91000,86000,205500,132500,180000,97750,75000,252990,162170,216000,184000,120000,67500,86128,61520,140000,265000,153000,143000,126277,224500,126900,227700,154836,126000,165000,209000,112500,110000,370000,136000,104000,214000,154000,205000,157500,178000,109283,189000,137000,120000,170500,118575,97712,24940,154500,131325,140000,100000,138240,207500,172900,254000,147100,90700,90000,168400,105200,237000,170112,25912,134960,155000,130000,105000,70000,260000,234000,330000,204000,167310,121000,175000,125000,325000,171000,180000,137000,155810,106720,160800,132200,133000,113000,208400,157550,104650,240500,123700,78000,121000,78000,85600,48915,68000,53444,45150,275500,206000,56359,47799,102000,228000,180000,175000,16455,207611,127876,111000,104000,128000,81500,61520,43064,97750,192000,92000,195000,132600,81500,202400,147200,239000,54000,36000,176000,118720,95000,240000,157000,165000,136000,272300,222800,172750,82500,281000,181000,207611,127876,225000,168000,280600,158600,283780,218540,178500,323300,184700,123040,104584,185000,137700,205500,132500,65100,44640,161000,123000,200000,278700,159300,125000,65000,230000,175000,252990,162170,183000,122000,310270,239080,70000,135000,125000,253000,172040,135000,108000,129562,50000,227850,180500,199000,159000,350000,80000,240000,160000,107500,96750,174000,104000,275300,183500,250000,174350,126800,284050,193800,232989,85000,204500,138900,168400,105200,147100,150550,116710,147100,90700,120000,147100,90700,125000,100000,198800,105200,150600,120500,183000,167500,106500,239000,149000,122000,181500,127000,186000,138000,185000,122000,140000,112000,36000,91270,180000,165000,247000,118440,138900,297300,198200,110736,86128,204500,138900,87500,62500,244000,157000,136000,90600,49216,43064,160000,91773,315300,210200,177000,110000,65000,55000,183200,122200,150000,131000,101000,171050,124400,187000,128000,138000,92000,200000,138000,92000,120000,241300,124100,185000,152000,288000,107968,90599,189750,145000,252000,82254,61699,247500,172200,87500,62500,146000,108000,273000,166500,65000,45000,174000,189750,119213,190000,140000,228830,148590,140000,180514,108308,220000,170000,169000,110600,77737,64311,78000,75577,62433,204500,142200,64781,94000,81900,199000,162000,67672,208000,109500,240000,238530,95000,82000,80000,70000,154700,118900,232960,166400,156000,105000,193000,143000,138860,119610,205485,156560,210600,135000,170000,105000,135000,100000,100000,70132,51676,92280,79976,15000,64781,144100,89100,140000,100000,193600,119700,94000,81900,131721,180000,120000,242000,134000,104000,258800,199200,201000,141100,94100,126000,170000,104584,208500,165000,77737,86374,169000,110600,130800,87200,215000,61520,49216,238000,173000,205785,123471,299500,245100,40000,71259,290000,226000,161000,151000,53120,38868,136994,214500,120000,278300,205700,185900,167310,114000,194000,161000,32390,184950,119250,178500,136000,189000,159090,82000,149076,82365,194595,158000,305000,245000,205485,156560,168000,78400,175000,130002,71908,212000,132000,177000,148000,248100,145900,155000,38000,218000,235400,108320,152375,115934,81666,79000,273400,182200,160000,112000,285000,154000,220000,170000,200000,250000,125000,275000,200000,177000,136000,122720,231500,118000,299500,249600,297000,138000,267100,167200,188500,117000,150931,143250,231000,157250,240000,157250,232000,277300,213300,209000,184250,167500,85000,110736,92280,154440,68550,90000,60000,226600,140100,49216,41833,80000,52500,253000,156400,235000,223100,114700,172800,110000,152375,94000,183000,125000,120350,74400,134000,57007,44051,258750,172500,220000,150000,109528,287500,207500,134200,103200,160000,93919,180000,186600,119800,200000,383910,315850,198000,132000,141600,94400,209450,167560,185000,164000,80000,52500,238000,149500,186600,116500,61520,175000,145000,195000,220000,190000,113366,118539,86128,146000,97400,40747,166364,116455,145000,125000,76000,131000,222000,166500,205600,105700,138000,67000,211200,230000,60000,200000,180000,18381,200000,120000,126500,78000,157750,104650,133000,70000,40000,190000,158080,182000,252000,129000,231000,200800,159100,120160,140000,110000,165000,149094,290000,247500,172200,72250,162500,23753,83000,63967,188600,111550,219300,143000,133300,80000,204060,140358,198900,183310,43064,392000,224000,233000,199098,172000,107000,128000,81500,208450,151600,240960,200800,120681,72409,250000,176000,250000,170000,38290,215936,178560,148800,331640,283780,167954,115830,125000,185000,50000,331640,283780,189110,139000,199000,145000,199000,142000,230000,170000,66000,52000,200000,178560,148800,200000,166500,113220,365630,229000,185000,86700,192300,153800,67419,131650,105320,126400,235400,160080,146190,175000,228856,144540,151800,150000,100000,126500,78000,126500,78000,70000,300000,200000,96000,72000,205150,167850,222750,182250,104024,50745,148594,206000,140250,254500,130900,198000,124000,234485,112655,125000,51676,70179,64781,258000,190000,184184,167441,74087,32390,204500,90000,84000,202400,147200,139500,90000,192000,142000,143000,129000,191000,85000,70000,147648,98432,144800,250000,16000,27000,72000,172900,144100,160000,135000,101500,83700,283000,184000,220000,185000,246500,133500,174000,134000,330000,230000,167000,109000,47899,115000,145000,284000,227000,205000,160000,191400,127600,230000,95000,70000,258000,171000,87000,73000,20000,300000,110736,55368,151840,163152,108768,285000,193900,345000,234700,100000,40000,241000,210000,90000,59382,90000,84000,160000,221300,147500,210000,160000,192000,151000,169000,204500,142200,210000,170000,72000,60000,210000,159090,94400,90000,190000,125000,130002,71908,60000,81838,60000,255000,116990,82920,159000,105000,155000,102000,374000,197500,187000,20000,195000,119000,266450,177700,55720,50700,56000,135000,115000,302000,189000,220000,150000,93000,190000,46565,216000,184000,100000,128750,79350,155000,125000,273400,182200,165000,142500,213654,142436,124230,68637,204000,161500,185900,129300,148750,95000,287700,148000,227240,197600,178500,146100,112400,86128,79976,285000,90000,146000,237400,158200,192000,164000,150000,141000,267000,147100,90700,72000,177177,240000,142000,180000,105000,80000,60000,268000,144628,115702,144000,132000,106400,81800,93500,208200,151200,270000,194500,115500,140000,100000,225000,199000,50000,40000,98432,399880,41027,155000,100000,65000,280100,168100,120000,149040,113900,165000,145000,274450,199600,83500,52500,140000,76500,280000,250000,180000,157000,140700,109600,278000,173000,305000,125000,155000,120000,24000,165400,127300,259000,138750,218000,85000,132000,71500,215050,113100,130000,85000,250000,200000,168400,136505,100895,275300,183500,168400,105200,240000,120000,93000,237400,132870,105000,317070,170730,170000,125000,158700,123906,80976,66940,333500,180500,76284,257400,210600,65000,50000,293000,260000,192000,170000,125000,99000,233000,185100,127600,105000,160000,55000,241000,163000,120000,218000,118000,311000,162540,258750,225000,145000,153600,106800,140000,76500,182850,113000,126000,86400,232760,169280,162500,240350,174800,116000,153600,107500,94100,72400,178000,152000,233200,210000,160000,206000,130000,146100,112400,110000,70000,150120,120096,168000,178600,142880,255000,169000,155000,151410,144200,151410,115360,193170,116480,146000,94000,246080,203016,135344,110736,329500,269600,250500,159500,115000,94035,57920,113600,60000,256000,116000,245000,210000,283200,188800,36000,205640,142600,193200,156400,121000,72000,48000,132300,197000,328000,211000,237000,201450,229000,206000,231000,183750,165400,175000,152900,117700,285800,154600,289120,192400,179998,35000,258000,196000,121000,141000,206000,192000,164000,300000,260000,147000,92000,110000,261500,134500,83200,204500,142200,275300,183500,147648,123040,136600,109280,84000,60000,61520,70000,60000,281000,69500,285000,69525,61800,192000,178000,152000,160000,40000,130000,110000,225000,168000,130001,71907,144000,80000,205000,150000,189400,131685,204500,142200,172000,60000,77791,55410,57000,120000,277500,150000,236500,172800,110000,60000,100000,323905,150000,100000,62000,55000,155000,140000,36000,144000,77000,110736,55368,265000,217000,177300,136300,83000,208450,170550,72000,60000,130000,165000,145000,336400,201900,189750,131100,270000,95000,117300,69000,182000,144000,244000,200000,260000,225000,102500,186600,116500,80000,60000,222000,138000,207300,149200,292000,164500,292200,163800,126000,120000,280000,210000,150000,200000,170000,225000,175000,189750,131100,123400,82200,225000,50000,161800,121400,285000,193900,240000,196000,214000,170000,155000,98000,199000,260000,105066,110736,86128,145000,289800,214000,87500,165000,280830,173175,92280,49216,75038,64781,71475,61541,231250,138750,155000,242000,195000,155000,125000,160000,140000,183924,125760,430640,86374,30000,25500,175000,120000,219000,141000,213660,130760,275000,174000,143200,90000,72000,253200,342810,184590,105380,64500,30000,204620,110680,270703,221484,212750,218500,199098,203300,123600,231500,166000,172500,110500,238000,176000,237000,201450,193500,139000,150000,70179,97171,185900,129300,163196,145885,202800,104300,179170,94300,152500,116450,133800,220000,56536,214000,283200,188800,161800,141600,342300,176100,85000,65000,138784,83270,70000,318300,212200,230000,143200,105000,46755,43064,168400,105200,55368,43064,220000,67672,15000,86128,58444,85000,75000,250000,186000,230000,200000,53984,205000,180000,215000,170000,224000,176000,67635,74883,100000,80000,162500,200000,115000,239000,122900,237000,191765,134236,190000,112000,88256,105500,293000,148500,152900,117100,173000,113000,175000,110000,110000,205000,149500,127075,219535,146115,221000,153000,187000,179000,109000,142000,198800,105200,112000,115000,86000,106000,275000,50000,280700,150450,51861,93918,51962,175000,135000,257000,222000,133200,221000,147000,238000,156000,304000,48585,198340,104055,183600,130000,160000,120000,289076,202353,157750,104650,180000,200000,68000,60000,90000,155000,125000,181000,252000,154000,180000,155000,64200,56100,135000,171250,113750,153600,100500,115000,182500,121500,203100,114500,92700,167500,106500,59888,286000,207000,178600,230000,220000,210000,151800,317070,170730,21593,108000,60000,134000,124000,124500,175000,148700,125600,120000,185000,120250,183000,125000,135000,143865,115092,90000,173000,132000,208049,128500,149600,102000,100000,190000,106800,97171,80976,151000,43187,145000,154000,143000,79976,190000,120000,110736,111000,265000,235000,122638,73546,75000,60400,172309,60462,83500,52500,201036,134024,62000,58000,172000,115000,125000,90000,139500,109400,145000,239748,159832,186300,102500,149040,113900,153600,106800,172600,107900,180180,106020,376080,213120,206500,121600,170000,90000,95000,70000,120000,175000,206000,65000,48000,87000,145000,115100,73900,86128,58444,130000,205000,141288,94192,184000,143000,160000,147000,74883,70000,80000,210914,116704,185700,165000,193000,136850,139500,109400,276000,59382,48585,75577,48585,198094,102492,138666,102492,130000,150000,260000,110000,170000,130000,163800,126000,106250,167500,106500,250000,138000,130000,100000,124163,104500,70000,90000,70000,125000,127000,210550,153300,200000,161500,119500,105000,85000,215000,146300,215936,72000,60000,153400,122700,123900,340000,150000,64781,185900,121700,50000,100000,310000,239000,150000,149076,82365,85500,97750,116990,82920,200000,125000,155000,140000,205920,171600,121500,78000,116000,79976,44356,180000,200000,129192,104584,30000,185000,125000,34320,75577,106000,122000,93800,150000,90000,220000,72338,64781,40000,152380,121904,168400,105200,128280,106900,192000,100000,107968,86374,275000,174000,170500,73857,55044,162288,129058,80000,65000,124740,65488,72200,64980,179975,86466,175000,120000,230000,120000,205920,171600,265000,130000,168000,38868,167580,87980,104000,65000,230000,269000,158000,197000,106000,150000,100000,290000,192000,172800,300240,200160,140000,169000,100000,116888,110000,80000,55000,48000,137500,81500,30000,186000,153088,190000,160000,190000,183310,66000,148500,126277,228000,180000,90000,272000,170000,259000,110736,73824,18160,19910,247500,172200,107968,75577,288000,73824,61520,215050,198000,114000,209300,182200,85000,49216,120000,60000,147100,90700,227000,160000,56143,51824,60000,50000,153799,52500,250000,162500,165000,124000,63000,253750,169200,170000,120000,213580,163625,375000,102569,210000,231250,138750,284310,153090,110736,86128,100000,225900,156400,385000,241871,133832,36000,123040,98432,216100,140800,147648,53984,110000,63980,284000,236000,248100,145900,155850,102544,151410,115360,59382,125948,100000,185000,120250,26992,180000,85000,70000,100000,155000,140000,220000,204500,138900,23000,110000,182750,137500,314100,195800,205000,180000,165000,144000,160000,100000,199000,112000,130000,160000,135000,183000,350000,262500,122000,158677,103200,61200,155000,66970,63701,174500,113000,87000,108000,107250,119000,285800,154600,30000,220000,195000,168400,200000,153000,94000,90000,124234,74540,109000,84053,50000,125600,141290,74178,107500,52500,84000,125000,110000,200000,135000,48000,120000,200000,80000,257000,77737,38868,140000,53984,51824,41027,183310,102500,122000,94000,182000,77737,38868,300000,105500,110000,79976,44356,153400,122700,87000,50000,234100,203500,232200,167200,197000,106000,180000,145000,225000,200000,114000,291500,196200,150900,95000,80000,116000,72000,207000,167000,145000,135000,133800,96100,140000,100000,140000,115000,219000,126100,72000,175000,240500,137500,187500,165000,73824,25216,165750,225000,165750,110367,67979,115000,275000,175000,175308,100706,235000,135000,289076,202353,70179,37788,120000,231250,138750,100000,150000,120000,133000,272550,198200,187500,155000,64000,235000,185000,143100,113000,142000,180560,115440,120000,110000,76284,63980,141600,59059,46755,128000,236000,130000,125000,175000,155000,153600,106800,150000,140000,122000,94500,170000,130000,145000,128000,145000,100000,120000,115000,150000,150000,100000,150000,127500,126500,51000,260000,175000,40000,40000,250000,63000,210000,160000,272550,198200,94560,52533,220000,146000,248400,183600,150000,40000,120000,95000,160000,135000,24165,216000,144000,85000,65000,149000,119000,120000,150000,110000,246000,201000,190000,155000,235000,185000,190000,160000,100000,130000,115000,92350,67723,105000,70000,204500,142200,192000,164000,185900,129300,75000,175000,120000,167500,106500,75000,60000,184000,142000,145000,100000,44365,200000,145000,92350,73880,192000,164000,310000,239000,120000,95000,145000,135000,78000,73546,36773,160000,120000,125000,95000,47280,37824,115934,81666,175000,140000,249500,149850,122500,100000,249500,149850,55000,48000,249500,149850,58837,190000,120000,127000,104000,210000,150000,150000,210000,130000,182750,161500,102640,66100,210000,150000,198800,122600,130000,80000,136000,104000,150000,100000,159000,130000,215000,150000,187000,153000,255000,185000,430967,55410,50432,39925,169000,110600,60938,140000,120000,50000,134000,124000,166700,119000,124234,74540,100000,65000,200000,220000,146000,68293,110000,70000,190000,135000,128000,81500,173000,110000,192000,120000,190000,194000,129400,201000,89200,165000,125000,230000,196000,130000,90000,150000,100000,230000,150000,130000,180000,120000,192500,140000,152500,65000,55000,178750,160000,63040,165000,135000,170000,125000,105000,70000,130000,95000,203500,152000,197430,134760,120000,197000,99000,162000,110446,79178,70186,51716,149040,113900,95000,115000,171000,50000,185900,129300,230000,154600,75000,213000,152000,120000,110000,70000,227200,168000,64090,60938,243000,183000,150000,130000,90000,165000,124000,178000,132000,300000,116000,96000,92350,70186,105000,70000,105236,100000,189750,140250,130000,160000,109000,250000,150000,206000,135000,115573,73546,42026,191200,66192,230000,154600,80000,135000,110000,155000,140000,205000,179500,134000,145000,235000,175000,27317,90000,165000,135000,168400,105200,86193,49253,200000,198800,122600,100000,105066,104663,73880,125000,110000,148000,107000,100000,65000,63040,36773,299500,245100,168000,130000,161000,118000,205000,247500,172200,68293,177000,131000,146000,102000,80000,65000,61566,43096,175000,135000,80000,231250,138750,193750,116250,231250,138750,193750,116250,208000,127000,300000,196000,45555,205000,185000,247500,172200,110000,375000,225000,156400,104663,80036,140700,93800,350000,135000,104697,33000,34672,201000,119000,175000,154560,123648,170000,145000,135000,100000,247500,172200,177500,134000,192564,144854,179305,142127,315000,225000,243900,156600,79000,89306,182500,128500,77300,45600,110000,210000,136000,170000,140000,247500,172200,225000,184100,100000,85000,78000,161000,205000,160000,61566,49253,245000,180000,220000,198440,144000,240000,198440,144000,150000,57872,64000,39925,187200,116100,150000,127000,275000,166000,159699,138938,76000,103432,92350,80000,52500,236000,182000,180000,135000,240000,125404,195000,110000,123000,92250,180000,100000,97000,90000,180000,260000,180000,210000,157000,80000,52500,128000,81500,105000,70000,175000,122500,171000,117000,202800,104300,36773,30000,78000,48000,78000,42000,345600,230400,78000,48000,175950,130050,205600,105700,236600,84000,54000,80000,200000,73742,165000,33246,75050,108000,155000,38000,85000,65000,110820,92350,153600,106800,50000,123400,88100,120000,55000,150000,120000,139000,139600,85700,185000,50000,200000,148500,98200,115000,95000,225000,66000,134000,98000,105000,62000,57000,161311,144200,115360,83171,73546,42026,180000,160000,108000,200000,150000,125976,188700,160395,198440,144000,191475,141525,75648,156868,200000,69344,90000,126080,84053,200000,180000,108000,85000,165000,132000,130000,110000,45050,42028,135000,178800,132100,20000,140000,110000,160000,85000,250000,63000,187200,116100,145000,229998,154545,215000,159000,50000,183000,99750,68400,236900,159200,243225,179775,128000,191475,141525,218000,145300,195400,131300,105000,207000,153000,99000,200000,135000,195700,130500,130000,84000,100000,60000,80036,67723,141300,102100,150000,102200,144000,113000,31520,195400,131300,195400,131300,80000,60000,63040,50000,105000,190000,140000,180000,165000,108000,20000,179400,154000,193900,129300,222640,182160,150000,100000,122500,100000,297500,260000,15000,193000,93000,73000,136994,101570,57786,136000,112000,172000,215000,164000,45390,97500,212800,142800,73546,50000,151800,130240,165000,140250,179400,154000,75000,84053,73546,98506,86193,84053,73546,102663,80041,104611,82280,191475,141525,115000,31520,81000,66000,46000,80000,200000,180000,200000,204100,136100,250000,63000,118208,110820,19073,95000,70000,75000,113000,170000,113000,140000,50000,53368,29944,160000,119300,145000,90000,146200,124270,225000,160000,54634,185800,137400,245000,180000,203500,152000,250000,63000,186000,148800,128058,82000,110000,173000,186000,148800,158000,134000,200000,150000,216200,144100,115573,89306,250000,63000,135000,85000,206000,175100,189650,164996,154000,126000,200000,150000,135000,98506,73880,117000,99450,200000,135000,193900,129300,55410,86193,61566,175000,130000,188100,139860,248700,167100,50432,205000,141300,102100,50000,84053,61566,250000,63000,189500,140100,177600,131300,24000,202900,115000,115000,193900,129300,140000,216200,144100,216000,144000,150000,50000,250000,84053,131752,48000,260500,175100,55000,130000,77119,52008,206699,99100,200000,54000,130000,100000,80000,100000,221300,148700,30000,28368,91118,61566,60938,249260,185400,80036,128875,93700,100000,136260,109280,160000,92000,135446,104663,129000,86000,100000,25000,65257,200000,180000,153000,150075,110925,22800,22809,15000,133766,83000,186000,148800,112900,90320,240000,160000,300000,200000,65666,200000,116976,92350,120000,112900,90320,145000,105400,49268,215300,158200,209100,154600,115934,81666,155000,84053,164000,132000,123000,52533,115222,165400,132320,208775,147800,136994,101570,35093,183600,100800,49253,36940,42026,31520,42026,31520,215300,140400,63040,47280,260000,43096,63040,47280,55410,51064,60000,82900,63900,160000,112300,241000,159000,80000,58000,136000,108800,242000,200000,61566,36940,49253,165220,120160,124190,181940,132320,220110,160080,180000,120000,126500,106260,116000,155000,120600,130000,90000,170000,102100,84900,136620,99360,110820,98506,146000,43096,130000,110000,170000,161342,137141,167000,73880,61566,211500,138600,192400,90700,130000,61300,160000,113000,95550,167000,115500,243900,156600,136600,128875,93700,224000,167875,175000,135000,205300,176000,200100,70500,54000,205300,140400,205300,184700,175100,140250,116150,99050,85000,75000,214000,192600,266400,213120,141300,102100,206699,99100,110500,61566,43096,80000,60000,230000,150260,109280,160000,67000,52000,129000,69000,25000,126500,106260,220110,160080,105000,135000,50000,220000,172386,86193,220000,120000,200000,120000,65000,324000,216000,185100,104890,76814,117104,192037,120000,55685,52533,75000,157000,69133,65000,68293,109000,67597,20000,102839,200000,51081,83864,40000,31520,59888,54742,89306,83171,165000,153000,100000,76814,33609,75000,20000,30469,69999,55475,61989,152500,120000,135000,405000,150000,240000,135000,80000,380000,120402,177000,65141,48000,20000,220000,150000,90000,100000,100000,100000,144000,155499,24000,38400,100000,82500,49646,120000,84053,20000,125000,120000,110037,21013,50000,200000,60000,200000,100000,100000,82744,59303,62649,82528,170000,150000,55000,250000,80000,70000,130026,63831,68428,85000,230000,125000,120000,450000,46759,74130,127221,144000,75774,150000,103000,153000,90000,90000,60000,50000,270000,54238,47282,153667,28476,110000,82528,250000,59102,80000,138000,140000,79197,170000,80000,45760,100000,53192,235000,150000,79833,225000,76833,50180,88654,103160,113476,94564,150000,115000,187442,51519,106000,112872,150000,15966,95746,70000,76958,89294,276000,188000,160000,105000,174000,93000,60757,90000,70139,170000,96282,36643,72212,91000,99703,165000,80000,103691,42000,115000,63810,260000,110000,180000,200000,109024,200000,256000,110000,79833,72500,185000,69741,100000,112000,150000,20171,55000,58000,100000,77684,85000,76833,105000,72000,65013,28016,111775,93150,160000,25532,63831,190000,141846,71786,135000,24823,147000,96113,174000,135000,21844,125000,51321,69741,50000,39916,87000,26005,90734,81000,90000,61467,195000,37825,85000,416000,225000,56256,116914,46597,114047,88654,56000,28609,88654,47899,98000,66022,56738,24823,120000,20000,325000,200000,45896,160000,50000,40189,165000,42197,185000,62726,21669,110000,140000,120000,87738,61896,76833,74000,152000,18000,60000,130000,18907,59102,173762,148261,38776,46809,91237,62726,115000,235000,75000,62000,73000,45391,190200,118000,138350,130800,45618,168000,119059,423000,28369,165000,412000,151000,105000,100000],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Experience Level\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Salary in USD\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Salary Distribution Across Experience Levels\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('d3be28f7-8ca0-495b-aa86-1fe9be2b969b');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig = px.box(df_duplicados, x='experience_level', y='salary_in_usd', title='Salary Distribution Across Experience Levels')\n",
        "fig.update_layout(\n",
        "    xaxis_title='Experience Level',\n",
        "    yaxis_title='Salary in USD',\n",
        "    boxmode='group'\n",
        ")\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "77npxHnJCcht",
        "outputId": "f1b9952a-9b28-41f0-df61-fb8018b17a16"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"0c8b2559-c4db-4bc2-ad9f-55c96f375377\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0c8b2559-c4db-4bc2-ad9f-55c96f375377\")) {                    Plotly.newPlot(                        \"0c8b2559-c4db-4bc2-ad9f-55c96f375377\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"employment_type=%{x}\\u003cbr\\u003esalary_in_usd=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Part-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Freelance\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Full-time\",\"Contract\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[95012,186000,81800,212000,93300,130000,100000,224400,138700,210000,168000,224400,138700,43064,36912,95000,75000,300000,234000,140000,120000,204500,142200,155000,110000,266500,152000,222200,136000,273400,182200,167500,106500,185900,129300,185000,79600,122000,94500,247300,139700,176000,100000,204500,142200,247600,127300,223400,186200,167500,106500,185900,129300,72000,64000,179820,143860,283050,188700,133000,58400,141298,115607,100000,266500,144400,71363,55368,287500,156000,90000,70000,199000,162000,170884,113923,184000,123000,235750,174250,165000,118800,225000,150000,213900,116800,220000,150000,150000,100000,247500,172200,155000,120000,226700,133300,184000,123000,130000,117000,160000,140000,166000,73000,185900,129300,130000,104000,143000,116000,220000,180000,215000,200000,253000,131000,220000,176000,49216,36912,210000,147000,186000,161000,205000,220000,190000,137000,110000,172000,146000,148000,99000,150000,105000,99000,52500,180514,108308,210000,147000,290300,196685,220000,176000,175000,130000,185000,150000,145000,115000,133000,58300,115000,95000,110244,39372,43187,31310,92280,67672,75577,303387,100017,230300,140000,124935,76050,224800,131100,258000,171000,196000,121000,195800,171500,166000,73100,220000,160000,85000,65000,220000,100000,185000,152000,48585,38868,220000,100000,110000,80000,36912,150200,71000,167200,133000,58400,135000,110000,104584,73824,187415,114080,166000,73100,306400,168700,32974,165000,140000,150000,167000,121000,190200,95100,133000,58400,90000,70000,73100,135000,100000,180514,108308,294000,192000,266000,167000,200000,150000,163800,88200,180400,138800,67672,55368,319000,206000,215000,142000,266000,167000,140130,84870,178300,105400,215000,142000,240000,210000,150000,116000,90000,145000,128000,154000,126000,240000,157250,219650,136000,180000,125000,247600,127300,60000,55000,250000,125000,190000,170000,202600,168800,132000,111000,203000,127000,125009,83339,112200,91800,200000,160000,161952,160000,133000,58300,254000,159000,170000,85000,130500,116000,81400,43500,169000,92000,166000,73100,190000,165000,305600,146600,150000,120000,275000,146400,208500,165000,258700,172500,185000,198200,110200,166000,73100,212000,93300,212000,93300,166000,73100,167100,111400,166000,73100,170000,145000,170000,135000,139810,95325,278700,159300,226700,151100,247300,139700,188000,139000,160000,94000,127000,65000,276000,174000,260000,136000,250000,210000,238000,212000,190000,261500,134500,239000,122900,158500,115000,331640,267720,180000,90000,83000,66000,224250,121550,109000,100000,205400,92900,220000,130000,160000,110000,230000,186030,110200,130000,100000,242000,106200,220000,120000,91200,58200,192000,178000,210000,130000,160000,150000,206000,134000,180000,135000,200000,120000,212000,93300,106700,57700,266400,173300,125000,100000,165600,65800,210400,170500,170000,160000,185400,81536,193000,158000,170000,100000,95000,75000,115000,105000,161900,80000,192500,100000,75000,91000,216600,166000,73100,336300,179000,296400,159600,258500,226500,247250,118400,160000,140000,93400,172256,123040,219000,132000,130500,116000,323300,184700,250000,200000,136000,91000,143000,78000,135000,110000,142000,102200,137500,81500,202000,147000,140000,125000,170625,127950,123040,86128,85256,71615,100000,100000,185000,125000,60000,52000,300000,260000,225000,170000,100000,80000,204500,142200,297300,198200,240000,185000,79600,222200,110000,95000,324000,159000,207700,133700,71000,57000,59000,50000,234000,208000,187000,128000,50000,64781,57223,21000,135000,120000,150000,140000,280000,190000,43064,245700,132300,90000,80000,212000,93300,58300,145640,84400,300000,195000,190000,107500,105000,75000,98000,236160,159408,115000,85000,145000,120000,120350,74400,158494,88052,181500,127000,300000,260000,25000,225300,197400,205500,128500,191600,125600,130410,92000,183900,108800,275000,121200,231250,111000,300000,130000,210500,105300,158400,85800,156100,100400,134200,103200,85000,220000,160000,95000,95400,57800,86000,125000,87500,170000,133200,84000,171000,93000,216450,123750,212800,124100,205000,166000,231650,189100,160000,120000,266875,128250,158600,115300,225300,197400,109900,61200,161000,75000,166000,73100,138510,95490,150000,110000,232200,133300,121788,79032,178250,110500,190000,160000,216000,184000,166000,104000,230000,196000,165600,65800,186000,81800,135000,82500,247250,169000,105500,195800,161900,108500,78800,225000,166000,160000,110000,120000,105000,87500,135000,100000,105000,95000,289800,214200,167500,106500,146000,128000,81500,370000,200000,175000,160000,240000,100000,180000,143000,127000,249300,149300,190000,160000,248100,145900,170200,83900,166000,90000,94100,226600,140100,156000,124000,132600,308000,190400,155000,136000,75000,214500,132600,111000,104000,85000,75000,180250,118000,212800,111600,157500,132500,75000,93918,51962,171000,152000,223600,115000,140000,110000,130900,72700,333500,144000,180000,118200,354200,221800,73000,156600,137200,149000,65300,187000,180000,119636,70374,105000,67000,102000,94770,133000,58400,169900,164100,305600,75000,37573,36940,180240,120160,93400,119000,71400,115950,69570,225100,140900,179000,144000,250800,167200,144000,76000,230000,180000,156450,119200,150000,130000,247500,172200,155000,125000,175000,97500,220000,185000,303050,202350,21593,201650,124600,93400,145000,110000,89500,65000,328400,205600,184800,85000,61800,70748,67056,116000,72500,215000,169850,225000,180000,147400,107682,225300,197400,160000,136000,204600,126500,210000,115000,86500,40400,329700,192351,280000,106700,97000,175000,150000,88000,60000,123000,93593,222405,172800,205600,105700,263500,189360,192000,124000,230000,124000,148500,82500,184800,310000,206000,372000,223000,172256,123040,131000,148500,82500,233500,146000,280889,187259,305100,146900,78800,44100,166000,73100,80000,150000,80000,110000,202800,104300,272400,140100,154000,103000,80750,48450,85600,57000,190400,112000,119636,70374,304750,98873,58161,138000,85500,307100,216800,153600,106800,250000,280000,180000,160000,130000,162000,164640,131712,74800,63600,92280,67672,140000,253792,158620,259900,139200,118118,79976,293000,185000,115500,70000,142000,102000,141600,121400,240000,55000,49000,135000,200000,180000,246080,184560,168000,105000,70000,100000,243000,152000,79976,115600,79700,281700,141100,173100,86900,258700,133800,225300,197400,157000,125000,208000,134000,140000,65000,188200,49216,110000,73400,183414,97200,299000,187000,66000,140000,170200,83900,101570,177000,118000,234500,127000,114979,287500,168000,155000,153000,136000,254000,214500,134500,136000,104000,143000,117000,110000,73824,55368,370000,200000,275300,183500,230000,196000,253000,172040,234000,178000,164000,109238,68274,57223,51824,80800,53800,258900,176080,120000,110000,309000,65000,60000,132100,68400,160000,140000,62500,142000,128000,155000,139500,221000,129000,259000,138750,100000,155000,130000,215000,182750,207000,141000,90000,36000,300000,116700,93400,80000,50000,179000,176490,195000,143750,180000,162000,199000,196760,90000,70000,324000,159000,222000,50000,70179,110000,75000,46426,38868,80000,150000,130000,126500,78000,250000,222000,120000,204500,142200,297000,138000,147600,106300,102586,79981,131250,128100,174500,113000,56500,38868,227000,185000,230000,160000,138300,110700,130000,80000,212175,156000,111151,66691,190000,138700,95040,59400,197802,156453,308000,144000,172000,140000,89819,72593,122400,80000,70000,90000,227500,147500,150000,50000,73824,55368,220000,180000,331640,267720,190000,130000,150000,50000,172200,131200,250000,100000,165000,155000,280000,200000,73824,67672,290000,173200,235000,204000,300000,222000,155000,105000,287500,212500,190027,152022,19434,131000,88000,198000,132000,125000,115000,145000,130000,170700,113900,185000,81000,123000,80000,75000,53000,48000,369120,73824,125000,190000,115000,194000,175000,185000,160000,185000,50000,70000,130916,120000,160000,218213,178538,316000,202000,189750,119213,162000,130000,170200,83900,250944,205318,125000,135000,114000,218213,178538,240000,163200,258800,199200,215625,159375,203000,133000,272400,140100,282000,208000,93919,51962,211000,118800,75000,159350,130100,262000,245000,205218,136743,185000,94600,160000,107000,264400,176300,275000,175000,76000,53984,43187,150000,125000,210000,210000,169500,138000,180000,120000,297300,198200,204500,138900,110400,68000,260600,63750,46400,214872,186846,95000,70600,149500,127075,162000,111000,280000,182750,196000,142600,193000,110000,245000,80000,70000,250000,225000,61520,49216,205000,240000,220000,297300,198200,156000,196500,97300,192000,164000,227700,154836,140000,285000,190000,405000,270000,214300,108500,145000,115000,130000,113000,194500,110250,295000,177300,55368,44294,192000,164000,220000,187000,353200,249300,85000,79000,131000,220000,163000,107400,101500,80976,300000,100000,175000,164000,211000,276000,184000,115000,167000,144000,96000,145000,116000,161000,116300,140000,125000,175564,144854,225000,166000,190000,150000,151300,126100,190000,152000,190000,150000,180000,125000,113000,90400,204300,139000,124000,157000,212800,111600,183000,147000,169000,91000,210000,160000,70900,193000,128000,275000,243000,174500,113000,80000,145000,115000,202000,96313,250000,48585,43187,204000,127500,145500,108000,206000,175100,122500,82500,95000,130000,217000,192000,90000,60000,350000,168000,234900,113500,385000,245000,255000,170200,83900,202500,177500,150000,155000,130000,240000,170200,83900,300000,150000,300000,150000,213600,103200,230000,153000,127500,250000,385000,310000,88000,158000,108000,310000,129192,98432,369120,40680,306000,204000,75577,18000,369120,270000,200000,204500,142200,92280,188600,111550,360000,240000,129100,111400,135000,242921,170045,175000,90000,156450,119200,154800,76300,178600,88600,207345,180300,205000,167500,228045,198300,140000,100000,78125,40423,140000,100000,125000,120000,127000,99000,120000,194500,132320,223602,143520,180000,140000,121809,83667,140000,154000,103000,90000,140000,100000,296100,144500,118600,96800,100000,48585,142000,128000,99500,53300,165000,172000,125000,250000,245000,234900,68400,139000,172000,125000,139600,85700,100000,143000,95000,330000,188000,238000,156000,145000,106000,172256,123040,269100,131300,220000,150000,73824,61520,252990,162170,260000,235000,190000,145000,212800,111600,130000,194521,176838,200000,170000,191765,134236,198800,90700,154800,76300,130000,115000,42107,200000,155000,115500,73500,179000,109000,221000,180000,233300,155500,306000,180000,212800,115100,117500,86720,150000,90000,70000,212800,111600,135000,110000,175000,208450,151600,324000,159000,155000,135000,223250,156275,220000,245000,185000,67500,46500,270000,232200,43187,78000,370000,178200,115000,204000,143000,95000,240000,156400,168000,112000,253430,212780,265800,165500,193000,134000,180000,150000,120681,72409,180000,139750,254000,260000,192000,272290,169374,195000,204500,142200,17000,181500,112200,150000,100000,250500,166600,247500,172200,223290,131310,44753,35000,53984,204500,142200,220000,140000,135960,70960,128750,86250,110736,92280,185100,133300,150000,75000,130000,73824,61520,85000,80000,70000,260000,105000,80000,150000,95000,204750,153550,141000,175000,120000,207611,127876,170000,144500,255360,212800,106400,81800,130000,69139,100631,80505,300105,151090,217600,145000,79976,55368,129000,185000,50000,108000,80000,59500,173400,215000,153000,210398,147648,60000,54000,202000,132000,73824,81206,330000,188000,110000,190000,170000,150000,125000,105000,90000,73000,150000,135000,329500,269600,156400,185900,129300,146000,97000,147100,90700,257000,197000,120000,84800,135344,98432,246080,184560,53120,33686,260000,225000,340000,213600,142400,125000,85000,207900,158400,385000,200000,241300,211949,115000,90000,172200,131200,123800,240000,142500,34924,330000,204000,180000,160000,193600,130838,225500,139400,328133,218755,250830,143370,260000,203500,166500,148350,87400,157550,104650,139500,118575,129150,98400,67672,98010,66825,190000,170000,170000,120000,229000,131000,104584,92280,192000,164000,223800,172100,258800,199200,185000,148000,193600,119700,175750,136742,257400,193500,228856,144540,140000,155000,125000,150600,120500,176000,200000,115500,73500,135344,98432,225000,172758,86128,67672,51676,43064,245000,194992,140000,213800,180300,375500,250300,262269,230797,147100,90700,185000,145000,123040,92280,98432,62442,90000,195000,73500,185000,145000,158900,132400,140000,130000,100000,163800,126000,111967,88000,216027,101028,309400,159100,174350,126800,262000,186000,129000,95000,175000,120000,29691,130000,105000,232200,119000,268000,153300,104244,145000,226000,70000,198800,122600,181500,127000,210000,120000,385000,245000,225000,175000,110019,86682,131650,105320,210000,151800,147500,112500,163200,65000,55000,165400,127300,107968,32811,145000,135000,126900,77900,110736,92280,169000,110600,150000,140000,162000,195000,160000,154000,82000,160000,145000,239400,136800,204500,142200,230000,323300,184700,120000,210000,136000,171250,113750,195000,142000,185900,129300,194100,152300,190000,120000,240000,157250,212000,194400,132192,174000,134000,38868,152000,144700,85500,38868,265800,177200,222000,115920,250000,64781,284310,153090,204500,142200,111000,213210,102434,226600,140100,156400,250000,176000,80000,233400,145300,248000,149000,156450,119200,185000,120250,225000,152700,64781,139152,82452,85000,65000,139000,200000,145000,269500,295500,165200,235000,135000,180000,144000,49216,43064,65000,160667,27568,304200,173800,191765,134326,173000,258384,153100,70000,146200,116960,370000,111600,72000,359170,295490,90000,90000,84000,110000,90000,70000,253000,115000,85000,145900,127000,95000,94600,86000,72000,60000,104000,173650,113900,126000,139500,110000,248100,145900,220000,175000,175000,108000,115000,110000,182500,135000,35000,146000,94000,300000,91000,86000,205500,132500,180000,97750,75000,252990,162170,216000,184000,120000,67500,86128,61520,140000,265000,153000,143000,126277,224500,126900,227700,154836,126000,165000,209000,112500,110000,370000,136000,104000,214000,154000,205000,157500,178000,109283,189000,137000,120000,170500,118575,97712,24940,154500,131325,140000,100000,138240,207500,172900,254000,147100,90700,90000,168400,105200,237000,170112,25912,134960,155000,130000,105000,70000,260000,234000,330000,204000,167310,121000,175000,125000,325000,171000,180000,137000,155810,106720,160800,132200,133000,113000,208400,157550,104650,240500,123700,78000,121000,78000,85600,48915,68000,53444,45150,275500,206000,56359,47799,102000,228000,180000,175000,16455,207611,127876,111000,104000,128000,81500,61520,43064,97750,192000,92000,195000,132600,81500,202400,147200,239000,54000,36000,176000,118720,95000,240000,157000,165000,136000,272300,222800,172750,82500,281000,181000,207611,127876,225000,168000,280600,158600,283780,218540,178500,323300,184700,123040,104584,185000,137700,205500,132500,65100,44640,161000,123000,200000,278700,159300,125000,65000,230000,175000,252990,162170,183000,122000,310270,239080,70000,135000,125000,253000,172040,135000,108000,129562,50000,227850,180500,199000,159000,350000,80000,240000,160000,107500,96750,174000,104000,275300,183500,250000,174350,126800,284050,193800,232989,85000,204500,138900,168400,105200,147100,150550,116710,147100,90700,120000,147100,90700,125000,100000,198800,105200,150600,120500,183000,167500,106500,239000,149000,122000,181500,127000,186000,138000,185000,122000,140000,112000,36000,91270,180000,165000,247000,118440,138900,297300,198200,110736,86128,204500,138900,87500,62500,244000,157000,136000,90600,49216,43064,160000,91773,315300,210200,177000,110000,65000,55000,183200,122200,150000,131000,101000,171050,124400,187000,128000,138000,92000,200000,138000,92000,120000,241300,124100,185000,152000,288000,107968,90599,189750,145000,252000,82254,61699,247500,172200,87500,62500,146000,108000,273000,166500,65000,45000,174000,189750,119213,190000,140000,228830,148590,140000,180514,108308,220000,170000,169000,110600,77737,64311,78000,75577,62433,204500,142200,64781,94000,81900,199000,162000,67672,208000,109500,240000,238530,95000,82000,80000,70000,154700,118900,232960,166400,156000,105000,193000,143000,138860,119610,205485,156560,210600,135000,170000,105000,135000,100000,100000,70132,51676,92280,79976,15000,64781,144100,89100,140000,100000,193600,119700,94000,81900,131721,180000,120000,242000,134000,104000,258800,199200,201000,141100,94100,126000,170000,104584,208500,165000,77737,86374,169000,110600,130800,87200,215000,61520,49216,238000,173000,205785,123471,299500,245100,40000,71259,290000,226000,161000,151000,53120,38868,136994,214500,120000,278300,205700,185900,167310,114000,194000,161000,32390,184950,119250,178500,136000,189000,159090,82000,149076,82365,194595,158000,305000,245000,205485,156560,168000,78400,175000,130002,71908,212000,132000,177000,148000,248100,145900,155000,38000,218000,235400,108320,152375,115934,81666,79000,273400,182200,160000,112000,285000,154000,220000,170000,200000,250000,125000,275000,200000,177000,136000,122720,231500,118000,299500,249600,297000,138000,267100,167200,188500,117000,150931,143250,231000,157250,240000,157250,232000,277300,213300,209000,184250,167500,85000,110736,92280,154440,68550,90000,60000,226600,140100,49216,41833,80000,52500,253000,156400,235000,223100,114700,172800,110000,152375,94000,183000,125000,120350,74400,134000,57007,44051,258750,172500,220000,150000,109528,287500,207500,134200,103200,160000,93919,180000,186600,119800,200000,383910,315850,198000,132000,141600,94400,209450,167560,185000,164000,80000,52500,238000,149500,186600,116500,61520,175000,145000,195000,220000,190000,113366,118539,86128,146000,97400,40747,166364,116455,145000,125000,76000,131000,222000,166500,205600,105700,138000,67000,211200,230000,60000,200000,180000,18381,200000,120000,126500,78000,157750,104650,133000,70000,40000,190000,158080,182000,252000,129000,231000,200800,159100,120160,140000,110000,165000,149094,290000,247500,172200,72250,162500,23753,83000,63967,188600,111550,219300,143000,133300,80000,204060,140358,198900,183310,43064,392000,224000,233000,199098,172000,107000,128000,81500,208450,151600,240960,200800,120681,72409,250000,176000,250000,170000,38290,215936,178560,148800,331640,283780,167954,115830,125000,185000,50000,331640,283780,189110,139000,199000,145000,199000,142000,230000,170000,66000,52000,200000,178560,148800,200000,166500,113220,365630,229000,185000,86700,192300,153800,67419,131650,105320,126400,235400,160080,146190,175000,228856,144540,151800,150000,100000,126500,78000,126500,78000,70000,300000,200000,96000,72000,205150,167850,222750,182250,104024,50745,148594,206000,140250,254500,130900,198000,124000,234485,112655,125000,51676,70179,64781,258000,190000,184184,167441,74087,32390,204500,90000,84000,202400,147200,139500,90000,192000,142000,143000,129000,191000,85000,70000,147648,98432,144800,250000,16000,27000,72000,172900,144100,160000,135000,101500,83700,283000,184000,220000,185000,246500,133500,174000,134000,330000,230000,167000,109000,47899,115000,145000,284000,227000,205000,160000,191400,127600,230000,95000,70000,258000,171000,87000,73000,20000,300000,110736,55368,151840,163152,108768,285000,193900,345000,234700,100000,40000,241000,210000,90000,59382,90000,84000,160000,221300,147500,210000,160000,192000,151000,169000,204500,142200,210000,170000,72000,60000,210000,159090,94400,90000,190000,125000,130002,71908,60000,81838,60000,255000,116990,82920,159000,105000,155000,102000,374000,197500,187000,20000,195000,119000,266450,177700,55720,50700,56000,135000,115000,302000,189000,220000,150000,93000,190000,46565,216000,184000,100000,128750,79350,155000,125000,273400,182200,165000,142500,213654,142436,124230,68637,204000,161500,185900,129300,148750,95000,287700,148000,227240,197600,178500,146100,112400,86128,79976,285000,90000,146000,237400,158200,192000,164000,150000,141000,267000,147100,90700,72000,177177,240000,142000,180000,105000,80000,60000,268000,144628,115702,144000,132000,106400,81800,93500,208200,151200,270000,194500,115500,140000,100000,225000,199000,50000,40000,98432,399880,41027,155000,100000,65000,280100,168100,120000,149040,113900,165000,145000,274450,199600,83500,52500,140000,76500,280000,250000,180000,157000,140700,109600,278000,173000,305000,125000,155000,120000,24000,165400,127300,259000,138750,218000,85000,132000,71500,215050,113100,130000,85000,250000,200000,168400,136505,100895,275300,183500,168400,105200,240000,120000,93000,237400,132870,105000,317070,170730,170000,125000,158700,123906,80976,66940,333500,180500,76284,257400,210600,65000,50000,293000,260000,192000,170000,125000,99000,233000,185100,127600,105000,160000,55000,241000,163000,120000,218000,118000,311000,162540,258750,225000,145000,153600,106800,140000,76500,182850,113000,126000,86400,232760,169280,162500,240350,174800,116000,153600,107500,94100,72400,178000,152000,233200,210000,160000,206000,130000,146100,112400,110000,70000,150120,120096,168000,178600,142880,255000,169000,155000,151410,144200,151410,115360,193170,116480,146000,94000,246080,203016,135344,110736,329500,269600,250500,159500,115000,94035,57920,113600,60000,256000,116000,245000,210000,283200,188800,36000,205640,142600,193200,156400,121000,72000,48000,132300,197000,328000,211000,237000,201450,229000,206000,231000,183750,165400,175000,152900,117700,285800,154600,289120,192400,179998,35000,258000,196000,121000,141000,206000,192000,164000,300000,260000,147000,92000,110000,261500,134500,83200,204500,142200,275300,183500,147648,123040,136600,109280,84000,60000,61520,70000,60000,281000,69500,285000,69525,61800,192000,178000,152000,160000,40000,130000,110000,225000,168000,130001,71907,144000,80000,205000,150000,189400,131685,204500,142200,172000,60000,77791,55410,57000,120000,277500,150000,236500,172800,110000,60000,100000,323905,150000,100000,62000,55000,155000,140000,36000,144000,77000,110736,55368,265000,217000,177300,136300,83000,208450,170550,72000,60000,130000,165000,145000,336400,201900,189750,131100,270000,95000,117300,69000,182000,144000,244000,200000,260000,225000,102500,186600,116500,80000,60000,222000,138000,207300,149200,292000,164500,292200,163800,126000,120000,280000,210000,150000,200000,170000,225000,175000,189750,131100,123400,82200,225000,50000,161800,121400,285000,193900,240000,196000,214000,170000,155000,98000,199000,260000,105066,110736,86128,145000,289800,214000,87500,165000,280830,173175,92280,49216,75038,64781,71475,61541,231250,138750,155000,242000,195000,155000,125000,160000,140000,183924,125760,430640,86374,30000,25500,175000,120000,219000,141000,213660,130760,275000,174000,143200,90000,72000,253200,342810,184590,105380,64500,30000,204620,110680,270703,221484,212750,218500,199098,203300,123600,231500,166000,172500,110500,238000,176000,237000,201450,193500,139000,150000,70179,97171,185900,129300,163196,145885,202800,104300,179170,94300,152500,116450,133800,220000,56536,214000,283200,188800,161800,141600,342300,176100,85000,65000,138784,83270,70000,318300,212200,230000,143200,105000,46755,43064,168400,105200,55368,43064,220000,67672,15000,86128,58444,85000,75000,250000,186000,230000,200000,53984,205000,180000,215000,170000,224000,176000,67635,74883,100000,80000,162500,200000,115000,239000,122900,237000,191765,134236,190000,112000,88256,105500,293000,148500,152900,117100,173000,113000,175000,110000,110000,205000,149500,127075,219535,146115,221000,153000,187000,179000,109000,142000,198800,105200,112000,115000,86000,106000,275000,50000,280700,150450,51861,93918,51962,175000,135000,257000,222000,133200,221000,147000,238000,156000,304000,48585,198340,104055,183600,130000,160000,120000,289076,202353,157750,104650,180000,200000,68000,60000,90000,155000,125000,181000,252000,154000,180000,155000,64200,56100,135000,171250,113750,153600,100500,115000,182500,121500,203100,114500,92700,167500,106500,59888,286000,207000,178600,230000,220000,210000,151800,317070,170730,21593,108000,60000,134000,124000,124500,175000,148700,125600,120000,185000,120250,183000,125000,135000,143865,115092,90000,173000,132000,208049,128500,149600,102000,100000,190000,106800,97171,80976,151000,43187,145000,154000,143000,79976,190000,120000,110736,111000,265000,235000,122638,73546,75000,60400,172309,60462,83500,52500,201036,134024,62000,58000,172000,115000,125000,90000,139500,109400,145000,239748,159832,186300,102500,149040,113900,153600,106800,172600,107900,180180,106020,376080,213120,206500,121600,170000,90000,95000,70000,120000,175000,206000,65000,48000,87000,145000,115100,73900,86128,58444,130000,205000,141288,94192,184000,143000,160000,147000,74883,70000,80000,210914,116704,185700,165000,193000,136850,139500,109400,276000,59382,48585,75577,48585,198094,102492,138666,102492,130000,150000,260000,110000,170000,130000,163800,126000,106250,167500,106500,250000,138000,130000,100000,124163,104500,70000,90000,70000,125000,127000,210550,153300,200000,161500,119500,105000,85000,215000,146300,215936,72000,60000,153400,122700,123900,340000,150000,64781,185900,121700,50000,100000,310000,239000,150000,149076,82365,85500,97750,116990,82920,200000,125000,155000,140000,205920,171600,121500,78000,116000,79976,44356,180000,200000,129192,104584,30000,185000,125000,34320,75577,106000,122000,93800,150000,90000,220000,72338,64781,40000,152380,121904,168400,105200,128280,106900,192000,100000,107968,86374,275000,174000,170500,73857,55044,162288,129058,80000,65000,124740,65488,72200,64980,179975,86466,175000,120000,230000,120000,205920,171600,265000,130000,168000,38868,167580,87980,104000,65000,230000,269000,158000,197000,106000,150000,100000,290000,192000,172800,300240,200160,140000,169000,100000,116888,110000,80000,55000,48000,137500,81500,30000,186000,153088,190000,160000,190000,183310,66000,148500,126277,228000,180000,90000,272000,170000,259000,110736,73824,18160,19910,247500,172200,107968,75577,288000,73824,61520,215050,198000,114000,209300,182200,85000,49216,120000,60000,147100,90700,227000,160000,56143,51824,60000,50000,153799,52500,250000,162500,165000,124000,63000,253750,169200,170000,120000,213580,163625,375000,102569,210000,231250,138750,284310,153090,110736,86128,100000,225900,156400,385000,241871,133832,36000,123040,98432,216100,140800,147648,53984,110000,63980,284000,236000,248100,145900,155850,102544,151410,115360,59382,125948,100000,185000,120250,26992,180000,85000,70000,100000,155000,140000,220000,204500,138900,23000,110000,182750,137500,314100,195800,205000,180000,165000,144000,160000,100000,199000,112000,130000,160000,135000,183000,350000,262500,122000,158677,103200,61200,155000,66970,63701,174500,113000,87000,108000,107250,119000,285800,154600,30000,220000,195000,168400,200000,153000,94000,90000,124234,74540,109000,84053,50000,125600,141290,74178,107500,52500,84000,125000,110000,200000,135000,48000,120000,200000,80000,257000,77737,38868,140000,53984,51824,41027,183310,102500,122000,94000,182000,77737,38868,300000,105500,110000,79976,44356,153400,122700,87000,50000,234100,203500,232200,167200,197000,106000,180000,145000,225000,200000,114000,291500,196200,150900,95000,80000,116000,72000,207000,167000,145000,135000,133800,96100,140000,100000,140000,115000,219000,126100,72000,175000,240500,137500,187500,165000,73824,25216,165750,225000,165750,110367,67979,115000,275000,175000,175308,100706,235000,135000,289076,202353,70179,37788,120000,231250,138750,100000,150000,120000,133000,272550,198200,187500,155000,64000,235000,185000,143100,113000,142000,180560,115440,120000,110000,76284,63980,141600,59059,46755,128000,236000,130000,125000,175000,155000,153600,106800,150000,140000,122000,94500,170000,130000,145000,128000,145000,100000,120000,115000,150000,150000,100000,150000,127500,126500,51000,260000,175000,40000,40000,250000,63000,210000,160000,272550,198200,94560,52533,220000,146000,248400,183600,150000,40000,120000,95000,160000,135000,24165,216000,144000,85000,65000,149000,119000,120000,150000,110000,246000,201000,190000,155000,235000,185000,190000,160000,100000,130000,115000,92350,67723,105000,70000,204500,142200,192000,164000,185900,129300,75000,175000,120000,167500,106500,75000,60000,184000,142000,145000,100000,44365,200000,145000,92350,73880,192000,164000,310000,239000,120000,95000,145000,135000,78000,73546,36773,160000,120000,125000,95000,47280,37824,115934,81666,175000,140000,249500,149850,122500,100000,249500,149850,55000,48000,249500,149850,58837,190000,120000,127000,104000,210000,150000,150000,210000,130000,182750,161500,102640,66100,210000,150000,198800,122600,130000,80000,136000,104000,150000,100000,159000,130000,215000,150000,187000,153000,255000,185000,430967,55410,50432,39925,169000,110600,60938,140000,120000,50000,134000,124000,166700,119000,124234,74540,100000,65000,200000,220000,146000,68293,110000,70000,190000,135000,128000,81500,173000,110000,192000,120000,190000,194000,129400,201000,89200,165000,125000,230000,196000,130000,90000,150000,100000,230000,150000,130000,180000,120000,192500,140000,152500,65000,55000,178750,160000,63040,165000,135000,170000,125000,105000,70000,130000,95000,203500,152000,197430,134760,120000,197000,99000,162000,110446,79178,70186,51716,149040,113900,95000,115000,171000,50000,185900,129300,230000,154600,75000,213000,152000,120000,110000,70000,227200,168000,64090,60938,243000,183000,150000,130000,90000,165000,124000,178000,132000,300000,116000,96000,92350,70186,105000,70000,105236,100000,189750,140250,130000,160000,109000,250000,150000,206000,135000,115573,73546,42026,191200,66192,230000,154600,80000,135000,110000,155000,140000,205000,179500,134000,145000,235000,175000,27317,90000,165000,135000,168400,105200,86193,49253,200000,198800,122600,100000,105066,104663,73880,125000,110000,148000,107000,100000,65000,63040,36773,299500,245100,168000,130000,161000,118000,205000,247500,172200,68293,177000,131000,146000,102000,80000,65000,61566,43096,175000,135000,80000,231250,138750,193750,116250,231250,138750,193750,116250,208000,127000,300000,196000,45555,205000,185000,247500,172200,110000,375000,225000,156400,104663,80036,140700,93800,350000,135000,104697,33000,34672,201000,119000,175000,154560,123648,170000,145000,135000,100000,247500,172200,177500,134000,192564,144854,179305,142127,315000,225000,243900,156600,79000,89306,182500,128500,77300,45600,110000,210000,136000,170000,140000,247500,172200,225000,184100,100000,85000,78000,161000,205000,160000,61566,49253,245000,180000,220000,198440,144000,240000,198440,144000,150000,57872,64000,39925,187200,116100,150000,127000,275000,166000,159699,138938,76000,103432,92350,80000,52500,236000,182000,180000,135000,240000,125404,195000,110000,123000,92250,180000,100000,97000,90000,180000,260000,180000,210000,157000,80000,52500,128000,81500,105000,70000,175000,122500,171000,117000,202800,104300,36773,30000,78000,48000,78000,42000,345600,230400,78000,48000,175950,130050,205600,105700,236600,84000,54000,80000,200000,73742,165000,33246,75050,108000,155000,38000,85000,65000,110820,92350,153600,106800,50000,123400,88100,120000,55000,150000,120000,139000,139600,85700,185000,50000,200000,148500,98200,115000,95000,225000,66000,134000,98000,105000,62000,57000,161311,144200,115360,83171,73546,42026,180000,160000,108000,200000,150000,125976,188700,160395,198440,144000,191475,141525,75648,156868,200000,69344,90000,126080,84053,200000,180000,108000,85000,165000,132000,130000,110000,45050,42028,135000,178800,132100,20000,140000,110000,160000,85000,250000,63000,187200,116100,145000,229998,154545,215000,159000,50000,183000,99750,68400,236900,159200,243225,179775,128000,191475,141525,218000,145300,195400,131300,105000,207000,153000,99000,200000,135000,195700,130500,130000,84000,100000,60000,80036,67723,141300,102100,150000,102200,144000,113000,31520,195400,131300,195400,131300,80000,60000,63040,50000,105000,190000,140000,180000,165000,108000,20000,179400,154000,193900,129300,222640,182160,150000,100000,122500,100000,297500,260000,15000,193000,93000,73000,136994,101570,57786,136000,112000,172000,215000,164000,45390,97500,212800,142800,73546,50000,151800,130240,165000,140250,179400,154000,75000,84053,73546,98506,86193,84053,73546,102663,80041,104611,82280,191475,141525,115000,31520,81000,66000,46000,80000,200000,180000,200000,204100,136100,250000,63000,118208,110820,19073,95000,70000,75000,113000,170000,113000,140000,50000,53368,29944,160000,119300,145000,90000,146200,124270,225000,160000,54634,185800,137400,245000,180000,203500,152000,250000,63000,186000,148800,128058,82000,110000,173000,186000,148800,158000,134000,200000,150000,216200,144100,115573,89306,250000,63000,135000,85000,206000,175100,189650,164996,154000,126000,200000,150000,135000,98506,73880,117000,99450,200000,135000,193900,129300,55410,86193,61566,175000,130000,188100,139860,248700,167100,50432,205000,141300,102100,50000,84053,61566,250000,63000,189500,140100,177600,131300,24000,202900,115000,115000,193900,129300,140000,216200,144100,216000,144000,150000,50000,250000,84053,131752,48000,260500,175100,55000,130000,77119,52008,206699,99100,200000,54000,130000,100000,80000,100000,221300,148700,30000,28368,91118,61566,60938,249260,185400,80036,128875,93700,100000,136260,109280,160000,92000,135446,104663,129000,86000,100000,25000,65257,200000,180000,153000,150075,110925,22800,22809,15000,133766,83000,186000,148800,112900,90320,240000,160000,300000,200000,65666,200000,116976,92350,120000,112900,90320,145000,105400,49268,215300,158200,209100,154600,115934,81666,155000,84053,164000,132000,123000,52533,115222,165400,132320,208775,147800,136994,101570,35093,183600,100800,49253,36940,42026,31520,42026,31520,215300,140400,63040,47280,260000,43096,63040,47280,55410,51064,60000,82900,63900,160000,112300,241000,159000,80000,58000,136000,108800,242000,200000,61566,36940,49253,165220,120160,124190,181940,132320,220110,160080,180000,120000,126500,106260,116000,155000,120600,130000,90000,170000,102100,84900,136620,99360,110820,98506,146000,43096,130000,110000,170000,161342,137141,167000,73880,61566,211500,138600,192400,90700,130000,61300,160000,113000,95550,167000,115500,243900,156600,136600,128875,93700,224000,167875,175000,135000,205300,176000,200100,70500,54000,205300,140400,205300,184700,175100,140250,116150,99050,85000,75000,214000,192600,266400,213120,141300,102100,206699,99100,110500,61566,43096,80000,60000,230000,150260,109280,160000,67000,52000,129000,69000,25000,126500,106260,220110,160080,105000,135000,50000,220000,172386,86193,220000,120000,200000,120000,65000,324000,216000,185100,104890,76814,117104,192037,120000,55685,52533,75000,157000,69133,65000,68293,109000,67597,20000,102839,200000,51081,83864,40000,31520,59888,54742,89306,83171,165000,153000,100000,76814,33609,75000,20000,30469,69999,55475,61989,152500,120000,135000,405000,150000,240000,135000,80000,380000,120402,177000,65141,48000,20000,220000,150000,90000,100000,100000,100000,144000,155499,24000,38400,100000,82500,49646,120000,84053,20000,125000,120000,110037,21013,50000,200000,60000,200000,100000,100000,82744,59303,62649,82528,170000,150000,55000,250000,80000,70000,130026,63831,68428,85000,230000,125000,120000,450000,46759,74130,127221,144000,75774,150000,103000,153000,90000,90000,60000,50000,270000,54238,47282,153667,28476,110000,82528,250000,59102,80000,138000,140000,79197,170000,80000,45760,100000,53192,235000,150000,79833,225000,76833,50180,88654,103160,113476,94564,150000,115000,187442,51519,106000,112872,150000,15966,95746,70000,76958,89294,276000,188000,160000,105000,174000,93000,60757,90000,70139,170000,96282,36643,72212,91000,99703,165000,80000,103691,42000,115000,63810,260000,110000,180000,200000,109024,200000,256000,110000,79833,72500,185000,69741,100000,112000,150000,20171,55000,58000,100000,77684,85000,76833,105000,72000,65013,28016,111775,93150,160000,25532,63831,190000,141846,71786,135000,24823,147000,96113,174000,135000,21844,125000,51321,69741,50000,39916,87000,26005,90734,81000,90000,61467,195000,37825,85000,416000,225000,56256,116914,46597,114047,88654,56000,28609,88654,47899,98000,66022,56738,24823,120000,20000,325000,200000,45896,160000,50000,40189,165000,42197,185000,62726,21669,110000,140000,120000,87738,61896,76833,74000,152000,18000,60000,130000,18907,59102,173762,148261,38776,46809,91237,62726,115000,235000,75000,62000,73000,45391,190200,118000,138350,130800,45618,168000,119059,423000,28369,165000,412000,151000,105000,100000],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"employment_type\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Salary in USD\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Salary Distribution Across employment_type\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0c8b2559-c4db-4bc2-ad9f-55c96f375377');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig = px.box(df_duplicados, x='employment_type', y='salary_in_usd', title='Salary Distribution Across employment_type')\n",
        "fig.update_layout(\n",
        "    xaxis_title='employment_type',\n",
        "    yaxis_title='Salary in USD',\n",
        "    boxmode='group'\n",
        ")\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kfU0KlbsmDVi"
      },
      "source": [
        "Vamos a tratar los datos categoricos y no categoricos, empezando por el salario ya que es una de nuestras variables de salida necesitamos que este sin tanto ruido por lo que vamos a tomar los datos de los cuartiles Q1 y Q3"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-fkTqYtawQS9",
        "outputId": "2b3cf313-9b61-47ba-9c2c-49816a3a4c41"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df_cleanedPre\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140968.32312724486,\n        \"min\": 5341.0,\n        \"max\": 450000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          146258.40909941957,\n          140000.0,\n          5341.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-43ec687c-2600-4414-aaf6-874bd12674ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5341.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>146258.409099</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>66594.117529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>15000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>98506.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>140000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>186000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>450000.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43ec687c-2600-4414-aaf6-874bd12674ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43ec687c-2600-4414-aaf6-874bd12674ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43ec687c-2600-4414-aaf6-874bd12674ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f782fa4d-969e-4935-8295-b1a87b422fb2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f782fa4d-969e-4935-8295-b1a87b422fb2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f782fa4d-969e-4935-8295-b1a87b422fb2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "       salary_in_usd\n",
              "count    5341.000000\n",
              "mean   146258.409099\n",
              "std     66594.117529\n",
              "min     15000.000000\n",
              "25%     98506.000000\n",
              "50%    140000.000000\n",
              "75%    186000.000000\n",
              "max    450000.000000"
            ]
          },
          "execution_count": 101,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cleanedPre = df_duplicados.copy()\n",
        "df_cleanedPre.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4K4156gLk2KF",
        "outputId": "02424586-9221-4450-cfd2-307d43f69364"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"cd7b2795-5320-4886-bb8b-63c321d3a1db\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"cd7b2795-5320-4886-bb8b-63c321d3a1db\")) {                    Plotly.newPlot(                        \"cd7b2795-5320-4886-bb8b-63c321d3a1db\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"experience_level=%{x}\\u003cbr\\u003esalary_in_usd=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Executive\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Executive\",\"Entry-level\",\"Senior\",\"Executive\",\"Executive\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Executive\",\"Executive\",\"Executive\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Senior\",\"Executive\",\"Senior\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Senior\",\"Entry-level\",\"Executive\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Executive\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Executive\",\"Senior\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Entry-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Senior\",\"Entry-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Mid-level\",\"Mid-level\",\"Senior\",\"Senior\",\"Mid-level\",\"Entry-level\",\"Entry-level\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[95012,186000,81800,212000,93300,130000,100000,224400,138700,210000,168000,224400,138700,43064,36912,95000,75000,300000,234000,140000,120000,204500,142200,155000,110000,266500,152000,222200,136000,273400,182200,167500,106500,185900,129300,185000,79600,122000,94500,247300,139700,176000,100000,204500,142200,247600,127300,223400,186200,167500,106500,185900,129300,72000,64000,179820,143860,283050,188700,133000,58400,141298,115607,100000,266500,144400,71363,55368,287500,156000,90000,70000,199000,162000,170884,113923,184000,123000,235750,174250,165000,118800,225000,150000,213900,116800,220000,150000,150000,100000,247500,172200,155000,120000,226700,133300,184000,123000,130000,117000,160000,140000,166000,73000,185900,129300,130000,104000,143000,116000,220000,180000,215000,200000,253000,131000,220000,176000,49216,36912,210000,147000,186000,161000,205000,220000,190000,137000,110000,172000,146000,148000,99000,150000,105000,99000,52500,180514,108308,210000,147000,290300,196685,220000,176000,175000,130000,185000,150000,145000,115000,133000,58300,115000,95000,110244,39372,43187,31310,92280,67672,75577,303387,100017,230300,140000,124935,76050,224800,131100,258000,171000,196000,121000,195800,171500,166000,73100,220000,160000,85000,65000,220000,100000,185000,152000,48585,38868,220000,100000,110000,80000,36912,150200,71000,167200,133000,58400,135000,110000,104584,73824,187415,114080,166000,73100,306400,168700,32974,165000,140000,150000,167000,121000,190200,95100,133000,58400,90000,70000,73100,135000,100000,180514,108308,294000,192000,266000,167000,200000,150000,163800,88200,180400,138800,67672,55368,319000,206000,215000,142000,266000,167000,140130,84870,178300,105400,215000,142000,240000,210000,150000,116000,90000,145000,128000,154000,126000,240000,157250,219650,136000,180000,125000,247600,127300,60000,55000,250000,125000,190000,170000,202600,168800,132000,111000,203000,127000,125009,83339,112200,91800,200000,160000,161952,160000,133000,58300,254000,159000,170000,85000,130500,116000,81400,43500,169000,92000,166000,73100,190000,165000,305600,146600,150000,120000,275000,146400,208500,165000,258700,172500,185000,198200,110200,166000,73100,212000,93300,212000,93300,166000,73100,167100,111400,166000,73100,170000,145000,170000,135000,139810,95325,278700,159300,226700,151100,247300,139700,188000,139000,160000,94000,127000,65000,276000,174000,260000,136000,250000,210000,238000,212000,190000,261500,134500,239000,122900,158500,115000,331640,267720,180000,90000,83000,66000,224250,121550,109000,100000,205400,92900,220000,130000,160000,110000,230000,186030,110200,130000,100000,242000,106200,220000,120000,91200,58200,192000,178000,210000,130000,160000,150000,206000,134000,180000,135000,200000,120000,212000,93300,106700,57700,266400,173300,125000,100000,165600,65800,210400,170500,170000,160000,185400,81536,193000,158000,170000,100000,95000,75000,115000,105000,161900,80000,192500,100000,75000,91000,216600,166000,73100,336300,179000,296400,159600,258500,226500,247250,118400,160000,140000,93400,172256,123040,219000,132000,130500,116000,323300,184700,250000,200000,136000,91000,143000,78000,135000,110000,142000,102200,137500,81500,202000,147000,140000,125000,170625,127950,123040,86128,85256,71615,100000,100000,185000,125000,60000,52000,300000,260000,225000,170000,100000,80000,204500,142200,297300,198200,240000,185000,79600,222200,110000,95000,324000,159000,207700,133700,71000,57000,59000,50000,234000,208000,187000,128000,50000,64781,57223,21000,135000,120000,150000,140000,280000,190000,43064,245700,132300,90000,80000,212000,93300,58300,145640,84400,300000,195000,190000,107500,105000,75000,98000,236160,159408,115000,85000,145000,120000,120350,74400,158494,88052,181500,127000,300000,260000,25000,225300,197400,205500,128500,191600,125600,130410,92000,183900,108800,275000,121200,231250,111000,300000,130000,210500,105300,158400,85800,156100,100400,134200,103200,85000,220000,160000,95000,95400,57800,86000,125000,87500,170000,133200,84000,171000,93000,216450,123750,212800,124100,205000,166000,231650,189100,160000,120000,266875,128250,158600,115300,225300,197400,109900,61200,161000,75000,166000,73100,138510,95490,150000,110000,232200,133300,121788,79032,178250,110500,190000,160000,216000,184000,166000,104000,230000,196000,165600,65800,186000,81800,135000,82500,247250,169000,105500,195800,161900,108500,78800,225000,166000,160000,110000,120000,105000,87500,135000,100000,105000,95000,289800,214200,167500,106500,146000,128000,81500,370000,200000,175000,160000,240000,100000,180000,143000,127000,249300,149300,190000,160000,248100,145900,170200,83900,166000,90000,94100,226600,140100,156000,124000,132600,308000,190400,155000,136000,75000,214500,132600,111000,104000,85000,75000,180250,118000,212800,111600,157500,132500,75000,93918,51962,171000,152000,223600,115000,140000,110000,130900,72700,333500,144000,180000,118200,354200,221800,73000,156600,137200,149000,65300,187000,180000,119636,70374,105000,67000,102000,94770,133000,58400,169900,164100,305600,75000,37573,36940,180240,120160,93400,119000,71400,115950,69570,225100,140900,179000,144000,250800,167200,144000,76000,230000,180000,156450,119200,150000,130000,247500,172200,155000,125000,175000,97500,220000,185000,303050,202350,21593,201650,124600,93400,145000,110000,89500,65000,328400,205600,184800,85000,61800,70748,67056,116000,72500,215000,169850,225000,180000,147400,107682,225300,197400,160000,136000,204600,126500,210000,115000,86500,40400,329700,192351,280000,106700,97000,175000,150000,88000,60000,123000,93593,222405,172800,205600,105700,263500,189360,192000,124000,230000,124000,148500,82500,184800,310000,206000,372000,223000,172256,123040,131000,148500,82500,233500,146000,280889,187259,305100,146900,78800,44100,166000,73100,80000,150000,80000,110000,202800,104300,272400,140100,154000,103000,80750,48450,85600,57000,190400,112000,119636,70374,304750,98873,58161,138000,85500,307100,216800,153600,106800,250000,280000,180000,160000,130000,162000,164640,131712,74800,63600,92280,67672,140000,253792,158620,259900,139200,118118,79976,293000,185000,115500,70000,142000,102000,141600,121400,240000,55000,49000,135000,200000,180000,246080,184560,168000,105000,70000,100000,243000,152000,79976,115600,79700,281700,141100,173100,86900,258700,133800,225300,197400,157000,125000,208000,134000,140000,65000,188200,49216,110000,73400,183414,97200,299000,187000,66000,140000,170200,83900,101570,177000,118000,234500,127000,114979,287500,168000,155000,153000,136000,254000,214500,134500,136000,104000,143000,117000,110000,73824,55368,370000,200000,275300,183500,230000,196000,253000,172040,234000,178000,164000,109238,68274,57223,51824,80800,53800,258900,176080,120000,110000,309000,65000,60000,132100,68400,160000,140000,62500,142000,128000,155000,139500,221000,129000,259000,138750,100000,155000,130000,215000,182750,207000,141000,90000,36000,300000,116700,93400,80000,50000,179000,176490,195000,143750,180000,162000,199000,196760,90000,70000,324000,159000,222000,50000,70179,110000,75000,46426,38868,80000,150000,130000,126500,78000,250000,222000,120000,204500,142200,297000,138000,147600,106300,102586,79981,131250,128100,174500,113000,56500,38868,227000,185000,230000,160000,138300,110700,130000,80000,212175,156000,111151,66691,190000,138700,95040,59400,197802,156453,308000,144000,172000,140000,89819,72593,122400,80000,70000,90000,227500,147500,150000,50000,73824,55368,220000,180000,331640,267720,190000,130000,150000,50000,172200,131200,250000,100000,165000,155000,280000,200000,73824,67672,290000,173200,235000,204000,300000,222000,155000,105000,287500,212500,190027,152022,19434,131000,88000,198000,132000,125000,115000,145000,130000,170700,113900,185000,81000,123000,80000,75000,53000,48000,369120,73824,125000,190000,115000,194000,175000,185000,160000,185000,50000,70000,130916,120000,160000,218213,178538,316000,202000,189750,119213,162000,130000,170200,83900,250944,205318,125000,135000,114000,218213,178538,240000,163200,258800,199200,215625,159375,203000,133000,272400,140100,282000,208000,93919,51962,211000,118800,75000,159350,130100,262000,245000,205218,136743,185000,94600,160000,107000,264400,176300,275000,175000,76000,53984,43187,150000,125000,210000,210000,169500,138000,180000,120000,297300,198200,204500,138900,110400,68000,260600,63750,46400,214872,186846,95000,70600,149500,127075,162000,111000,280000,182750,196000,142600,193000,110000,245000,80000,70000,250000,225000,61520,49216,205000,240000,220000,297300,198200,156000,196500,97300,192000,164000,227700,154836,140000,285000,190000,405000,270000,214300,108500,145000,115000,130000,113000,194500,110250,295000,177300,55368,44294,192000,164000,220000,187000,353200,249300,85000,79000,131000,220000,163000,107400,101500,80976,300000,100000,175000,164000,211000,276000,184000,115000,167000,144000,96000,145000,116000,161000,116300,140000,125000,175564,144854,225000,166000,190000,150000,151300,126100,190000,152000,190000,150000,180000,125000,113000,90400,204300,139000,124000,157000,212800,111600,183000,147000,169000,91000,210000,160000,70900,193000,128000,275000,243000,174500,113000,80000,145000,115000,202000,96313,250000,48585,43187,204000,127500,145500,108000,206000,175100,122500,82500,95000,130000,217000,192000,90000,60000,350000,168000,234900,113500,385000,245000,255000,170200,83900,202500,177500,150000,155000,130000,240000,170200,83900,300000,150000,300000,150000,213600,103200,230000,153000,127500,250000,385000,310000,88000,158000,108000,310000,129192,98432,369120,40680,306000,204000,75577,18000,369120,270000,200000,204500,142200,92280,188600,111550,360000,240000,129100,111400,135000,242921,170045,175000,90000,156450,119200,154800,76300,178600,88600,207345,180300,205000,167500,228045,198300,140000,100000,78125,40423,140000,100000,125000,120000,127000,99000,120000,194500,132320,223602,143520,180000,140000,121809,83667,140000,154000,103000,90000,140000,100000,296100,144500,118600,96800,100000,48585,142000,128000,99500,53300,165000,172000,125000,250000,245000,234900,68400,139000,172000,125000,139600,85700,100000,143000,95000,330000,188000,238000,156000,145000,106000,172256,123040,269100,131300,220000,150000,73824,61520,252990,162170,260000,235000,190000,145000,212800,111600,130000,194521,176838,200000,170000,191765,134236,198800,90700,154800,76300,130000,115000,42107,200000,155000,115500,73500,179000,109000,221000,180000,233300,155500,306000,180000,212800,115100,117500,86720,150000,90000,70000,212800,111600,135000,110000,175000,208450,151600,324000,159000,155000,135000,223250,156275,220000,245000,185000,67500,46500,270000,232200,43187,78000,370000,178200,115000,204000,143000,95000,240000,156400,168000,112000,253430,212780,265800,165500,193000,134000,180000,150000,120681,72409,180000,139750,254000,260000,192000,272290,169374,195000,204500,142200,17000,181500,112200,150000,100000,250500,166600,247500,172200,223290,131310,44753,35000,53984,204500,142200,220000,140000,135960,70960,128750,86250,110736,92280,185100,133300,150000,75000,130000,73824,61520,85000,80000,70000,260000,105000,80000,150000,95000,204750,153550,141000,175000,120000,207611,127876,170000,144500,255360,212800,106400,81800,130000,69139,100631,80505,300105,151090,217600,145000,79976,55368,129000,185000,50000,108000,80000,59500,173400,215000,153000,210398,147648,60000,54000,202000,132000,73824,81206,330000,188000,110000,190000,170000,150000,125000,105000,90000,73000,150000,135000,329500,269600,156400,185900,129300,146000,97000,147100,90700,257000,197000,120000,84800,135344,98432,246080,184560,53120,33686,260000,225000,340000,213600,142400,125000,85000,207900,158400,385000,200000,241300,211949,115000,90000,172200,131200,123800,240000,142500,34924,330000,204000,180000,160000,193600,130838,225500,139400,328133,218755,250830,143370,260000,203500,166500,148350,87400,157550,104650,139500,118575,129150,98400,67672,98010,66825,190000,170000,170000,120000,229000,131000,104584,92280,192000,164000,223800,172100,258800,199200,185000,148000,193600,119700,175750,136742,257400,193500,228856,144540,140000,155000,125000,150600,120500,176000,200000,115500,73500,135344,98432,225000,172758,86128,67672,51676,43064,245000,194992,140000,213800,180300,375500,250300,262269,230797,147100,90700,185000,145000,123040,92280,98432,62442,90000,195000,73500,185000,145000,158900,132400,140000,130000,100000,163800,126000,111967,88000,216027,101028,309400,159100,174350,126800,262000,186000,129000,95000,175000,120000,29691,130000,105000,232200,119000,268000,153300,104244,145000,226000,70000,198800,122600,181500,127000,210000,120000,385000,245000,225000,175000,110019,86682,131650,105320,210000,151800,147500,112500,163200,65000,55000,165400,127300,107968,32811,145000,135000,126900,77900,110736,92280,169000,110600,150000,140000,162000,195000,160000,154000,82000,160000,145000,239400,136800,204500,142200,230000,323300,184700,120000,210000,136000,171250,113750,195000,142000,185900,129300,194100,152300,190000,120000,240000,157250,212000,194400,132192,174000,134000,38868,152000,144700,85500,38868,265800,177200,222000,115920,250000,64781,284310,153090,204500,142200,111000,213210,102434,226600,140100,156400,250000,176000,80000,233400,145300,248000,149000,156450,119200,185000,120250,225000,152700,64781,139152,82452,85000,65000,139000,200000,145000,269500,295500,165200,235000,135000,180000,144000,49216,43064,65000,160667,27568,304200,173800,191765,134326,173000,258384,153100,70000,146200,116960,370000,111600,72000,359170,295490,90000,90000,84000,110000,90000,70000,253000,115000,85000,145900,127000,95000,94600,86000,72000,60000,104000,173650,113900,126000,139500,110000,248100,145900,220000,175000,175000,108000,115000,110000,182500,135000,35000,146000,94000,300000,91000,86000,205500,132500,180000,97750,75000,252990,162170,216000,184000,120000,67500,86128,61520,140000,265000,153000,143000,126277,224500,126900,227700,154836,126000,165000,209000,112500,110000,370000,136000,104000,214000,154000,205000,157500,178000,109283,189000,137000,120000,170500,118575,97712,24940,154500,131325,140000,100000,138240,207500,172900,254000,147100,90700,90000,168400,105200,237000,170112,25912,134960,155000,130000,105000,70000,260000,234000,330000,204000,167310,121000,175000,125000,325000,171000,180000,137000,155810,106720,160800,132200,133000,113000,208400,157550,104650,240500,123700,78000,121000,78000,85600,48915,68000,53444,45150,275500,206000,56359,47799,102000,228000,180000,175000,16455,207611,127876,111000,104000,128000,81500,61520,43064,97750,192000,92000,195000,132600,81500,202400,147200,239000,54000,36000,176000,118720,95000,240000,157000,165000,136000,272300,222800,172750,82500,281000,181000,207611,127876,225000,168000,280600,158600,283780,218540,178500,323300,184700,123040,104584,185000,137700,205500,132500,65100,44640,161000,123000,200000,278700,159300,125000,65000,230000,175000,252990,162170,183000,122000,310270,239080,70000,135000,125000,253000,172040,135000,108000,129562,50000,227850,180500,199000,159000,350000,80000,240000,160000,107500,96750,174000,104000,275300,183500,250000,174350,126800,284050,193800,232989,85000,204500,138900,168400,105200,147100,150550,116710,147100,90700,120000,147100,90700,125000,100000,198800,105200,150600,120500,183000,167500,106500,239000,149000,122000,181500,127000,186000,138000,185000,122000,140000,112000,36000,91270,180000,165000,247000,118440,138900,297300,198200,110736,86128,204500,138900,87500,62500,244000,157000,136000,90600,49216,43064,160000,91773,315300,210200,177000,110000,65000,55000,183200,122200,150000,131000,101000,171050,124400,187000,128000,138000,92000,200000,138000,92000,120000,241300,124100,185000,152000,288000,107968,90599,189750,145000,252000,82254,61699,247500,172200,87500,62500,146000,108000,273000,166500,65000,45000,174000,189750,119213,190000,140000,228830,148590,140000,180514,108308,220000,170000,169000,110600,77737,64311,78000,75577,62433,204500,142200,64781,94000,81900,199000,162000,67672,208000,109500,240000,238530,95000,82000,80000,70000,154700,118900,232960,166400,156000,105000,193000,143000,138860,119610,205485,156560,210600,135000,170000,105000,135000,100000,100000,70132,51676,92280,79976,15000,64781,144100,89100,140000,100000,193600,119700,94000,81900,131721,180000,120000,242000,134000,104000,258800,199200,201000,141100,94100,126000,170000,104584,208500,165000,77737,86374,169000,110600,130800,87200,215000,61520,49216,238000,173000,205785,123471,299500,245100,40000,71259,290000,226000,161000,151000,53120,38868,136994,214500,120000,278300,205700,185900,167310,114000,194000,161000,32390,184950,119250,178500,136000,189000,159090,82000,149076,82365,194595,158000,305000,245000,205485,156560,168000,78400,175000,130002,71908,212000,132000,177000,148000,248100,145900,155000,38000,218000,235400,108320,152375,115934,81666,79000,273400,182200,160000,112000,285000,154000,220000,170000,200000,250000,125000,275000,200000,177000,136000,122720,231500,118000,299500,249600,297000,138000,267100,167200,188500,117000,150931,143250,231000,157250,240000,157250,232000,277300,213300,209000,184250,167500,85000,110736,92280,154440,68550,90000,60000,226600,140100,49216,41833,80000,52500,253000,156400,235000,223100,114700,172800,110000,152375,94000,183000,125000,120350,74400,134000,57007,44051,258750,172500,220000,150000,109528,287500,207500,134200,103200,160000,93919,180000,186600,119800,200000,383910,315850,198000,132000,141600,94400,209450,167560,185000,164000,80000,52500,238000,149500,186600,116500,61520,175000,145000,195000,220000,190000,113366,118539,86128,146000,97400,40747,166364,116455,145000,125000,76000,131000,222000,166500,205600,105700,138000,67000,211200,230000,60000,200000,180000,18381,200000,120000,126500,78000,157750,104650,133000,70000,40000,190000,158080,182000,252000,129000,231000,200800,159100,120160,140000,110000,165000,149094,290000,247500,172200,72250,162500,23753,83000,63967,188600,111550,219300,143000,133300,80000,204060,140358,198900,183310,43064,392000,224000,233000,199098,172000,107000,128000,81500,208450,151600,240960,200800,120681,72409,250000,176000,250000,170000,38290,215936,178560,148800,331640,283780,167954,115830,125000,185000,50000,331640,283780,189110,139000,199000,145000,199000,142000,230000,170000,66000,52000,200000,178560,148800,200000,166500,113220,365630,229000,185000,86700,192300,153800,67419,131650,105320,126400,235400,160080,146190,175000,228856,144540,151800,150000,100000,126500,78000,126500,78000,70000,300000,200000,96000,72000,205150,167850,222750,182250,104024,50745,148594,206000,140250,254500,130900,198000,124000,234485,112655,125000,51676,70179,64781,258000,190000,184184,167441,74087,32390,204500,90000,84000,202400,147200,139500,90000,192000,142000,143000,129000,191000,85000,70000,147648,98432,144800,250000,16000,27000,72000,172900,144100,160000,135000,101500,83700,283000,184000,220000,185000,246500,133500,174000,134000,330000,230000,167000,109000,47899,115000,145000,284000,227000,205000,160000,191400,127600,230000,95000,70000,258000,171000,87000,73000,20000,300000,110736,55368,151840,163152,108768,285000,193900,345000,234700,100000,40000,241000,210000,90000,59382,90000,84000,160000,221300,147500,210000,160000,192000,151000,169000,204500,142200,210000,170000,72000,60000,210000,159090,94400,90000,190000,125000,130002,71908,60000,81838,60000,255000,116990,82920,159000,105000,155000,102000,374000,197500,187000,20000,195000,119000,266450,177700,55720,50700,56000,135000,115000,302000,189000,220000,150000,93000,190000,46565,216000,184000,100000,128750,79350,155000,125000,273400,182200,165000,142500,213654,142436,124230,68637,204000,161500,185900,129300,148750,95000,287700,148000,227240,197600,178500,146100,112400,86128,79976,285000,90000,146000,237400,158200,192000,164000,150000,141000,267000,147100,90700,72000,177177,240000,142000,180000,105000,80000,60000,268000,144628,115702,144000,132000,106400,81800,93500,208200,151200,270000,194500,115500,140000,100000,225000,199000,50000,40000,98432,399880,41027,155000,100000,65000,280100,168100,120000,149040,113900,165000,145000,274450,199600,83500,52500,140000,76500,280000,250000,180000,157000,140700,109600,278000,173000,305000,125000,155000,120000,24000,165400,127300,259000,138750,218000,85000,132000,71500,215050,113100,130000,85000,250000,200000,168400,136505,100895,275300,183500,168400,105200,240000,120000,93000,237400,132870,105000,317070,170730,170000,125000,158700,123906,80976,66940,333500,180500,76284,257400,210600,65000,50000,293000,260000,192000,170000,125000,99000,233000,185100,127600,105000,160000,55000,241000,163000,120000,218000,118000,311000,162540,258750,225000,145000,153600,106800,140000,76500,182850,113000,126000,86400,232760,169280,162500,240350,174800,116000,153600,107500,94100,72400,178000,152000,233200,210000,160000,206000,130000,146100,112400,110000,70000,150120,120096,168000,178600,142880,255000,169000,155000,151410,144200,151410,115360,193170,116480,146000,94000,246080,203016,135344,110736,329500,269600,250500,159500,115000,94035,57920,113600,60000,256000,116000,245000,210000,283200,188800,36000,205640,142600,193200,156400,121000,72000,48000,132300,197000,328000,211000,237000,201450,229000,206000,231000,183750,165400,175000,152900,117700,285800,154600,289120,192400,179998,35000,258000,196000,121000,141000,206000,192000,164000,300000,260000,147000,92000,110000,261500,134500,83200,204500,142200,275300,183500,147648,123040,136600,109280,84000,60000,61520,70000,60000,281000,69500,285000,69525,61800,192000,178000,152000,160000,40000,130000,110000,225000,168000,130001,71907,144000,80000,205000,150000,189400,131685,204500,142200,172000,60000,77791,55410,57000,120000,277500,150000,236500,172800,110000,60000,100000,323905,150000,100000,62000,55000,155000,140000,36000,144000,77000,110736,55368,265000,217000,177300,136300,83000,208450,170550,72000,60000,130000,165000,145000,336400,201900,189750,131100,270000,95000,117300,69000,182000,144000,244000,200000,260000,225000,102500,186600,116500,80000,60000,222000,138000,207300,149200,292000,164500,292200,163800,126000,120000,280000,210000,150000,200000,170000,225000,175000,189750,131100,123400,82200,225000,50000,161800,121400,285000,193900,240000,196000,214000,170000,155000,98000,199000,260000,105066,110736,86128,145000,289800,214000,87500,165000,280830,173175,92280,49216,75038,64781,71475,61541,231250,138750,155000,242000,195000,155000,125000,160000,140000,183924,125760,430640,86374,30000,25500,175000,120000,219000,141000,213660,130760,275000,174000,143200,90000,72000,253200,342810,184590,105380,64500,30000,204620,110680,270703,221484,212750,218500,199098,203300,123600,231500,166000,172500,110500,238000,176000,237000,201450,193500,139000,150000,70179,97171,185900,129300,163196,145885,202800,104300,179170,94300,152500,116450,133800,220000,56536,214000,283200,188800,161800,141600,342300,176100,85000,65000,138784,83270,70000,318300,212200,230000,143200,105000,46755,43064,168400,105200,55368,43064,220000,67672,15000,86128,58444,85000,75000,250000,186000,230000,200000,53984,205000,180000,215000,170000,224000,176000,67635,74883,100000,80000,162500,200000,115000,239000,122900,237000,191765,134236,190000,112000,88256,105500,293000,148500,152900,117100,173000,113000,175000,110000,110000,205000,149500,127075,219535,146115,221000,153000,187000,179000,109000,142000,198800,105200,112000,115000,86000,106000,275000,50000,280700,150450,51861,93918,51962,175000,135000,257000,222000,133200,221000,147000,238000,156000,304000,48585,198340,104055,183600,130000,160000,120000,289076,202353,157750,104650,180000,200000,68000,60000,90000,155000,125000,181000,252000,154000,180000,155000,64200,56100,135000,171250,113750,153600,100500,115000,182500,121500,203100,114500,92700,167500,106500,59888,286000,207000,178600,230000,220000,210000,151800,317070,170730,21593,108000,60000,134000,124000,124500,175000,148700,125600,120000,185000,120250,183000,125000,135000,143865,115092,90000,173000,132000,208049,128500,149600,102000,100000,190000,106800,97171,80976,151000,43187,145000,154000,143000,79976,190000,120000,110736,111000,265000,235000,122638,73546,75000,60400,172309,60462,83500,52500,201036,134024,62000,58000,172000,115000,125000,90000,139500,109400,145000,239748,159832,186300,102500,149040,113900,153600,106800,172600,107900,180180,106020,376080,213120,206500,121600,170000,90000,95000,70000,120000,175000,206000,65000,48000,87000,145000,115100,73900,86128,58444,130000,205000,141288,94192,184000,143000,160000,147000,74883,70000,80000,210914,116704,185700,165000,193000,136850,139500,109400,276000,59382,48585,75577,48585,198094,102492,138666,102492,130000,150000,260000,110000,170000,130000,163800,126000,106250,167500,106500,250000,138000,130000,100000,124163,104500,70000,90000,70000,125000,127000,210550,153300,200000,161500,119500,105000,85000,215000,146300,215936,72000,60000,153400,122700,123900,340000,150000,64781,185900,121700,50000,100000,310000,239000,150000,149076,82365,85500,97750,116990,82920,200000,125000,155000,140000,205920,171600,121500,78000,116000,79976,44356,180000,200000,129192,104584,30000,185000,125000,34320,75577,106000,122000,93800,150000,90000,220000,72338,64781,40000,152380,121904,168400,105200,128280,106900,192000,100000,107968,86374,275000,174000,170500,73857,55044,162288,129058,80000,65000,124740,65488,72200,64980,179975,86466,175000,120000,230000,120000,205920,171600,265000,130000,168000,38868,167580,87980,104000,65000,230000,269000,158000,197000,106000,150000,100000,290000,192000,172800,300240,200160,140000,169000,100000,116888,110000,80000,55000,48000,137500,81500,30000,186000,153088,190000,160000,190000,183310,66000,148500,126277,228000,180000,90000,272000,170000,259000,110736,73824,18160,19910,247500,172200,107968,75577,288000,73824,61520,215050,198000,114000,209300,182200,85000,49216,120000,60000,147100,90700,227000,160000,56143,51824,60000,50000,153799,52500,250000,162500,165000,124000,63000,253750,169200,170000,120000,213580,163625,375000,102569,210000,231250,138750,284310,153090,110736,86128,100000,225900,156400,385000,241871,133832,36000,123040,98432,216100,140800,147648,53984,110000,63980,284000,236000,248100,145900,155850,102544,151410,115360,59382,125948,100000,185000,120250,26992,180000,85000,70000,100000,155000,140000,220000,204500,138900,23000,110000,182750,137500,314100,195800,205000,180000,165000,144000,160000,100000,199000,112000,130000,160000,135000,183000,350000,262500,122000,158677,103200,61200,155000,66970,63701,174500,113000,87000,108000,107250,119000,285800,154600,30000,220000,195000,168400,200000,153000,94000,90000,124234,74540,109000,84053,50000,125600,141290,74178,107500,52500,84000,125000,110000,200000,135000,48000,120000,200000,80000,257000,77737,38868,140000,53984,51824,41027,183310,102500,122000,94000,182000,77737,38868,300000,105500,110000,79976,44356,153400,122700,87000,50000,234100,203500,232200,167200,197000,106000,180000,145000,225000,200000,114000,291500,196200,150900,95000,80000,116000,72000,207000,167000,145000,135000,133800,96100,140000,100000,140000,115000,219000,126100,72000,175000,240500,137500,187500,165000,73824,25216,165750,225000,165750,110367,67979,115000,275000,175000,175308,100706,235000,135000,289076,202353,70179,37788,120000,231250,138750,100000,150000,120000,133000,272550,198200,187500,155000,64000,235000,185000,143100,113000,142000,180560,115440,120000,110000,76284,63980,141600,59059,46755,128000,236000,130000,125000,175000,155000,153600,106800,150000,140000,122000,94500,170000,130000,145000,128000,145000,100000,120000,115000,150000,150000,100000,150000,127500,126500,51000,260000,175000,40000,40000,250000,63000,210000,160000,272550,198200,94560,52533,220000,146000,248400,183600,150000,40000,120000,95000,160000,135000,24165,216000,144000,85000,65000,149000,119000,120000,150000,110000,246000,201000,190000,155000,235000,185000,190000,160000,100000,130000,115000,92350,67723,105000,70000,204500,142200,192000,164000,185900,129300,75000,175000,120000,167500,106500,75000,60000,184000,142000,145000,100000,44365,200000,145000,92350,73880,192000,164000,310000,239000,120000,95000,145000,135000,78000,73546,36773,160000,120000,125000,95000,47280,37824,115934,81666,175000,140000,249500,149850,122500,100000,249500,149850,55000,48000,249500,149850,58837,190000,120000,127000,104000,210000,150000,150000,210000,130000,182750,161500,102640,66100,210000,150000,198800,122600,130000,80000,136000,104000,150000,100000,159000,130000,215000,150000,187000,153000,255000,185000,430967,55410,50432,39925,169000,110600,60938,140000,120000,50000,134000,124000,166700,119000,124234,74540,100000,65000,200000,220000,146000,68293,110000,70000,190000,135000,128000,81500,173000,110000,192000,120000,190000,194000,129400,201000,89200,165000,125000,230000,196000,130000,90000,150000,100000,230000,150000,130000,180000,120000,192500,140000,152500,65000,55000,178750,160000,63040,165000,135000,170000,125000,105000,70000,130000,95000,203500,152000,197430,134760,120000,197000,99000,162000,110446,79178,70186,51716,149040,113900,95000,115000,171000,50000,185900,129300,230000,154600,75000,213000,152000,120000,110000,70000,227200,168000,64090,60938,243000,183000,150000,130000,90000,165000,124000,178000,132000,300000,116000,96000,92350,70186,105000,70000,105236,100000,189750,140250,130000,160000,109000,250000,150000,206000,135000,115573,73546,42026,191200,66192,230000,154600,80000,135000,110000,155000,140000,205000,179500,134000,145000,235000,175000,27317,90000,165000,135000,168400,105200,86193,49253,200000,198800,122600,100000,105066,104663,73880,125000,110000,148000,107000,100000,65000,63040,36773,299500,245100,168000,130000,161000,118000,205000,247500,172200,68293,177000,131000,146000,102000,80000,65000,61566,43096,175000,135000,80000,231250,138750,193750,116250,231250,138750,193750,116250,208000,127000,300000,196000,45555,205000,185000,247500,172200,110000,375000,225000,156400,104663,80036,140700,93800,350000,135000,104697,33000,34672,201000,119000,175000,154560,123648,170000,145000,135000,100000,247500,172200,177500,134000,192564,144854,179305,142127,315000,225000,243900,156600,79000,89306,182500,128500,77300,45600,110000,210000,136000,170000,140000,247500,172200,225000,184100,100000,85000,78000,161000,205000,160000,61566,49253,245000,180000,220000,198440,144000,240000,198440,144000,150000,57872,64000,39925,187200,116100,150000,127000,275000,166000,159699,138938,76000,103432,92350,80000,52500,236000,182000,180000,135000,240000,125404,195000,110000,123000,92250,180000,100000,97000,90000,180000,260000,180000,210000,157000,80000,52500,128000,81500,105000,70000,175000,122500,171000,117000,202800,104300,36773,30000,78000,48000,78000,42000,345600,230400,78000,48000,175950,130050,205600,105700,236600,84000,54000,80000,200000,73742,165000,33246,75050,108000,155000,38000,85000,65000,110820,92350,153600,106800,50000,123400,88100,120000,55000,150000,120000,139000,139600,85700,185000,50000,200000,148500,98200,115000,95000,225000,66000,134000,98000,105000,62000,57000,161311,144200,115360,83171,73546,42026,180000,160000,108000,200000,150000,125976,188700,160395,198440,144000,191475,141525,75648,156868,200000,69344,90000,126080,84053,200000,180000,108000,85000,165000,132000,130000,110000,45050,42028,135000,178800,132100,20000,140000,110000,160000,85000,250000,63000,187200,116100,145000,229998,154545,215000,159000,50000,183000,99750,68400,236900,159200,243225,179775,128000,191475,141525,218000,145300,195400,131300,105000,207000,153000,99000,200000,135000,195700,130500,130000,84000,100000,60000,80036,67723,141300,102100,150000,102200,144000,113000,31520,195400,131300,195400,131300,80000,60000,63040,50000,105000,190000,140000,180000,165000,108000,20000,179400,154000,193900,129300,222640,182160,150000,100000,122500,100000,297500,260000,15000,193000,93000,73000,136994,101570,57786,136000,112000,172000,215000,164000,45390,97500,212800,142800,73546,50000,151800,130240,165000,140250,179400,154000,75000,84053,73546,98506,86193,84053,73546,102663,80041,104611,82280,191475,141525,115000,31520,81000,66000,46000,80000,200000,180000,200000,204100,136100,250000,63000,118208,110820,19073,95000,70000,75000,113000,170000,113000,140000,50000,53368,29944,160000,119300,145000,90000,146200,124270,225000,160000,54634,185800,137400,245000,180000,203500,152000,250000,63000,186000,148800,128058,82000,110000,173000,186000,148800,158000,134000,200000,150000,216200,144100,115573,89306,250000,63000,135000,85000,206000,175100,189650,164996,154000,126000,200000,150000,135000,98506,73880,117000,99450,200000,135000,193900,129300,55410,86193,61566,175000,130000,188100,139860,248700,167100,50432,205000,141300,102100,50000,84053,61566,250000,63000,189500,140100,177600,131300,24000,202900,115000,115000,193900,129300,140000,216200,144100,216000,144000,150000,50000,250000,84053,131752,48000,260500,175100,55000,130000,77119,52008,206699,99100,200000,54000,130000,100000,80000,100000,221300,148700,30000,28368,91118,61566,60938,249260,185400,80036,128875,93700,100000,136260,109280,160000,92000,135446,104663,129000,86000,100000,25000,65257,200000,180000,153000,150075,110925,22800,22809,15000,133766,83000,186000,148800,112900,90320,240000,160000,300000,200000,65666,200000,116976,92350,120000,112900,90320,145000,105400,49268,215300,158200,209100,154600,115934,81666,155000,84053,164000,132000,123000,52533,115222,165400,132320,208775,147800,136994,101570,35093,183600,100800,49253,36940,42026,31520,42026,31520,215300,140400,63040,47280,260000,43096,63040,47280,55410,51064,60000,82900,63900,160000,112300,241000,159000,80000,58000,136000,108800,242000,200000,61566,36940,49253,165220,120160,124190,181940,132320,220110,160080,180000,120000,126500,106260,116000,155000,120600,130000,90000,170000,102100,84900,136620,99360,110820,98506,146000,43096,130000,110000,170000,161342,137141,167000,73880,61566,211500,138600,192400,90700,130000,61300,160000,113000,95550,167000,115500,243900,156600,136600,128875,93700,224000,167875,175000,135000,205300,176000,200100,70500,54000,205300,140400,205300,184700,175100,140250,116150,99050,85000,75000,214000,192600,266400,213120,141300,102100,206699,99100,110500,61566,43096,80000,60000,230000,150260,109280,160000,67000,52000,129000,69000,25000,126500,106260,220110,160080,105000,135000,50000,220000,172386,86193,220000,120000,200000,120000,65000,324000,216000,185100,104890,76814,117104,192037,120000,55685,52533,75000,157000,69133,65000,68293,109000,67597,20000,102839,200000,51081,83864,40000,31520,59888,54742,89306,83171,165000,153000,100000,76814,33609,75000,20000,30469,69999,55475,61989,152500,120000,135000,405000,150000,240000,135000,80000,380000,120402,177000,65141,48000,20000,220000,150000,90000,100000,100000,100000,144000,155499,24000,38400,100000,82500,49646,120000,84053,20000,125000,120000,110037,21013,50000,200000,60000,200000,100000,100000,82744,59303,62649,82528,170000,150000,55000,250000,80000,70000,130026,63831,68428,85000,230000,125000,120000,450000,46759,74130,127221,144000,75774,150000,103000,153000,90000,90000,60000,50000,270000,54238,47282,153667,28476,110000,82528,250000,59102,80000,138000,140000,79197,170000,80000,45760,100000,53192,235000,150000,79833,225000,76833,50180,88654,103160,113476,94564,150000,115000,187442,51519,106000,112872,150000,15966,95746,70000,76958,89294,276000,188000,160000,105000,174000,93000,60757,90000,70139,170000,96282,36643,72212,91000,99703,165000,80000,103691,42000,115000,63810,260000,110000,180000,200000,109024,200000,256000,110000,79833,72500,185000,69741,100000,112000,150000,20171,55000,58000,100000,77684,85000,76833,105000,72000,65013,28016,111775,93150,160000,25532,63831,190000,141846,71786,135000,24823,147000,96113,174000,135000,21844,125000,51321,69741,50000,39916,87000,26005,90734,81000,90000,61467,195000,37825,85000,416000,225000,56256,116914,46597,114047,88654,56000,28609,88654,47899,98000,66022,56738,24823,120000,20000,325000,200000,45896,160000,50000,40189,165000,42197,185000,62726,21669,110000,140000,120000,87738,61896,76833,74000,152000,18000,60000,130000,18907,59102,173762,148261,38776,46809,91237,62726,115000,235000,75000,62000,73000,45391,190200,118000,138350,130800,45618,168000,119059,423000,28369,165000,412000,151000,105000,100000],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Experience Level\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Salary in USD\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Salary Distribution Across Experience Levels\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('cd7b2795-5320-4886-bb8b-63c321d3a1db');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig = px.box(df_cleanedPre, x='experience_level', y='salary_in_usd', title='Salary Distribution Across Experience Levels')\n",
        "fig.update_layout(\n",
        "    xaxis_title='Experience Level',\n",
        "    yaxis_title='Salary in USD',\n",
        "    boxmode='group'\n",
        ")\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kd93JmJJnKBF"
      },
      "source": [
        "Ahora vamos a hacer el tratamiento para los datos categoricos, vamos a filtrar los datos y ver cuanto hay de cada categoria, dado el caso de que sea mas baja que el umbral entonces se va a unir a una sola categoria"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UqXKaVPUt5V0",
        "outputId": "df15a2da-a6a9-41a9-a5e2-2738185f052c"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"d9f289aa-a338-4bf6-8a80-c4a66ebf1915\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"d9f289aa-a338-4bf6-8a80-c4a66ebf1915\")) {                    Plotly.newPlot(                        \"d9f289aa-a338-4bf6-8a80-c4a66ebf1915\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"job_title=%{x}\\u003cbr\\u003esalary_in_usd=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"Data DevOps Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"BI Developer\",\"BI Developer\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Analyst\",\"Research Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Science Engineer\",\"Data Science Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Product Manager\",\"Data Product Manager\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"AI Engineer\",\"AI Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"MLOps Engineer\",\"MLOps Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Deep Learning Engineer\",\"Deep Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Modeler\",\"Data Modeler\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Product Owner\",\"Data Product Owner\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"AI Developer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Analyst\",\"Research Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"AI Engineer\",\"AI Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Manager\",\"Data Manager\",\"ML Engineer\",\"ML Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Data Science Director\",\"Data Science Director\",\"Research Engineer\",\"Research Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Analyst\",\"Research Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Head of Data\",\"Head of Data\",\"Research Scientist\",\"Research Scientist\",\"BI Analyst\",\"BI Analyst\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"BI Analyst\",\"BI Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Research Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Management Analyst\",\"Data Management Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Machine Learning Modeler\",\"Machine Learning Modeler\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Analyst\",\"Research Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"AI Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Science Consultant\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Product Manager\",\"Data Product Manager\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"BI Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Integration Engineer\",\"Data Integration Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"AI Engineer\",\"AI Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Research Scientist\",\"Research Scientist\",\"Business Intelligence Manager\",\"Business Intelligence Manager\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Integration Specialist\",\"Data Integration Specialist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Science Practitioner\",\"Data Science Practitioner\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Analyst\",\"Analytics Engineer\",\"AI Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Lead\",\"Data Lead\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Head of Data\",\"Head of Data\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"AI Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Management Specialist\",\"Data Management Specialist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"AI Developer\",\"AI Developer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"AI Engineer\",\"AI Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"AI Architect\",\"AI Architect\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"MLOps Engineer\",\"MLOps Engineer\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"BI Developer\",\"BI Developer\",\"Data Engineer\",\"Data Engineer\",\"Data Strategist\",\"Data Strategist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Specialist\",\"Business Intelligence Specialist\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Engineer\",\"Research Analyst\",\"Research Analyst\",\"Data Quality Engineer\",\"Data Quality Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Business Data Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Specialist\",\"Data Specialist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Business Intelligence Specialist\",\"Business Intelligence Specialist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Machine Learning Engineer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"AI Developer\",\"Machine Learning Engineer\",\"BI Developer\",\"BI Developer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Lead\",\"Data Lead\",\"Data Analyst\",\"Decision Scientist\",\"Decision Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Financial Data Analyst\",\"AI Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Analyst\",\"Research Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Engineer\",\"Data Science Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Strategy Manager\",\"Data Strategy Manager\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Manager\",\"Data Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Visualization Specialist\",\"Data Visualization Specialist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"BI Analyst\",\"BI Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Analyst\",\"Research Analyst\",\"Research Analyst\",\"Research Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"ML Engineer\",\"Insight Analyst\",\"Insight Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"AI Engineer\",\"AI Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Integration Specialist\",\"Data Integration Specialist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Science Practitioner\",\"Data Science Practitioner\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Science Engineer\",\"Data Science Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Engineer\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Director of Data Science\",\"Director of Data Science\",\"Data Specialist\",\"Data Specialist\",\"AI Engineer\",\"AI Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Visualization Engineer\",\"Data Visualization Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Modeler\",\"Data Modeler\",\"Data Scientist\",\"AI Engineer\",\"AI Engineer\",\"Research Scientist\",\"Research Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"AI Engineer\",\"AI Engineer\",\"Data Architect\",\"Data Architect\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Analyst\",\"Head of Data\",\"Head of Data\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"AI Engineer\",\"AI Engineer\",\"ETL Developer\",\"ETL Developer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"BI Developer\",\"Data Scientist\",\"Data Scientist\",\"Data Modeler\",\"Data Modeler\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"ETL Developer\",\"ETL Developer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Research Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Azure Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Decision Scientist\",\"Decision Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"BI Developer\",\"BI Developer\",\"Data Lead\",\"Data Lead\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"BI Developer\",\"BI Developer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"AI Engineer\",\"AI Engineer\",\"Data Developer\",\"Data Developer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"AI Developer\",\"AI Developer\",\"Data Scientist\",\"Data Scientist\",\"Principal Data Scientist\",\"Data Science Lead\",\"Data Science Lead\",\"Business Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Staff Data Analyst\",\"AI Engineer\",\"AI Developer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Research Scientist\",\"Research Scientist\",\"Research Analyst\",\"Research Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Research Engineer\",\"Data Engineer\",\"AI Developer\",\"Data Analyst\",\"Data Analyst\",\"ML Engineer\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Manager\",\"Data Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Developer\",\"Data Developer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Research Analyst\",\"Research Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Operations Engineer\",\"AI Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"AI Research Engineer\",\"Head of Machine Learning\",\"Head of Machine Learning\",\"BI Analyst\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Research Analyst\",\"Research Analyst\",\"Data Scientist\",\"Data Specialist\",\"Data Specialist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Head of Data\",\"Head of Data\",\"Business Intelligence Engineer\",\"Data Science Lead\",\"Data Science Lead\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Head of Data\",\"Head of Data\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Strategy Manager\",\"Data Strategy Manager\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Analyst\",\"Research Analyst\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"Data Science Manager\",\"Data Science Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Analytics Engineer\",\"Data Strategist\",\"Data Strategist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Insight Analyst\",\"Insight Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Analyst\",\"Data Analyst\",\"BI Developer\",\"BI Developer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"AI Engineer\",\"Data Manager\",\"Data Manager\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Applied Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Science Practitioner\",\"Data Science Practitioner\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Researcher\",\"AI Programmer\",\"ML Engineer\",\"ML Engineer\",\"AI Engineer\",\"AI Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Science Manager\",\"AI Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Modeler\",\"Data Modeler\",\"Data Operations Analyst\",\"Data Operations Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"AI Engineer\",\"AI Engineer\",\"Decision Scientist\",\"Decision Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Research Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Developer\",\"Data Developer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"AI Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Science Lead\",\"Data Science Lead\",\"AI Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Strategist\",\"Data Strategist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"ML Engineer\",\"ML Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Manager\",\"MLOps Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Lead\",\"Data Science Lead\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Integration Specialist\",\"Data Integration Specialist\",\"Data Science Consultant\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Management Specialist\",\"Data Management Specialist\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Scientist\",\"Data Engineer\",\"Head of Data\",\"Head of Data\",\"Decision Scientist\",\"Decision Scientist\",\"Business Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"AI Engineer\",\"Data Strategist\",\"Data Strategist\",\"Data Scientist\",\"Data Scientist\",\"Business Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Architect\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Applied Machine Learning Scientist\",\"AI Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Modeler\",\"Data Modeler\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"BI Developer\",\"BI Developer\",\"ML Engineer\",\"ML Engineer\",\"AI Architect\",\"AI Architect\",\"Data Scientist\",\"Data Engineer\",\"Data Strategist\",\"Data Strategist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Science Consultant\",\"Data Science Consultant\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Research Analyst\",\"Research Analyst\",\"Data Scientist\",\"Data Scientist\",\"Research Analyst\",\"Research Analyst\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"BI Developer\",\"BI Developer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Manager\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analytics Lead\",\"Data Analytics Lead\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Operations Analyst\",\"Data Operations Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Manager\",\"BI Data Analyst\",\"AI Engineer\",\"AI Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Lead\",\"Data Lead\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"BI Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Modeler\",\"Data Modeler\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Visualization Engineer\",\"Data Visualization Engineer\",\"Research Scientist\",\"Data Architect\",\"Data Architect\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Lead Data Scientist\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Director of Data Science\",\"Director of Data Science\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Principal Machine Learning Engineer\",\"Principal Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"AI Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Engineer\",\"Research Engineer\",\"Research Analyst\",\"Research Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"AI Developer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Power BI Developer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Developer\",\"Applied Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Research Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Head of Data Science\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Strategist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"BI Analyst\",\"BI Analyst\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"AI Programmer\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Scientist\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Lead\",\"Data Lead\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Principal Data Scientist\",\"Data Analyst\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"ML Engineer\",\"ML Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Staff Machine Learning Engineer\",\"Staff Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Consultant Data Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Analyst\",\"Business Intelligence Analyst\",\"BI Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Specialist\",\"Machine Learning Specialist\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Head of Data\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Quality Engineer\",\"Research Analyst\",\"Research Analyst\",\"Research Analyst\",\"Research Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"ML Engineer\",\"ML Engineer\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Research Scientist\",\"Research Scientist\",\"Principal Machine Learning Engineer\",\"AI Architect\",\"Data Scientist\",\"Data Scientist\",\"Deep Learning Engineer\",\"Deep Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Visualization Specialist\",\"Data Visualization Specialist\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"ML Engineer\",\"ML Engineer\",\"MLOps Engineer\",\"MLOps Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"AI Architect\",\"Data Analyst\",\"Data Analyst\",\"ML Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Business Intelligence Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Decision Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Science Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Scientist\",\"BI Analyst\",\"BI Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"AI Programmer\",\"Data Scientist\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Operations Manager\",\"Data Operations Manager\",\"Data Scientist\",\"Data Specialist\",\"Data Specialist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Manager\",\"Data Engineer\",\"Data Engineer\",\"BI Analyst\",\"BI Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Head of Data Science\",\"Head of Data Science\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"Lead Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"AI Scientist\",\"Managing Director Data Science\",\"Data Modeller\",\"Data Modeller\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Scientist\",\"Research Scientist\",\"AI Scientist\",\"Finance Data Analyst\",\"Data Engineer\",\"Software Data Engineer\",\"Machine Learning Research Engineer\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"AI Scientist\",\"Compliance Data Analyst\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Science Engineer\",\"Data Science Engineer\",\"Data Operations Specialist\",\"Data Operations Specialist\",\"Business Data Analyst\",\"Data Architect\",\"Data Architect\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Machine Learning Engineer\",\"BI Analyst\",\"BI Analyst\",\"Data Science Manager\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Science Consultant\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Decision Scientist\",\"Decision Scientist\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Computer Vision Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"ML Engineer\",\"ML Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Analytics Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Cloud Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineering Manager\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Machine Learning Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Specialist\",\"Data Specialist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Manager\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Operations Specialist\",\"Data Operations Specialist\",\"Data Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Business Intelligence Data Analyst\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Business Intelligence Developer\",\"Business Intelligence Developer\",\"ETL Developer\",\"ETL Developer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"NLP Engineer\",\"NLP Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Head of Data\",\"Head of Data\",\"Head of Data\",\"Head of Data\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Staff Data Analyst\",\"Data Scientist\",\"AWS Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Product Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"BI Data Analyst\",\"Machine Learning Developer\",\"Research Engineer\",\"Data Integration Specialist\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"BI Developer\",\"Data Scientist\",\"Data Visualization Analyst\",\"Data Visualization Analyst\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Head of Data\",\"Head of Data\",\"Data Analyst\",\"BI Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Product Data Analyst\",\"Autonomous Vehicle Technician\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Sales Data Analyst\",\"Cloud Data Engineer\",\"Finance Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Applied Scientist\",\"Data Operations Analyst\",\"Data Operations Analyst\",\"Data Modeler\",\"Data Modeler\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Research Engineer\",\"Research Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Data Scientist\",\"Data Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Lead\",\"Data Science Lead\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Engineer\",\"Data Engineer\",\"AI Scientist\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Director of Data Science\",\"Director of Data Science\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Analyst\",\"Data Analyst\",\"Applied Machine Learning Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Decision Scientist\",\"Decision Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"BI Developer\",\"BI Developer\",\"NLP Engineer\",\"NLP Engineer\",\"NLP Engineer\",\"NLP Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Principal Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Research Engineer\",\"Research Engineer\",\"Analytics Engineer\",\"Data Strategist\",\"Data Strategist\",\"Data Engineer\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Analyst\",\"Data Analyst\",\"Compliance Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Applied Machine Learning Engineer\",\"Machine Learning Engineer\",\"Business Intelligence Engineer\",\"Business Intelligence Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Research Scientist\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Business Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Scientist\",\"Staff Data Analyst\",\"ETL Engineer\",\"ETL Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data DevOps Engineer\",\"Data Engineer\",\"Data Engineer\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Data Scientist\",\"AI Developer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Scientist\",\"AI Developer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Analyst\",\"Research Engineer\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Applied Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"AI Developer\",\"Machine Learning Researcher\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Big Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Specialist\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Lead Data Analyst\",\"BI Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Business Data Analyst\",\"AI Developer\",\"AI Developer\",\"MLOps Engineer\",\"MLOps Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Research Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Architect\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Applied Machine Learning Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Lead Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Cloud Database Engineer\",\"Applied Machine Learning Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Research Engineer\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Analytics Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Financial Data Analyst\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"ML Engineer\",\"ML Engineer\",\"Software Data Engineer\",\"AI Programmer\",\"AI Developer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"BI Developer\",\"Data Science Lead\",\"ML Engineer\",\"ML Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Deep Learning Researcher\",\"Data Science Manager\",\"Data Science Manager\",\"Data Science Consultant\",\"Data Science Consultant\",\"Research Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analytics Specialist\",\"Data Analytics Specialist\",\"Research Scientist\",\"Research Scientist\",\"AI Developer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Software Data Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Manager\",\"Data Manager\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Analyst\",\"Head of Data\",\"Data Science Manager\",\"Data Analyst\",\"Data Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"Computer Vision Engineer\",\"BI Data Analyst\",\"AI Developer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Lead Data Scientist\",\"Data Engineer\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Manager\",\"Data Manager\",\"Head of Data Science\",\"Head of Data Science\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Quality Analyst\",\"Data Quality Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"Data Analyst\",\"Data Manager\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Engineer\",\"Applied Machine Learning Engineer\",\"Data Scientist\",\"AI Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Deep Learning Engineer\",\"Deep Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Data Manager\",\"Data Manager\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"AI Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Data Infrastructure Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Science Lead\",\"Data Science Lead\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Engineer\",\"Data Science Lead\",\"Data Science Lead\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Research Engineer\",\"Research Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Big Data Architect\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Software Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Science Lead\",\"Data Science Lead\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Computer Vision Software Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Research Scientist\",\"Research Engineer\",\"Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Director of Data Science\",\"Azure Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"BI Developer\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"ML Engineer\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Research Scientist\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Head of Data Science\",\"Head of Data Science\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"BI Developer\",\"BI Developer\",\"Data Manager\",\"Data Manager\",\"Big Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Marketing Data Engineer\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"Data Manager\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Scientist\",\"BI Analyst\",\"BI Analyst\",\"ML Engineer\",\"ML Engineer\",\"Business Data Analyst\",\"AI Developer\",\"Computer Vision Engineer\",\"Applied Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"BI Developer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"BI Developer\",\"BI Developer\",\"Research Scientist\",\"Research Scientist\",\"Data Lead\",\"Data Lead\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Engineer\",\"Data Science Engineer\",\"Cloud Database Engineer\",\"Cloud Database Engineer\",\"Machine Learning Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Research Engineer\",\"Data Analyst\",\"Research Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"NLP Engineer\",\"NLP Engineer\",\"Data Engineer\",\"Data Engineer\",\"NLP Engineer\",\"NLP Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Deep Learning Engineer\",\"Deep Learning Engineer\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Computer Vision Engineer\",\"Computer Vision Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Manager Data Management\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Applied Machine Learning Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Applied Data Scientist\",\"AI Programmer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Data Engineer\",\"Machine Learning Developer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Cloud Database Engineer\",\"Cloud Database Engineer\",\"Product Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"NLP Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Applied Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"AI Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Research Engineer\",\"Research Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Computer Vision Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"BI Data Analyst\",\"BI Developer\",\"BI Developer\",\"Data Analyst\",\"MLOps Engineer\",\"MLOps Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"AI Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Principal Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Researcher\",\"Machine Learning Researcher\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Researcher\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Science Consultant\",\"Data Science Consultant\",\"Data Architect\",\"Data Architect\",\"Business Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analytics Consultant\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Software Engineer\",\"Machine Learning Software Engineer\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Researcher\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Research Engineer\",\"Research Engineer\",\"Data Analyst\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Research Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Science Consultant\",\"Data Engineer\",\"Data Specialist\",\"Data Specialist\",\"Data Engineer\",\"Data Engineer\",\"Deep Learning Engineer\",\"Deep Learning Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"BI Data Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Applied Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Management Specialist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Research Scientist\",\"Autonomous Vehicle Technician\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Science Tech Lead\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Developer\",\"Machine Learning Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist Lead\",\"Data Engineer\",\"Data Engineer\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Head of Data\",\"Head of Data\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"BI Analyst\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Research Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Operations Analyst\",\"Data Operations Analyst\",\"ML Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"BI Analyst\",\"BI Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Marketing Data Analyst\",\"Data Scientist\",\"Data Science Lead\",\"Data Scientist\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Science Consultant\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Architect\",\"Data Architect\",\"Data Manager\",\"Data Manager\",\"Data Analyst\",\"Data Analyst\",\"BI Data Analyst\",\"Big Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Machine Learning Manager\",\"Machine Learning Manager\",\"Data Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Lead Data Scientist\",\"BI Analyst\",\"Lead Machine Learning Engineer\",\"Data Analyst\",\"Research Scientist\",\"Research Scientist\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"BI Data Analyst\",\"Data Analyst\",\"Data Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"ETL Developer\",\"ETL Developer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"AI Scientist\",\"Data Scientist Lead\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"ML Engineer\",\"ML Engineer\",\"Data Specialist\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"ML Engineer\",\"ML Engineer\",\"Data Operations Engineer\",\"Data Operations Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"AI Scientist\",\"Data Architect\",\"Data Architect\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"NLP Engineer\",\"Machine Learning Engineer\",\"Business Data Analyst\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Machine Learning Scientist\",\"Machine Learning Research Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Developer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Director of Data Science\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Applied Scientist\",\"Applied Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Financial Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Operations Analyst\",\"Data Operations Analyst\",\"Data Analyst\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"AI Scientist\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Computer Vision Software Engineer\",\"Data Specialist\",\"Data Specialist\",\"Applied Machine Learning Scientist\",\"Data Analyst\",\"Data Scientist\",\"Data Analytics Consultant\",\"Product Data Analyst\",\"Data Analyst\",\"BI Data Analyst\",\"Lead Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Data Engineer\",\"ETL Developer\",\"ETL Developer\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Infrastructure Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Applied Machine Learning Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"ETL Developer\",\"ETL Developer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"BI Data Analyst\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Scientist\",\"Lead Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Analyst\",\"Applied Data Scientist\",\"Cloud Data Architect\",\"Research Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Analyst\",\"Data Analyst\",\"Applied Machine Learning Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Specialist\",\"Data Specialist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Business Data Analyst\",\"Data Scientist\",\"Data Analyst\",\"AI Scientist\",\"Machine Learning Developer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Science Manager\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"ML Engineer\",\"ML Engineer\",\"Data Science Manager\",\"Data Science Manager\",\"Data Engineer\",\"AI Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"AI Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"ETL Developer\",\"Lead Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Science Engineer\",\"Data Engineer\",\"Data Engineer\",\"Machine Learning Scientist\",\"Machine Learning Scientist\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Science Manager\",\"Data Science Manager\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Architect\",\"Data Architect\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Head of Data Science\",\"Head of Data Science\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Analytics Engineer\",\"Analytics Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Architect\",\"Data Architect\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Analytics Manager\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Developer\",\"Machine Learning Manager\",\"Director of Data Science\",\"Machine Learning Engineer\",\"Machine Learning Infrastructure Engineer\",\"Data Engineer\",\"Applied Machine Learning Scientist\",\"Applied Data Scientist\",\"Business Data Analyst\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Analyst\",\"Head of Data\",\"Head of Data\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"Head of Data\",\"Machine Learning Engineer\",\"Data Engineer\",\"Research Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Machine Learning Developer\",\"Data Scientist\",\"Principal Data Analyst\",\"Product Data Analyst\",\"Applied Machine Learning Scientist\",\"Research Scientist\",\"Data Engineer\",\"Research Scientist\",\"Data Science Manager\",\"Research Scientist\",\"Data Scientist\",\"Data Analytics Lead\",\"Data Engineer\",\"Data Science Manager\",\"Data Analyst\",\"Data Scientist\",\"Applied Data Scientist\",\"Data Scientist\",\"Applied Data Scientist\",\"Data Engineer\",\"Data Scientist\",\"Data Analytics Engineer\",\"Principal Data Scientist\",\"Computer Vision Software Engineer\",\"Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Research Scientist\",\"Principal Data Scientist\",\"Computer Vision Engineer\",\"Applied Machine Learning Scientist\",\"Financial Data Analyst\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Lead Machine Learning Engineer\",\"Machine Learning Engineer\",\"Computer Vision Engineer\",\"Machine Learning Scientist\",\"Applied Data Scientist\",\"ML Engineer\",\"Data Analyst\",\"Principal Data Engineer\",\"Big Data Engineer\",\"Data Engineer\",\"Machine Learning Developer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Research Scientist\",\"Data Engineer\",\"Data Architect\",\"Data Architect\",\"BI Data Analyst\",\"Director of Data Science\",\"Data Engineer\",\"Big Data Engineer\",\"Director of Data Science\",\"Data Science Consultant\",\"Data Scientist\",\"Head of Data Science\",\"Head of Data\",\"Machine Learning Engineer\",\"Data Analytics Manager\",\"Research Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Science Engineer\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Science Consultant\",\"Data Engineer\",\"Data Engineer\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"ML Engineer\",\"Applied Data Scientist\",\"Machine Learning Engineer\",\"Director of Data Science\",\"Data Engineer\",\"Data Analytics Engineer\",\"Research Scientist\",\"Machine Learning Engineer\",\"Data Analyst\",\"Data Analyst\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Analytics Engineer\",\"Lead Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"BI Data Analyst\",\"Data Scientist\",\"Head of Data\",\"BI Data Analyst\",\"Data Engineer\",\"Machine Learning Scientist\",\"Data Science Consultant\",\"Machine Learning Infrastructure Engineer\",\"Marketing Data Analyst\",\"Lead Data Engineer\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Data Engineer\",\"Research Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"ML Engineer\",\"Computer Vision Software Engineer\",\"Computer Vision Software Engineer\",\"Data Scientist\",\"Cloud Data Engineer\",\"Lead Data Engineer\",\"Data Engineer\",\"Cloud Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Research Scientist\",\"Data Scientist\",\"Data Engineer\",\"Principal Data Analyst\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Data Analyst\",\"Big Data Architect\",\"Data Scientist\",\"Data Analyst\",\"Data Scientist\",\"Research Scientist\",\"Lead Data Scientist\",\"Research Scientist\",\"Machine Learning Scientist\",\"Head of Data Science\",\"Data Architect\",\"Data Analyst\",\"Big Data Engineer\",\"Data Engineer\",\"ML Engineer\",\"Data Engineer\",\"Data Scientist\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Engineer\",\"Research Scientist\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Scientist\",\"AI Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Science Consultant\",\"Staff Data Scientist\",\"Data Analyst\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Data Engineer\",\"Lead Data Engineer\",\"Data Scientist\",\"Data Analyst\",\"Lead Data Scientist\",\"Director of Data Science\",\"Data Analyst\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Scientist\",\"Research Scientist\",\"Data Science Manager\",\"Business Data Analyst\",\"Machine Learning Engineer\",\"Lead Data Engineer\",\"Data Scientist\",\"Data Science Consultant\",\"Data Analytics Engineer\",\"Data Scientist\",\"Lead Data Analyst\",\"Data Engineer\",\"Data Scientist\",\"Machine Learning Engineer\",\"Data Science Consultant\",\"Data Scientist\",\"Machine Learning Infrastructure Engineer\",\"Data Scientist\",\"Data Analyst\",\"Principal Data Scientist\",\"Machine Learning Scientist\",\"Data Scientist\",\"Data Scientist\",\"Machine Learning Engineer\",\"Big Data Engineer\",\"Machine Learning Engineer\",\"Lead Data Engineer\",\"Computer Vision Engineer\",\"Data Scientist\",\"Data Engineer\",\"BI Data Analyst\",\"Data Engineer\",\"Research Scientist\",\"Machine Learning Engineer\",\"Data Analytics Manager\",\"Data Engineer\",\"Director of Data Science\",\"Machine Learning Engineer\",\"AI Scientist\",\"Data Scientist\",\"Research Scientist\",\"Data Science Engineer\",\"Data Engineer\",\"Data Scientist\",\"Principal Data Engineer\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Data Analytics Manager\",\"Data Scientist\",\"Data Scientist\",\"Finance Data Analyst\",\"Data Engineer\",\"Machine Learning Engineer\",\"Data Science Manager\",\"Big Data Engineer\",\"Computer Vision Engineer\",\"Data Scientist\",\"Computer Vision Engineer\",\"Business Data Analyst\",\"Principal Data Scientist\",\"Principal Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Data Scientist\",\"Principal Data Scientist\",\"Data Analyst\",\"Data Analyst\",\"Data Scientist\",\"Data Engineer\",\"Data Science Manager\",\"Data Scientist\",\"Data Scientist\",\"Data Engineer\",\"Machine Learning Engineer\",\"Director of Data Science\",\"Data Scientist\",\"Applied Machine Learning Scientist\",\"Data Engineer\",\"Data Specialist\",\"Data Scientist\",\"Principal Data Scientist\",\"Data Scientist\",\"Business Data Analyst\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[95012,186000,81800,212000,93300,130000,100000,224400,138700,210000,168000,224400,138700,43064,36912,95000,75000,300000,234000,140000,120000,204500,142200,155000,110000,266500,152000,222200,136000,273400,182200,167500,106500,185900,129300,185000,79600,122000,94500,247300,139700,176000,100000,204500,142200,247600,127300,223400,186200,167500,106500,185900,129300,72000,64000,179820,143860,283050,188700,133000,58400,141298,115607,100000,266500,144400,71363,55368,287500,156000,90000,70000,199000,162000,170884,113923,184000,123000,235750,174250,165000,118800,225000,150000,213900,116800,220000,150000,150000,100000,247500,172200,155000,120000,226700,133300,184000,123000,130000,117000,160000,140000,166000,73000,185900,129300,130000,104000,143000,116000,220000,180000,215000,200000,253000,131000,220000,176000,49216,36912,210000,147000,186000,161000,205000,220000,190000,137000,110000,172000,146000,148000,99000,150000,105000,99000,52500,180514,108308,210000,147000,290300,196685,220000,176000,175000,130000,185000,150000,145000,115000,133000,58300,115000,95000,110244,39372,43187,31310,92280,67672,75577,303387,100017,230300,140000,124935,76050,224800,131100,258000,171000,196000,121000,195800,171500,166000,73100,220000,160000,85000,65000,220000,100000,185000,152000,48585,38868,220000,100000,110000,80000,36912,150200,71000,167200,133000,58400,135000,110000,104584,73824,187415,114080,166000,73100,306400,168700,32974,165000,140000,150000,167000,121000,190200,95100,133000,58400,90000,70000,73100,135000,100000,180514,108308,294000,192000,266000,167000,200000,150000,163800,88200,180400,138800,67672,55368,319000,206000,215000,142000,266000,167000,140130,84870,178300,105400,215000,142000,240000,210000,150000,116000,90000,145000,128000,154000,126000,240000,157250,219650,136000,180000,125000,247600,127300,60000,55000,250000,125000,190000,170000,202600,168800,132000,111000,203000,127000,125009,83339,112200,91800,200000,160000,161952,160000,133000,58300,254000,159000,170000,85000,130500,116000,81400,43500,169000,92000,166000,73100,190000,165000,305600,146600,150000,120000,275000,146400,208500,165000,258700,172500,185000,198200,110200,166000,73100,212000,93300,212000,93300,166000,73100,167100,111400,166000,73100,170000,145000,170000,135000,139810,95325,278700,159300,226700,151100,247300,139700,188000,139000,160000,94000,127000,65000,276000,174000,260000,136000,250000,210000,238000,212000,190000,261500,134500,239000,122900,158500,115000,331640,267720,180000,90000,83000,66000,224250,121550,109000,100000,205400,92900,220000,130000,160000,110000,230000,186030,110200,130000,100000,242000,106200,220000,120000,91200,58200,192000,178000,210000,130000,160000,150000,206000,134000,180000,135000,200000,120000,212000,93300,106700,57700,266400,173300,125000,100000,165600,65800,210400,170500,170000,160000,185400,81536,193000,158000,170000,100000,95000,75000,115000,105000,161900,80000,192500,100000,75000,91000,216600,166000,73100,336300,179000,296400,159600,258500,226500,247250,118400,160000,140000,93400,172256,123040,219000,132000,130500,116000,323300,184700,250000,200000,136000,91000,143000,78000,135000,110000,142000,102200,137500,81500,202000,147000,140000,125000,170625,127950,123040,86128,85256,71615,100000,100000,185000,125000,60000,52000,300000,260000,225000,170000,100000,80000,204500,142200,297300,198200,240000,185000,79600,222200,110000,95000,324000,159000,207700,133700,71000,57000,59000,50000,234000,208000,187000,128000,50000,64781,57223,21000,135000,120000,150000,140000,280000,190000,43064,245700,132300,90000,80000,212000,93300,58300,145640,84400,300000,195000,190000,107500,105000,75000,98000,236160,159408,115000,85000,145000,120000,120350,74400,158494,88052,181500,127000,300000,260000,25000,225300,197400,205500,128500,191600,125600,130410,92000,183900,108800,275000,121200,231250,111000,300000,130000,210500,105300,158400,85800,156100,100400,134200,103200,85000,220000,160000,95000,95400,57800,86000,125000,87500,170000,133200,84000,171000,93000,216450,123750,212800,124100,205000,166000,231650,189100,160000,120000,266875,128250,158600,115300,225300,197400,109900,61200,161000,75000,166000,73100,138510,95490,150000,110000,232200,133300,121788,79032,178250,110500,190000,160000,216000,184000,166000,104000,230000,196000,165600,65800,186000,81800,135000,82500,247250,169000,105500,195800,161900,108500,78800,225000,166000,160000,110000,120000,105000,87500,135000,100000,105000,95000,289800,214200,167500,106500,146000,128000,81500,370000,200000,175000,160000,240000,100000,180000,143000,127000,249300,149300,190000,160000,248100,145900,170200,83900,166000,90000,94100,226600,140100,156000,124000,132600,308000,190400,155000,136000,75000,214500,132600,111000,104000,85000,75000,180250,118000,212800,111600,157500,132500,75000,93918,51962,171000,152000,223600,115000,140000,110000,130900,72700,333500,144000,180000,118200,354200,221800,73000,156600,137200,149000,65300,187000,180000,119636,70374,105000,67000,102000,94770,133000,58400,169900,164100,305600,75000,37573,36940,180240,120160,93400,119000,71400,115950,69570,225100,140900,179000,144000,250800,167200,144000,76000,230000,180000,156450,119200,150000,130000,247500,172200,155000,125000,175000,97500,220000,185000,303050,202350,21593,201650,124600,93400,145000,110000,89500,65000,328400,205600,184800,85000,61800,70748,67056,116000,72500,215000,169850,225000,180000,147400,107682,225300,197400,160000,136000,204600,126500,210000,115000,86500,40400,329700,192351,280000,106700,97000,175000,150000,88000,60000,123000,93593,222405,172800,205600,105700,263500,189360,192000,124000,230000,124000,148500,82500,184800,310000,206000,372000,223000,172256,123040,131000,148500,82500,233500,146000,280889,187259,305100,146900,78800,44100,166000,73100,80000,150000,80000,110000,202800,104300,272400,140100,154000,103000,80750,48450,85600,57000,190400,112000,119636,70374,304750,98873,58161,138000,85500,307100,216800,153600,106800,250000,280000,180000,160000,130000,162000,164640,131712,74800,63600,92280,67672,140000,253792,158620,259900,139200,118118,79976,293000,185000,115500,70000,142000,102000,141600,121400,240000,55000,49000,135000,200000,180000,246080,184560,168000,105000,70000,100000,243000,152000,79976,115600,79700,281700,141100,173100,86900,258700,133800,225300,197400,157000,125000,208000,134000,140000,65000,188200,49216,110000,73400,183414,97200,299000,187000,66000,140000,170200,83900,101570,177000,118000,234500,127000,114979,287500,168000,155000,153000,136000,254000,214500,134500,136000,104000,143000,117000,110000,73824,55368,370000,200000,275300,183500,230000,196000,253000,172040,234000,178000,164000,109238,68274,57223,51824,80800,53800,258900,176080,120000,110000,309000,65000,60000,132100,68400,160000,140000,62500,142000,128000,155000,139500,221000,129000,259000,138750,100000,155000,130000,215000,182750,207000,141000,90000,36000,300000,116700,93400,80000,50000,179000,176490,195000,143750,180000,162000,199000,196760,90000,70000,324000,159000,222000,50000,70179,110000,75000,46426,38868,80000,150000,130000,126500,78000,250000,222000,120000,204500,142200,297000,138000,147600,106300,102586,79981,131250,128100,174500,113000,56500,38868,227000,185000,230000,160000,138300,110700,130000,80000,212175,156000,111151,66691,190000,138700,95040,59400,197802,156453,308000,144000,172000,140000,89819,72593,122400,80000,70000,90000,227500,147500,150000,50000,73824,55368,220000,180000,331640,267720,190000,130000,150000,50000,172200,131200,250000,100000,165000,155000,280000,200000,73824,67672,290000,173200,235000,204000,300000,222000,155000,105000,287500,212500,190027,152022,19434,131000,88000,198000,132000,125000,115000,145000,130000,170700,113900,185000,81000,123000,80000,75000,53000,48000,369120,73824,125000,190000,115000,194000,175000,185000,160000,185000,50000,70000,130916,120000,160000,218213,178538,316000,202000,189750,119213,162000,130000,170200,83900,250944,205318,125000,135000,114000,218213,178538,240000,163200,258800,199200,215625,159375,203000,133000,272400,140100,282000,208000,93919,51962,211000,118800,75000,159350,130100,262000,245000,205218,136743,185000,94600,160000,107000,264400,176300,275000,175000,76000,53984,43187,150000,125000,210000,210000,169500,138000,180000,120000,297300,198200,204500,138900,110400,68000,260600,63750,46400,214872,186846,95000,70600,149500,127075,162000,111000,280000,182750,196000,142600,193000,110000,245000,80000,70000,250000,225000,61520,49216,205000,240000,220000,297300,198200,156000,196500,97300,192000,164000,227700,154836,140000,285000,190000,405000,270000,214300,108500,145000,115000,130000,113000,194500,110250,295000,177300,55368,44294,192000,164000,220000,187000,353200,249300,85000,79000,131000,220000,163000,107400,101500,80976,300000,100000,175000,164000,211000,276000,184000,115000,167000,144000,96000,145000,116000,161000,116300,140000,125000,175564,144854,225000,166000,190000,150000,151300,126100,190000,152000,190000,150000,180000,125000,113000,90400,204300,139000,124000,157000,212800,111600,183000,147000,169000,91000,210000,160000,70900,193000,128000,275000,243000,174500,113000,80000,145000,115000,202000,96313,250000,48585,43187,204000,127500,145500,108000,206000,175100,122500,82500,95000,130000,217000,192000,90000,60000,350000,168000,234900,113500,385000,245000,255000,170200,83900,202500,177500,150000,155000,130000,240000,170200,83900,300000,150000,300000,150000,213600,103200,230000,153000,127500,250000,385000,310000,88000,158000,108000,310000,129192,98432,369120,40680,306000,204000,75577,18000,369120,270000,200000,204500,142200,92280,188600,111550,360000,240000,129100,111400,135000,242921,170045,175000,90000,156450,119200,154800,76300,178600,88600,207345,180300,205000,167500,228045,198300,140000,100000,78125,40423,140000,100000,125000,120000,127000,99000,120000,194500,132320,223602,143520,180000,140000,121809,83667,140000,154000,103000,90000,140000,100000,296100,144500,118600,96800,100000,48585,142000,128000,99500,53300,165000,172000,125000,250000,245000,234900,68400,139000,172000,125000,139600,85700,100000,143000,95000,330000,188000,238000,156000,145000,106000,172256,123040,269100,131300,220000,150000,73824,61520,252990,162170,260000,235000,190000,145000,212800,111600,130000,194521,176838,200000,170000,191765,134236,198800,90700,154800,76300,130000,115000,42107,200000,155000,115500,73500,179000,109000,221000,180000,233300,155500,306000,180000,212800,115100,117500,86720,150000,90000,70000,212800,111600,135000,110000,175000,208450,151600,324000,159000,155000,135000,223250,156275,220000,245000,185000,67500,46500,270000,232200,43187,78000,370000,178200,115000,204000,143000,95000,240000,156400,168000,112000,253430,212780,265800,165500,193000,134000,180000,150000,120681,72409,180000,139750,254000,260000,192000,272290,169374,195000,204500,142200,17000,181500,112200,150000,100000,250500,166600,247500,172200,223290,131310,44753,35000,53984,204500,142200,220000,140000,135960,70960,128750,86250,110736,92280,185100,133300,150000,75000,130000,73824,61520,85000,80000,70000,260000,105000,80000,150000,95000,204750,153550,141000,175000,120000,207611,127876,170000,144500,255360,212800,106400,81800,130000,69139,100631,80505,300105,151090,217600,145000,79976,55368,129000,185000,50000,108000,80000,59500,173400,215000,153000,210398,147648,60000,54000,202000,132000,73824,81206,330000,188000,110000,190000,170000,150000,125000,105000,90000,73000,150000,135000,329500,269600,156400,185900,129300,146000,97000,147100,90700,257000,197000,120000,84800,135344,98432,246080,184560,53120,33686,260000,225000,340000,213600,142400,125000,85000,207900,158400,385000,200000,241300,211949,115000,90000,172200,131200,123800,240000,142500,34924,330000,204000,180000,160000,193600,130838,225500,139400,328133,218755,250830,143370,260000,203500,166500,148350,87400,157550,104650,139500,118575,129150,98400,67672,98010,66825,190000,170000,170000,120000,229000,131000,104584,92280,192000,164000,223800,172100,258800,199200,185000,148000,193600,119700,175750,136742,257400,193500,228856,144540,140000,155000,125000,150600,120500,176000,200000,115500,73500,135344,98432,225000,172758,86128,67672,51676,43064,245000,194992,140000,213800,180300,375500,250300,262269,230797,147100,90700,185000,145000,123040,92280,98432,62442,90000,195000,73500,185000,145000,158900,132400,140000,130000,100000,163800,126000,111967,88000,216027,101028,309400,159100,174350,126800,262000,186000,129000,95000,175000,120000,29691,130000,105000,232200,119000,268000,153300,104244,145000,226000,70000,198800,122600,181500,127000,210000,120000,385000,245000,225000,175000,110019,86682,131650,105320,210000,151800,147500,112500,163200,65000,55000,165400,127300,107968,32811,145000,135000,126900,77900,110736,92280,169000,110600,150000,140000,162000,195000,160000,154000,82000,160000,145000,239400,136800,204500,142200,230000,323300,184700,120000,210000,136000,171250,113750,195000,142000,185900,129300,194100,152300,190000,120000,240000,157250,212000,194400,132192,174000,134000,38868,152000,144700,85500,38868,265800,177200,222000,115920,250000,64781,284310,153090,204500,142200,111000,213210,102434,226600,140100,156400,250000,176000,80000,233400,145300,248000,149000,156450,119200,185000,120250,225000,152700,64781,139152,82452,85000,65000,139000,200000,145000,269500,295500,165200,235000,135000,180000,144000,49216,43064,65000,160667,27568,304200,173800,191765,134326,173000,258384,153100,70000,146200,116960,370000,111600,72000,359170,295490,90000,90000,84000,110000,90000,70000,253000,115000,85000,145900,127000,95000,94600,86000,72000,60000,104000,173650,113900,126000,139500,110000,248100,145900,220000,175000,175000,108000,115000,110000,182500,135000,35000,146000,94000,300000,91000,86000,205500,132500,180000,97750,75000,252990,162170,216000,184000,120000,67500,86128,61520,140000,265000,153000,143000,126277,224500,126900,227700,154836,126000,165000,209000,112500,110000,370000,136000,104000,214000,154000,205000,157500,178000,109283,189000,137000,120000,170500,118575,97712,24940,154500,131325,140000,100000,138240,207500,172900,254000,147100,90700,90000,168400,105200,237000,170112,25912,134960,155000,130000,105000,70000,260000,234000,330000,204000,167310,121000,175000,125000,325000,171000,180000,137000,155810,106720,160800,132200,133000,113000,208400,157550,104650,240500,123700,78000,121000,78000,85600,48915,68000,53444,45150,275500,206000,56359,47799,102000,228000,180000,175000,16455,207611,127876,111000,104000,128000,81500,61520,43064,97750,192000,92000,195000,132600,81500,202400,147200,239000,54000,36000,176000,118720,95000,240000,157000,165000,136000,272300,222800,172750,82500,281000,181000,207611,127876,225000,168000,280600,158600,283780,218540,178500,323300,184700,123040,104584,185000,137700,205500,132500,65100,44640,161000,123000,200000,278700,159300,125000,65000,230000,175000,252990,162170,183000,122000,310270,239080,70000,135000,125000,253000,172040,135000,108000,129562,50000,227850,180500,199000,159000,350000,80000,240000,160000,107500,96750,174000,104000,275300,183500,250000,174350,126800,284050,193800,232989,85000,204500,138900,168400,105200,147100,150550,116710,147100,90700,120000,147100,90700,125000,100000,198800,105200,150600,120500,183000,167500,106500,239000,149000,122000,181500,127000,186000,138000,185000,122000,140000,112000,36000,91270,180000,165000,247000,118440,138900,297300,198200,110736,86128,204500,138900,87500,62500,244000,157000,136000,90600,49216,43064,160000,91773,315300,210200,177000,110000,65000,55000,183200,122200,150000,131000,101000,171050,124400,187000,128000,138000,92000,200000,138000,92000,120000,241300,124100,185000,152000,288000,107968,90599,189750,145000,252000,82254,61699,247500,172200,87500,62500,146000,108000,273000,166500,65000,45000,174000,189750,119213,190000,140000,228830,148590,140000,180514,108308,220000,170000,169000,110600,77737,64311,78000,75577,62433,204500,142200,64781,94000,81900,199000,162000,67672,208000,109500,240000,238530,95000,82000,80000,70000,154700,118900,232960,166400,156000,105000,193000,143000,138860,119610,205485,156560,210600,135000,170000,105000,135000,100000,100000,70132,51676,92280,79976,15000,64781,144100,89100,140000,100000,193600,119700,94000,81900,131721,180000,120000,242000,134000,104000,258800,199200,201000,141100,94100,126000,170000,104584,208500,165000,77737,86374,169000,110600,130800,87200,215000,61520,49216,238000,173000,205785,123471,299500,245100,40000,71259,290000,226000,161000,151000,53120,38868,136994,214500,120000,278300,205700,185900,167310,114000,194000,161000,32390,184950,119250,178500,136000,189000,159090,82000,149076,82365,194595,158000,305000,245000,205485,156560,168000,78400,175000,130002,71908,212000,132000,177000,148000,248100,145900,155000,38000,218000,235400,108320,152375,115934,81666,79000,273400,182200,160000,112000,285000,154000,220000,170000,200000,250000,125000,275000,200000,177000,136000,122720,231500,118000,299500,249600,297000,138000,267100,167200,188500,117000,150931,143250,231000,157250,240000,157250,232000,277300,213300,209000,184250,167500,85000,110736,92280,154440,68550,90000,60000,226600,140100,49216,41833,80000,52500,253000,156400,235000,223100,114700,172800,110000,152375,94000,183000,125000,120350,74400,134000,57007,44051,258750,172500,220000,150000,109528,287500,207500,134200,103200,160000,93919,180000,186600,119800,200000,383910,315850,198000,132000,141600,94400,209450,167560,185000,164000,80000,52500,238000,149500,186600,116500,61520,175000,145000,195000,220000,190000,113366,118539,86128,146000,97400,40747,166364,116455,145000,125000,76000,131000,222000,166500,205600,105700,138000,67000,211200,230000,60000,200000,180000,18381,200000,120000,126500,78000,157750,104650,133000,70000,40000,190000,158080,182000,252000,129000,231000,200800,159100,120160,140000,110000,165000,149094,290000,247500,172200,72250,162500,23753,83000,63967,188600,111550,219300,143000,133300,80000,204060,140358,198900,183310,43064,392000,224000,233000,199098,172000,107000,128000,81500,208450,151600,240960,200800,120681,72409,250000,176000,250000,170000,38290,215936,178560,148800,331640,283780,167954,115830,125000,185000,50000,331640,283780,189110,139000,199000,145000,199000,142000,230000,170000,66000,52000,200000,178560,148800,200000,166500,113220,365630,229000,185000,86700,192300,153800,67419,131650,105320,126400,235400,160080,146190,175000,228856,144540,151800,150000,100000,126500,78000,126500,78000,70000,300000,200000,96000,72000,205150,167850,222750,182250,104024,50745,148594,206000,140250,254500,130900,198000,124000,234485,112655,125000,51676,70179,64781,258000,190000,184184,167441,74087,32390,204500,90000,84000,202400,147200,139500,90000,192000,142000,143000,129000,191000,85000,70000,147648,98432,144800,250000,16000,27000,72000,172900,144100,160000,135000,101500,83700,283000,184000,220000,185000,246500,133500,174000,134000,330000,230000,167000,109000,47899,115000,145000,284000,227000,205000,160000,191400,127600,230000,95000,70000,258000,171000,87000,73000,20000,300000,110736,55368,151840,163152,108768,285000,193900,345000,234700,100000,40000,241000,210000,90000,59382,90000,84000,160000,221300,147500,210000,160000,192000,151000,169000,204500,142200,210000,170000,72000,60000,210000,159090,94400,90000,190000,125000,130002,71908,60000,81838,60000,255000,116990,82920,159000,105000,155000,102000,374000,197500,187000,20000,195000,119000,266450,177700,55720,50700,56000,135000,115000,302000,189000,220000,150000,93000,190000,46565,216000,184000,100000,128750,79350,155000,125000,273400,182200,165000,142500,213654,142436,124230,68637,204000,161500,185900,129300,148750,95000,287700,148000,227240,197600,178500,146100,112400,86128,79976,285000,90000,146000,237400,158200,192000,164000,150000,141000,267000,147100,90700,72000,177177,240000,142000,180000,105000,80000,60000,268000,144628,115702,144000,132000,106400,81800,93500,208200,151200,270000,194500,115500,140000,100000,225000,199000,50000,40000,98432,399880,41027,155000,100000,65000,280100,168100,120000,149040,113900,165000,145000,274450,199600,83500,52500,140000,76500,280000,250000,180000,157000,140700,109600,278000,173000,305000,125000,155000,120000,24000,165400,127300,259000,138750,218000,85000,132000,71500,215050,113100,130000,85000,250000,200000,168400,136505,100895,275300,183500,168400,105200,240000,120000,93000,237400,132870,105000,317070,170730,170000,125000,158700,123906,80976,66940,333500,180500,76284,257400,210600,65000,50000,293000,260000,192000,170000,125000,99000,233000,185100,127600,105000,160000,55000,241000,163000,120000,218000,118000,311000,162540,258750,225000,145000,153600,106800,140000,76500,182850,113000,126000,86400,232760,169280,162500,240350,174800,116000,153600,107500,94100,72400,178000,152000,233200,210000,160000,206000,130000,146100,112400,110000,70000,150120,120096,168000,178600,142880,255000,169000,155000,151410,144200,151410,115360,193170,116480,146000,94000,246080,203016,135344,110736,329500,269600,250500,159500,115000,94035,57920,113600,60000,256000,116000,245000,210000,283200,188800,36000,205640,142600,193200,156400,121000,72000,48000,132300,197000,328000,211000,237000,201450,229000,206000,231000,183750,165400,175000,152900,117700,285800,154600,289120,192400,179998,35000,258000,196000,121000,141000,206000,192000,164000,300000,260000,147000,92000,110000,261500,134500,83200,204500,142200,275300,183500,147648,123040,136600,109280,84000,60000,61520,70000,60000,281000,69500,285000,69525,61800,192000,178000,152000,160000,40000,130000,110000,225000,168000,130001,71907,144000,80000,205000,150000,189400,131685,204500,142200,172000,60000,77791,55410,57000,120000,277500,150000,236500,172800,110000,60000,100000,323905,150000,100000,62000,55000,155000,140000,36000,144000,77000,110736,55368,265000,217000,177300,136300,83000,208450,170550,72000,60000,130000,165000,145000,336400,201900,189750,131100,270000,95000,117300,69000,182000,144000,244000,200000,260000,225000,102500,186600,116500,80000,60000,222000,138000,207300,149200,292000,164500,292200,163800,126000,120000,280000,210000,150000,200000,170000,225000,175000,189750,131100,123400,82200,225000,50000,161800,121400,285000,193900,240000,196000,214000,170000,155000,98000,199000,260000,105066,110736,86128,145000,289800,214000,87500,165000,280830,173175,92280,49216,75038,64781,71475,61541,231250,138750,155000,242000,195000,155000,125000,160000,140000,183924,125760,430640,86374,30000,25500,175000,120000,219000,141000,213660,130760,275000,174000,143200,90000,72000,253200,342810,184590,105380,64500,30000,204620,110680,270703,221484,212750,218500,199098,203300,123600,231500,166000,172500,110500,238000,176000,237000,201450,193500,139000,150000,70179,97171,185900,129300,163196,145885,202800,104300,179170,94300,152500,116450,133800,220000,56536,214000,283200,188800,161800,141600,342300,176100,85000,65000,138784,83270,70000,318300,212200,230000,143200,105000,46755,43064,168400,105200,55368,43064,220000,67672,15000,86128,58444,85000,75000,250000,186000,230000,200000,53984,205000,180000,215000,170000,224000,176000,67635,74883,100000,80000,162500,200000,115000,239000,122900,237000,191765,134236,190000,112000,88256,105500,293000,148500,152900,117100,173000,113000,175000,110000,110000,205000,149500,127075,219535,146115,221000,153000,187000,179000,109000,142000,198800,105200,112000,115000,86000,106000,275000,50000,280700,150450,51861,93918,51962,175000,135000,257000,222000,133200,221000,147000,238000,156000,304000,48585,198340,104055,183600,130000,160000,120000,289076,202353,157750,104650,180000,200000,68000,60000,90000,155000,125000,181000,252000,154000,180000,155000,64200,56100,135000,171250,113750,153600,100500,115000,182500,121500,203100,114500,92700,167500,106500,59888,286000,207000,178600,230000,220000,210000,151800,317070,170730,21593,108000,60000,134000,124000,124500,175000,148700,125600,120000,185000,120250,183000,125000,135000,143865,115092,90000,173000,132000,208049,128500,149600,102000,100000,190000,106800,97171,80976,151000,43187,145000,154000,143000,79976,190000,120000,110736,111000,265000,235000,122638,73546,75000,60400,172309,60462,83500,52500,201036,134024,62000,58000,172000,115000,125000,90000,139500,109400,145000,239748,159832,186300,102500,149040,113900,153600,106800,172600,107900,180180,106020,376080,213120,206500,121600,170000,90000,95000,70000,120000,175000,206000,65000,48000,87000,145000,115100,73900,86128,58444,130000,205000,141288,94192,184000,143000,160000,147000,74883,70000,80000,210914,116704,185700,165000,193000,136850,139500,109400,276000,59382,48585,75577,48585,198094,102492,138666,102492,130000,150000,260000,110000,170000,130000,163800,126000,106250,167500,106500,250000,138000,130000,100000,124163,104500,70000,90000,70000,125000,127000,210550,153300,200000,161500,119500,105000,85000,215000,146300,215936,72000,60000,153400,122700,123900,340000,150000,64781,185900,121700,50000,100000,310000,239000,150000,149076,82365,85500,97750,116990,82920,200000,125000,155000,140000,205920,171600,121500,78000,116000,79976,44356,180000,200000,129192,104584,30000,185000,125000,34320,75577,106000,122000,93800,150000,90000,220000,72338,64781,40000,152380,121904,168400,105200,128280,106900,192000,100000,107968,86374,275000,174000,170500,73857,55044,162288,129058,80000,65000,124740,65488,72200,64980,179975,86466,175000,120000,230000,120000,205920,171600,265000,130000,168000,38868,167580,87980,104000,65000,230000,269000,158000,197000,106000,150000,100000,290000,192000,172800,300240,200160,140000,169000,100000,116888,110000,80000,55000,48000,137500,81500,30000,186000,153088,190000,160000,190000,183310,66000,148500,126277,228000,180000,90000,272000,170000,259000,110736,73824,18160,19910,247500,172200,107968,75577,288000,73824,61520,215050,198000,114000,209300,182200,85000,49216,120000,60000,147100,90700,227000,160000,56143,51824,60000,50000,153799,52500,250000,162500,165000,124000,63000,253750,169200,170000,120000,213580,163625,375000,102569,210000,231250,138750,284310,153090,110736,86128,100000,225900,156400,385000,241871,133832,36000,123040,98432,216100,140800,147648,53984,110000,63980,284000,236000,248100,145900,155850,102544,151410,115360,59382,125948,100000,185000,120250,26992,180000,85000,70000,100000,155000,140000,220000,204500,138900,23000,110000,182750,137500,314100,195800,205000,180000,165000,144000,160000,100000,199000,112000,130000,160000,135000,183000,350000,262500,122000,158677,103200,61200,155000,66970,63701,174500,113000,87000,108000,107250,119000,285800,154600,30000,220000,195000,168400,200000,153000,94000,90000,124234,74540,109000,84053,50000,125600,141290,74178,107500,52500,84000,125000,110000,200000,135000,48000,120000,200000,80000,257000,77737,38868,140000,53984,51824,41027,183310,102500,122000,94000,182000,77737,38868,300000,105500,110000,79976,44356,153400,122700,87000,50000,234100,203500,232200,167200,197000,106000,180000,145000,225000,200000,114000,291500,196200,150900,95000,80000,116000,72000,207000,167000,145000,135000,133800,96100,140000,100000,140000,115000,219000,126100,72000,175000,240500,137500,187500,165000,73824,25216,165750,225000,165750,110367,67979,115000,275000,175000,175308,100706,235000,135000,289076,202353,70179,37788,120000,231250,138750,100000,150000,120000,133000,272550,198200,187500,155000,64000,235000,185000,143100,113000,142000,180560,115440,120000,110000,76284,63980,141600,59059,46755,128000,236000,130000,125000,175000,155000,153600,106800,150000,140000,122000,94500,170000,130000,145000,128000,145000,100000,120000,115000,150000,150000,100000,150000,127500,126500,51000,260000,175000,40000,40000,250000,63000,210000,160000,272550,198200,94560,52533,220000,146000,248400,183600,150000,40000,120000,95000,160000,135000,24165,216000,144000,85000,65000,149000,119000,120000,150000,110000,246000,201000,190000,155000,235000,185000,190000,160000,100000,130000,115000,92350,67723,105000,70000,204500,142200,192000,164000,185900,129300,75000,175000,120000,167500,106500,75000,60000,184000,142000,145000,100000,44365,200000,145000,92350,73880,192000,164000,310000,239000,120000,95000,145000,135000,78000,73546,36773,160000,120000,125000,95000,47280,37824,115934,81666,175000,140000,249500,149850,122500,100000,249500,149850,55000,48000,249500,149850,58837,190000,120000,127000,104000,210000,150000,150000,210000,130000,182750,161500,102640,66100,210000,150000,198800,122600,130000,80000,136000,104000,150000,100000,159000,130000,215000,150000,187000,153000,255000,185000,430967,55410,50432,39925,169000,110600,60938,140000,120000,50000,134000,124000,166700,119000,124234,74540,100000,65000,200000,220000,146000,68293,110000,70000,190000,135000,128000,81500,173000,110000,192000,120000,190000,194000,129400,201000,89200,165000,125000,230000,196000,130000,90000,150000,100000,230000,150000,130000,180000,120000,192500,140000,152500,65000,55000,178750,160000,63040,165000,135000,170000,125000,105000,70000,130000,95000,203500,152000,197430,134760,120000,197000,99000,162000,110446,79178,70186,51716,149040,113900,95000,115000,171000,50000,185900,129300,230000,154600,75000,213000,152000,120000,110000,70000,227200,168000,64090,60938,243000,183000,150000,130000,90000,165000,124000,178000,132000,300000,116000,96000,92350,70186,105000,70000,105236,100000,189750,140250,130000,160000,109000,250000,150000,206000,135000,115573,73546,42026,191200,66192,230000,154600,80000,135000,110000,155000,140000,205000,179500,134000,145000,235000,175000,27317,90000,165000,135000,168400,105200,86193,49253,200000,198800,122600,100000,105066,104663,73880,125000,110000,148000,107000,100000,65000,63040,36773,299500,245100,168000,130000,161000,118000,205000,247500,172200,68293,177000,131000,146000,102000,80000,65000,61566,43096,175000,135000,80000,231250,138750,193750,116250,231250,138750,193750,116250,208000,127000,300000,196000,45555,205000,185000,247500,172200,110000,375000,225000,156400,104663,80036,140700,93800,350000,135000,104697,33000,34672,201000,119000,175000,154560,123648,170000,145000,135000,100000,247500,172200,177500,134000,192564,144854,179305,142127,315000,225000,243900,156600,79000,89306,182500,128500,77300,45600,110000,210000,136000,170000,140000,247500,172200,225000,184100,100000,85000,78000,161000,205000,160000,61566,49253,245000,180000,220000,198440,144000,240000,198440,144000,150000,57872,64000,39925,187200,116100,150000,127000,275000,166000,159699,138938,76000,103432,92350,80000,52500,236000,182000,180000,135000,240000,125404,195000,110000,123000,92250,180000,100000,97000,90000,180000,260000,180000,210000,157000,80000,52500,128000,81500,105000,70000,175000,122500,171000,117000,202800,104300,36773,30000,78000,48000,78000,42000,345600,230400,78000,48000,175950,130050,205600,105700,236600,84000,54000,80000,200000,73742,165000,33246,75050,108000,155000,38000,85000,65000,110820,92350,153600,106800,50000,123400,88100,120000,55000,150000,120000,139000,139600,85700,185000,50000,200000,148500,98200,115000,95000,225000,66000,134000,98000,105000,62000,57000,161311,144200,115360,83171,73546,42026,180000,160000,108000,200000,150000,125976,188700,160395,198440,144000,191475,141525,75648,156868,200000,69344,90000,126080,84053,200000,180000,108000,85000,165000,132000,130000,110000,45050,42028,135000,178800,132100,20000,140000,110000,160000,85000,250000,63000,187200,116100,145000,229998,154545,215000,159000,50000,183000,99750,68400,236900,159200,243225,179775,128000,191475,141525,218000,145300,195400,131300,105000,207000,153000,99000,200000,135000,195700,130500,130000,84000,100000,60000,80036,67723,141300,102100,150000,102200,144000,113000,31520,195400,131300,195400,131300,80000,60000,63040,50000,105000,190000,140000,180000,165000,108000,20000,179400,154000,193900,129300,222640,182160,150000,100000,122500,100000,297500,260000,15000,193000,93000,73000,136994,101570,57786,136000,112000,172000,215000,164000,45390,97500,212800,142800,73546,50000,151800,130240,165000,140250,179400,154000,75000,84053,73546,98506,86193,84053,73546,102663,80041,104611,82280,191475,141525,115000,31520,81000,66000,46000,80000,200000,180000,200000,204100,136100,250000,63000,118208,110820,19073,95000,70000,75000,113000,170000,113000,140000,50000,53368,29944,160000,119300,145000,90000,146200,124270,225000,160000,54634,185800,137400,245000,180000,203500,152000,250000,63000,186000,148800,128058,82000,110000,173000,186000,148800,158000,134000,200000,150000,216200,144100,115573,89306,250000,63000,135000,85000,206000,175100,189650,164996,154000,126000,200000,150000,135000,98506,73880,117000,99450,200000,135000,193900,129300,55410,86193,61566,175000,130000,188100,139860,248700,167100,50432,205000,141300,102100,50000,84053,61566,250000,63000,189500,140100,177600,131300,24000,202900,115000,115000,193900,129300,140000,216200,144100,216000,144000,150000,50000,250000,84053,131752,48000,260500,175100,55000,130000,77119,52008,206699,99100,200000,54000,130000,100000,80000,100000,221300,148700,30000,28368,91118,61566,60938,249260,185400,80036,128875,93700,100000,136260,109280,160000,92000,135446,104663,129000,86000,100000,25000,65257,200000,180000,153000,150075,110925,22800,22809,15000,133766,83000,186000,148800,112900,90320,240000,160000,300000,200000,65666,200000,116976,92350,120000,112900,90320,145000,105400,49268,215300,158200,209100,154600,115934,81666,155000,84053,164000,132000,123000,52533,115222,165400,132320,208775,147800,136994,101570,35093,183600,100800,49253,36940,42026,31520,42026,31520,215300,140400,63040,47280,260000,43096,63040,47280,55410,51064,60000,82900,63900,160000,112300,241000,159000,80000,58000,136000,108800,242000,200000,61566,36940,49253,165220,120160,124190,181940,132320,220110,160080,180000,120000,126500,106260,116000,155000,120600,130000,90000,170000,102100,84900,136620,99360,110820,98506,146000,43096,130000,110000,170000,161342,137141,167000,73880,61566,211500,138600,192400,90700,130000,61300,160000,113000,95550,167000,115500,243900,156600,136600,128875,93700,224000,167875,175000,135000,205300,176000,200100,70500,54000,205300,140400,205300,184700,175100,140250,116150,99050,85000,75000,214000,192600,266400,213120,141300,102100,206699,99100,110500,61566,43096,80000,60000,230000,150260,109280,160000,67000,52000,129000,69000,25000,126500,106260,220110,160080,105000,135000,50000,220000,172386,86193,220000,120000,200000,120000,65000,324000,216000,185100,104890,76814,117104,192037,120000,55685,52533,75000,157000,69133,65000,68293,109000,67597,20000,102839,200000,51081,83864,40000,31520,59888,54742,89306,83171,165000,153000,100000,76814,33609,75000,20000,30469,69999,55475,61989,152500,120000,135000,405000,150000,240000,135000,80000,380000,120402,177000,65141,48000,20000,220000,150000,90000,100000,100000,100000,144000,155499,24000,38400,100000,82500,49646,120000,84053,20000,125000,120000,110037,21013,50000,200000,60000,200000,100000,100000,82744,59303,62649,82528,170000,150000,55000,250000,80000,70000,130026,63831,68428,85000,230000,125000,120000,450000,46759,74130,127221,144000,75774,150000,103000,153000,90000,90000,60000,50000,270000,54238,47282,153667,28476,110000,82528,250000,59102,80000,138000,140000,79197,170000,80000,45760,100000,53192,235000,150000,79833,225000,76833,50180,88654,103160,113476,94564,150000,115000,187442,51519,106000,112872,150000,15966,95746,70000,76958,89294,276000,188000,160000,105000,174000,93000,60757,90000,70139,170000,96282,36643,72212,91000,99703,165000,80000,103691,42000,115000,63810,260000,110000,180000,200000,109024,200000,256000,110000,79833,72500,185000,69741,100000,112000,150000,20171,55000,58000,100000,77684,85000,76833,105000,72000,65013,28016,111775,93150,160000,25532,63831,190000,141846,71786,135000,24823,147000,96113,174000,135000,21844,125000,51321,69741,50000,39916,87000,26005,90734,81000,90000,61467,195000,37825,85000,416000,225000,56256,116914,46597,114047,88654,56000,28609,88654,47899,98000,66022,56738,24823,120000,20000,325000,200000,45896,160000,50000,40189,165000,42197,185000,62726,21669,110000,140000,120000,87738,61896,76833,74000,152000,18000,60000,130000,18907,59102,173762,148261,38776,46809,91237,62726,115000,235000,75000,62000,73000,45391,190200,118000,138350,130800,45618,168000,119059,423000,28369,165000,412000,151000,105000,100000],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"job_title\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Salary in USD\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Salary Distribution Across job_titles\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('d9f289aa-a338-4bf6-8a80-c4a66ebf1915');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig = px.box(df_cleanedPre, x='job_title', y='salary_in_usd', title='Salary Distribution Across job_titles')\n",
        "fig.update_layout(\n",
        "    xaxis_title='job_title',\n",
        "    yaxis_title='Salary in USD',\n",
        "    boxmode='group'\n",
        ")\n",
        "fig.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "12yF4QcCBBXH"
      },
      "outputs": [],
      "source": [
        "Datacleaned = df_duplicados.copy()\n",
        "Datacleaned.reset_index(drop=True, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xY3YCnT0Bb93",
        "outputId": "c8f450b8-62cf-4c35-ca0e-b2e5ab871da9"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 5341 entries, 0 to 5340\n",
            "Data columns (total 8 columns):\n",
            " #   Column              Non-Null Count  Dtype   \n",
            "---  ------              --------------  -----   \n",
            " 0   job_title           5341 non-null   category\n",
            " 1   experience_level    5341 non-null   category\n",
            " 2   employment_type     5341 non-null   category\n",
            " 3   work_setting        5341 non-null   category\n",
            " 4   company_size        5341 non-null   category\n",
            " 5   company_location    5341 non-null   category\n",
            " 6   employee_residence  5341 non-null   category\n",
            " 7   salary_in_usd       5341 non-null   int32   \n",
            "dtypes: category(7), int32(1)\n",
            "memory usage: 68.5 KB\n"
          ]
        }
      ],
      "source": [
        "Datacleaned.info() # este es el dataframe con limpieza general"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_uez_-NJu3zy"
      },
      "source": [
        "* De la limpieza obtenemos un dataframe llamado Datacleaned con el que vamos a trabajar para filtrar"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rxg5cqxcMfwW"
      },
      "source": [
        "# Metodos de procesamiento"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g7m8K83pEFvX"
      },
      "source": [
        "## Trabajando con 1 variable de salida (salary_in_usd)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7YqypJMKemw4"
      },
      "source": [
        "### Trabajando con Label encoder"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tqvqcCxvfJyC"
      },
      "outputs": [],
      "source": [
        "DataModel = Datacleaned.copy()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OXiafEAJgN4b"
      },
      "source": [
        "Vemos que existen columnas donde se tienen frecuencias muy bajas, incluso de 1, para muchos valores.\n",
        "\n",
        "Por ello, para las columnas categoricas, se decide crear una categoria 'other', donde se agrupen estos datos con baja frecuencia."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oDW3j10xevPj"
      },
      "outputs": [],
      "source": [
        "#Función para agregar categoria \"Other\"\n",
        "\n",
        "def shorten_category(categories, cutoff):\n",
        "    categorical_map = {}\n",
        "    for i in range(len(categories)):\n",
        "        if categories.values[i] >= cutoff:\n",
        "            categorical_map[categories.index[i]] = categories.index[i]\n",
        "        else:\n",
        "            categorical_map[categories.index[i]] = 'Other'\n",
        "    return categorical_map"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HiXnHfKDe5Q8",
        "outputId": "c24e277c-735b-4546-cd9a-1aac0b6d2ea1"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "company_location\n",
              "United States     4301\n",
              "United Kingdom     358\n",
              "Other              354\n",
              "Canada             198\n",
              "Germany             71\n",
              "Spain               59\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 108,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "map =shorten_category(DataModel.company_location.value_counts() , 50)\n",
        "DataModel['company_location'] = DataModel['company_location'].map(map).astype('category')\n",
        "DataModel['company_location'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uxnF_LAcfcty",
        "outputId": "f140279d-f2f7-4e28-b309-b9dc11666ae7"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "employee_residence\n",
              "United States     4255\n",
              "Other              358\n",
              "United Kingdom     351\n",
              "Canada             196\n",
              "Germany             65\n",
              "Spain               63\n",
              "France              53\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 109,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "map =shorten_category(DataModel.employee_residence.value_counts() , 50)\n",
        "DataModel['employee_residence'] = DataModel['employee_residence'].map(map).astype('category')\n",
        "DataModel['employee_residence'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-TPIK9FdfrqS",
        "outputId": "fcad0218-d0ce-4175-cb99-72613cf100de"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "job_title\n",
              "Data Engineer                     1100\n",
              "Data Scientist                    1039\n",
              "Other                              879\n",
              "Data Analyst                       744\n",
              "Machine Learning Engineer          518\n",
              "Analytics Engineer                 207\n",
              "Research Scientist                 162\n",
              "Data Architect                     129\n",
              "Research Engineer                   96\n",
              "ML Engineer                         95\n",
              "Applied Scientist                   80\n",
              "Data Science Manager                72\n",
              "Machine Learning Scientist          62\n",
              "Business Intelligence Engineer      55\n",
              "Data Manager                        53\n",
              "Business Intelligence Analyst       50\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 110,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "map =shorten_category(DataModel.job_title.value_counts() , 50)\n",
        "DataModel['job_title'] = DataModel['job_title'].map(map).astype('category')\n",
        "DataModel['job_title'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ux8qdk9Lgpq0"
      },
      "source": [
        "Para la columna 'salary_in_usd', al ser una variable numérica, se agrupa por cuartiles, esto para asegurar una distribución uniforme entre las 4 categorias creadas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vaiG5XyQhSrD"
      },
      "outputs": [],
      "source": [
        "DataModel['Salary_ranges'] = pd.qcut(DataModel['salary_in_usd'],4).astype('category')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NWglUGZ_hbbF",
        "outputId": "18479f59-aa26-4592-92d7-113d18ea8a1d"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Salary_ranges\n",
              "(98506.0, 140000.0]     1364\n",
              "(14999.999, 98506.0]    1338\n",
              "(186000.0, 450000.0]    1333\n",
              "(140000.0, 186000.0]    1306\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 112,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "DataModel['Salary_ranges'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "miFT8iPLh-08"
      },
      "source": [
        "Ahora se codifican las variables, en este caso se utiliza Label Encoder."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pUOnSvJwiuep"
      },
      "outputs": [],
      "source": [
        "objects = DataModel.select_dtypes(include=['category'])\n",
        "ints = DataModel.select_dtypes(exclude=['category'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "a9VHSKVOj-KQ",
        "outputId": "22701fad-dd40-476a-86d5-37f5e11d3cff"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"DataModel\",\n  \"rows\": 5341,\n  \"fields\": [\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          13,\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employee_residence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2,\n          6,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary_ranges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "DataModel"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-56df99c5-a265-499c-a375-f4c1a1652210\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "      <th>company_location</th>\n",
              "      <th>employee_residence</th>\n",
              "      <th>Salary_ranges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5336</th>\n",
              "      <td>165000</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5337</th>\n",
              "      <td>412000</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5338</th>\n",
              "      <td>151000</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5339</th>\n",
              "      <td>105000</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5340</th>\n",
              "      <td>100000</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5341 rows × 9 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56df99c5-a265-499c-a375-f4c1a1652210')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-56df99c5-a265-499c-a375-f4c1a1652210 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-56df99c5-a265-499c-a375-f4c1a1652210');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ee2f7777-aff1-46ab-a067-5d71dc7e6f59\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee2f7777-aff1-46ab-a067-5d71dc7e6f59')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ee2f7777-aff1-46ab-a067-5d71dc7e6f59 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_162beb2c-b50f-4fa6-8ab7-164473f880e2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('DataModel')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_162beb2c-b50f-4fa6-8ab7-164473f880e2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('DataModel');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      salary_in_usd  job_title  experience_level  employment_type  \\\n",
              "0             95012         13                 2                2   \n",
              "1            186000          5                 3                2   \n",
              "2             81800          5                 3                2   \n",
              "3            212000          9                 3                2   \n",
              "4             93300          9                 3                2   \n",
              "...             ...        ...               ...              ...   \n",
              "5336         165000         13                 3                2   \n",
              "5337         412000          9                 3                2   \n",
              "5338         151000         13                 2                2   \n",
              "5339         105000          9                 0                2   \n",
              "5340         100000         13                 0                0   \n",
              "\n",
              "      work_setting  company_size  company_location  employee_residence  \\\n",
              "0                0             0                 1                   2   \n",
              "1                1             1                 5                   6   \n",
              "2                1             1                 5                   6   \n",
              "3                1             1                 5                   6   \n",
              "4                1             1                 5                   6   \n",
              "...            ...           ...               ...                 ...   \n",
              "5336             2             0                 5                   6   \n",
              "5337             2             0                 5                   6   \n",
              "5338             2             0                 5                   6   \n",
              "5339             2             2                 5                   6   \n",
              "5340             2             0                 5                   6   \n",
              "\n",
              "      Salary_ranges  \n",
              "0                 0  \n",
              "1                 2  \n",
              "2                 0  \n",
              "3                 3  \n",
              "4                 0  \n",
              "...             ...  \n",
              "5336              2  \n",
              "5337              3  \n",
              "5338              2  \n",
              "5339              1  \n",
              "5340              1  \n",
              "\n",
              "[5341 rows x 9 columns]"
            ]
          },
          "execution_count": 114,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "LE = LabelEncoder()\n",
        "for i in (objects):\n",
        "    objects[i] = LE.fit_transform(objects[i])\n",
        "DataModel = pd.concat([ints,objects],axis=1)\n",
        "DataModel"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "soh1kY6OkxfG"
      },
      "source": [
        "Se hace la separación de datos de entrenamiento y datos de prueba."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rQFyIGThkNOt"
      },
      "outputs": [],
      "source": [
        "X = DataModel.drop(['salary_in_usd', 'Salary_ranges'], axis=1)\n",
        "y = DataModel['Salary_ranges']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7bSrQ0gok1DN"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yc_LqrtygUeB"
      },
      "source": [
        "Por lsa poca uniformidad en la distribución de los datos, se opta por trabajar con Random Forest, en este caso buscaremos los mejores valores para los hiperparametros."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "23dJFSL9mG0q",
        "outputId": "248af2f4-d8ee-42e7-cbe4-2385f093e9d2"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/joblib/externals/loky/backend/fork_exec.py:38: RuntimeWarning:\n",
            "\n",
            "os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
            "\n"
          ]
        }
      ],
      "source": [
        "n_estimators_grid = np.arange(20, 50,2)\n",
        "depth_grid = np.arange(1, 10)\n",
        "min_samples_leaf_grid = np.arange(10,21,2)\n",
        "parameters = {'n_estimators': n_estimators_grid, 'max_depth': depth_grid, 'min_samples_leaf':min_samples_leaf_grid}\n",
        "gridCV = GridSearchCV(RandomForestRegressor(random_state=12345), param_grid=parameters, cv=10, n_jobs=-1)\n",
        "gridCV.fit(X_train, y_train)\n",
        "best_n_estim = gridCV.best_params_['n_estimators']\n",
        "best_depth = gridCV.best_params_['max_depth']\n",
        "best_min_samples_leaf = gridCV.best_params_['min_samples_leaf']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "axtCsstqmZPj",
        "outputId": "a5959121-02d8-45c5-d246-f48b80a9c42a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mejor n_estimator de Random Forest : 42\n",
            "Mejor max_depth de Random Forest : 8\n",
            "Mejor min_samples_leaf de Random Forest : 10\n"
          ]
        }
      ],
      "source": [
        "print(\"Mejor n_estimator de Random Forest : \" + str(best_n_estim))\n",
        "print(\"Mejor max_depth de Random Forest : \" + str(best_depth))\n",
        "print(\"Mejor min_samples_leaf de Random Forest : \" + str(best_min_samples_leaf))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vSECsyd0ghjx"
      },
      "source": [
        "Con el resultado anterior realizamos el entrenamiento, y finalmente calculamos el R^2 y el MSE"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3R1q-4Cdmcn_"
      },
      "outputs": [],
      "source": [
        "RF_best = RandomForestRegressor(n_estimators=best_n_estim,max_depth=best_depth, min_samples_leaf=best_min_samples_leaf,random_state=123)\n",
        "RF_best.fit(X_train, y_train)\n",
        "Y_pred = RF_best.predict(X_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZJ61jfZRme0i",
        "outputId": "5ddd15d3-5a14-4c8d-f36a-19148af9108d"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mean squared error: 0.7739521174461781\n",
            "R^2 score: 0.37846466491479114\n"
          ]
        }
      ],
      "source": [
        "# Calculate and print the MSE\n",
        "mse = mean_squared_error(y_test, Y_pred)\n",
        "print(\"Mean squared error:\", mse)\n",
        "\n",
        "# Calculate and print the R^2 score\n",
        "r2 = r2_score(y_test, Y_pred)\n",
        "print(\"R^2 score:\", r2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "itvH58OhqVLo"
      },
      "source": [
        "## Trabajando con DataCoding"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xnyPmOt6Exo5"
      },
      "outputs": [],
      "source": [
        "DataCoding = Datacleaned.copy()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "e3zA0y1vTsEW",
        "outputId": "f6bdc820-19fd-4096-dca1-969e1a35fb5b"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"DataCoding\",\n  \"rows\": 5341,\n  \"fields\": [\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"AI Engineer\",\n          \"Data Management Specialist\",\n          \"Business Intelligence Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Senior\",\n          \"Entry-level\",\n          \"Mid-level\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Part-time\",\n          \"Freelance\",\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hybrid\",\n          \"In-person\",\n          \"Remote\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"L\",\n          \"M\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          \"Mauritius\",\n          \"Germany\",\n          \"Bosnia and Herzegovina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employee_residence\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"Turkey\",\n          \"Germany\",\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "DataCoding"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-e8a1745a-8892-4979-93ad-8eb3c1db219e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "      <th>company_location</th>\n",
              "      <th>employee_residence</th>\n",
              "      <th>salary_in_usd</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Data DevOps Engineer</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>L</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Germany</td>\n",
              "      <td>95012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>186000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>81800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>212000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>93300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5336</th>\n",
              "      <td>Data Specialist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>165000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5337</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>412000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5338</th>\n",
              "      <td>Principal Data Scientist</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>151000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5339</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Entry-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>S</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5340</th>\n",
              "      <td>Business Data Analyst</td>\n",
              "      <td>Entry-level</td>\n",
              "      <td>Contract</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "      <td>United States</td>\n",
              "      <td>United States</td>\n",
              "      <td>100000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5341 rows × 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8a1745a-8892-4979-93ad-8eb3c1db219e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e8a1745a-8892-4979-93ad-8eb3c1db219e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e8a1745a-8892-4979-93ad-8eb3c1db219e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ff6618ad-9249-4225-8a7d-1d6e94571aba\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff6618ad-9249-4225-8a7d-1d6e94571aba')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ff6618ad-9249-4225-8a7d-1d6e94571aba button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a992bce8-2b07-4082-b42c-169de3410314\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('DataCoding')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a992bce8-2b07-4082-b42c-169de3410314 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('DataCoding');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                     job_title experience_level employment_type work_setting  \\\n",
              "0         Data DevOps Engineer        Mid-level       Full-time       Hybrid   \n",
              "1               Data Architect           Senior       Full-time    In-person   \n",
              "2               Data Architect           Senior       Full-time    In-person   \n",
              "3               Data Scientist           Senior       Full-time    In-person   \n",
              "4               Data Scientist           Senior       Full-time    In-person   \n",
              "...                        ...              ...             ...          ...   \n",
              "5336           Data Specialist           Senior       Full-time       Remote   \n",
              "5337            Data Scientist           Senior       Full-time       Remote   \n",
              "5338  Principal Data Scientist        Mid-level       Full-time       Remote   \n",
              "5339            Data Scientist      Entry-level       Full-time       Remote   \n",
              "5340     Business Data Analyst      Entry-level        Contract       Remote   \n",
              "\n",
              "     company_size company_location employee_residence  salary_in_usd  \n",
              "0               L          Germany            Germany          95012  \n",
              "1               M    United States      United States         186000  \n",
              "2               M    United States      United States          81800  \n",
              "3               M    United States      United States         212000  \n",
              "4               M    United States      United States          93300  \n",
              "...           ...              ...                ...            ...  \n",
              "5336            L    United States      United States         165000  \n",
              "5337            L    United States      United States         412000  \n",
              "5338            L    United States      United States         151000  \n",
              "5339            S    United States      United States         105000  \n",
              "5340            L    United States      United States         100000  \n",
              "\n",
              "[5341 rows x 8 columns]"
            ]
          },
          "execution_count": 122,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "DataCoding"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "collapsed": true,
        "id": "TTSRmtV5cEFO",
        "outputId": "28ee9da9-e0e0-4ca2-831e-9af5d29c6469"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df_model\",\n  \"rows\": 5341,\n  \"fields\": [\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"AI Engineer\",\n          \"Data Management Specialist\",\n          \"Business Intelligence Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Senior\",\n          \"Entry-level\",\n          \"Mid-level\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Part-time\",\n          \"Freelance\",\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hybrid\",\n          \"In-person\",\n          \"Remote\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"L\",\n          \"M\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          \"Mauritius\",\n          \"Germany\",\n          \"Bosnia and Herzegovina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df_model"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-5213fa33-4472-4c51-a2a1-8da2757a4f62\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "      <th>company_location</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>Data DevOps Engineer</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>L</td>\n",
              "      <td>Germany</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5213fa33-4472-4c51-a2a1-8da2757a4f62')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5213fa33-4472-4c51-a2a1-8da2757a4f62 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5213fa33-4472-4c51-a2a1-8da2757a4f62');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e570a9d5-7ac4-42cd-9a32-94658a025a0c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e570a9d5-7ac4-42cd-9a32-94658a025a0c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e570a9d5-7ac4-42cd-9a32-94658a025a0c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd             job_title experience_level employment_type  \\\n",
              "0          95012  Data DevOps Engineer        Mid-level       Full-time   \n",
              "1         186000        Data Architect           Senior       Full-time   \n",
              "2          81800        Data Architect           Senior       Full-time   \n",
              "3         212000        Data Scientist           Senior       Full-time   \n",
              "4          93300        Data Scientist           Senior       Full-time   \n",
              "\n",
              "  work_setting company_size company_location  \n",
              "0       Hybrid            L          Germany  \n",
              "1    In-person            M    United States  \n",
              "2    In-person            M    United States  \n",
              "3    In-person            M    United States  \n",
              "4    In-person            M    United States  "
            ]
          },
          "execution_count": 123,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_model = DataCoding[['salary_in_usd','job_title', 'experience_level', 'employment_type', 'work_setting', 'company_size', 'company_location']]\n",
        "df_model.head(5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8TOLuzCxc-Ei"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Obtener dummies para todas las columnas excepto \"company_location\" y \"salary_in_usd\"\n",
        "columns_to_encode = df_model.columns.difference(['salary_in_usd'])\n",
        "df_dum = pd.get_dummies(df_model, columns=columns_to_encode)\n",
        "\n",
        "# Guardar el esquema de las columnas\n",
        "original_columns = df_dum.columns.difference(['salary_in_usd'])\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "ExQTOZ0dwm5P",
        "outputId": "a731edcc-a369-4d8d-cbd7-25dd4ddd8652"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_dum"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-929ae5b2-6d01-41d0-b340-0cdb155b196c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location_Algeria</th>\n",
              "      <th>company_location_American Samoa</th>\n",
              "      <th>company_location_Andorra</th>\n",
              "      <th>company_location_Argentina</th>\n",
              "      <th>company_location_Armenia</th>\n",
              "      <th>company_location_Australia</th>\n",
              "      <th>company_location_Austria</th>\n",
              "      <th>company_location_Bahamas</th>\n",
              "      <th>company_location_Belgium</th>\n",
              "      <th>...</th>\n",
              "      <th>job_title_Research Engineer</th>\n",
              "      <th>job_title_Research Scientist</th>\n",
              "      <th>job_title_Sales Data Analyst</th>\n",
              "      <th>job_title_Software Data Engineer</th>\n",
              "      <th>job_title_Staff Data Analyst</th>\n",
              "      <th>job_title_Staff Data Scientist</th>\n",
              "      <th>job_title_Staff Machine Learning Engineer</th>\n",
              "      <th>work_setting_Hybrid</th>\n",
              "      <th>work_setting_In-person</th>\n",
              "      <th>work_setting_Remote</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 210 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-929ae5b2-6d01-41d0-b340-0cdb155b196c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-929ae5b2-6d01-41d0-b340-0cdb155b196c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-929ae5b2-6d01-41d0-b340-0cdb155b196c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1b6b6805-119f-4716-90e9-3b7f823973a5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b6b6805-119f-4716-90e9-3b7f823973a5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1b6b6805-119f-4716-90e9-3b7f823973a5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd  company_location_Algeria  company_location_American Samoa  \\\n",
              "0          95012                     False                            False   \n",
              "1         186000                     False                            False   \n",
              "2          81800                     False                            False   \n",
              "3         212000                     False                            False   \n",
              "4          93300                     False                            False   \n",
              "\n",
              "   company_location_Andorra  company_location_Argentina  \\\n",
              "0                     False                       False   \n",
              "1                     False                       False   \n",
              "2                     False                       False   \n",
              "3                     False                       False   \n",
              "4                     False                       False   \n",
              "\n",
              "   company_location_Armenia  company_location_Australia  \\\n",
              "0                     False                       False   \n",
              "1                     False                       False   \n",
              "2                     False                       False   \n",
              "3                     False                       False   \n",
              "4                     False                       False   \n",
              "\n",
              "   company_location_Austria  company_location_Bahamas  \\\n",
              "0                     False                     False   \n",
              "1                     False                     False   \n",
              "2                     False                     False   \n",
              "3                     False                     False   \n",
              "4                     False                     False   \n",
              "\n",
              "   company_location_Belgium  ...  job_title_Research Engineer  \\\n",
              "0                     False  ...                        False   \n",
              "1                     False  ...                        False   \n",
              "2                     False  ...                        False   \n",
              "3                     False  ...                        False   \n",
              "4                     False  ...                        False   \n",
              "\n",
              "   job_title_Research Scientist  job_title_Sales Data Analyst  \\\n",
              "0                         False                         False   \n",
              "1                         False                         False   \n",
              "2                         False                         False   \n",
              "3                         False                         False   \n",
              "4                         False                         False   \n",
              "\n",
              "   job_title_Software Data Engineer  job_title_Staff Data Analyst  \\\n",
              "0                             False                         False   \n",
              "1                             False                         False   \n",
              "2                             False                         False   \n",
              "3                             False                         False   \n",
              "4                             False                         False   \n",
              "\n",
              "   job_title_Staff Data Scientist  job_title_Staff Machine Learning Engineer  \\\n",
              "0                           False                                      False   \n",
              "1                           False                                      False   \n",
              "2                           False                                      False   \n",
              "3                           False                                      False   \n",
              "4                           False                                      False   \n",
              "\n",
              "   work_setting_Hybrid  work_setting_In-person  work_setting_Remote  \n",
              "0                 True                   False                False  \n",
              "1                False                    True                False  \n",
              "2                False                    True                False  \n",
              "3                False                    True                False  \n",
              "4                False                    True                False  \n",
              "\n",
              "[5 rows x 210 columns]"
            ]
          },
          "execution_count": 125,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_dum.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "1NLbp7pxeijc",
        "outputId": "482971c4-d6f1-4f16-aa71-7e64250499f5"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_dum"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-5b7742cc-b9e9-4c11-b129-e1b8c0007da7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location_Algeria</th>\n",
              "      <th>company_location_American Samoa</th>\n",
              "      <th>company_location_Andorra</th>\n",
              "      <th>company_location_Argentina</th>\n",
              "      <th>company_location_Armenia</th>\n",
              "      <th>company_location_Australia</th>\n",
              "      <th>company_location_Austria</th>\n",
              "      <th>company_location_Bahamas</th>\n",
              "      <th>company_location_Belgium</th>\n",
              "      <th>...</th>\n",
              "      <th>job_title_Research Engineer</th>\n",
              "      <th>job_title_Research Scientist</th>\n",
              "      <th>job_title_Sales Data Analyst</th>\n",
              "      <th>job_title_Software Data Engineer</th>\n",
              "      <th>job_title_Staff Data Analyst</th>\n",
              "      <th>job_title_Staff Data Scientist</th>\n",
              "      <th>job_title_Staff Machine Learning Engineer</th>\n",
              "      <th>work_setting_Hybrid</th>\n",
              "      <th>work_setting_In-person</th>\n",
              "      <th>work_setting_Remote</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.183936</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.393103</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.153563</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.452874</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.180000</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 210 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b7742cc-b9e9-4c11-b129-e1b8c0007da7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5b7742cc-b9e9-4c11-b129-e1b8c0007da7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5b7742cc-b9e9-4c11-b129-e1b8c0007da7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-225a36f7-08fc-4a0d-90be-d6a7dd0e2597\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-225a36f7-08fc-4a0d-90be-d6a7dd0e2597')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-225a36f7-08fc-4a0d-90be-d6a7dd0e2597 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd  company_location_Algeria  company_location_American Samoa  \\\n",
              "0       0.183936                     False                            False   \n",
              "1       0.393103                     False                            False   \n",
              "2       0.153563                     False                            False   \n",
              "3       0.452874                     False                            False   \n",
              "4       0.180000                     False                            False   \n",
              "\n",
              "   company_location_Andorra  company_location_Argentina  \\\n",
              "0                     False                       False   \n",
              "1                     False                       False   \n",
              "2                     False                       False   \n",
              "3                     False                       False   \n",
              "4                     False                       False   \n",
              "\n",
              "   company_location_Armenia  company_location_Australia  \\\n",
              "0                     False                       False   \n",
              "1                     False                       False   \n",
              "2                     False                       False   \n",
              "3                     False                       False   \n",
              "4                     False                       False   \n",
              "\n",
              "   company_location_Austria  company_location_Bahamas  \\\n",
              "0                     False                     False   \n",
              "1                     False                     False   \n",
              "2                     False                     False   \n",
              "3                     False                     False   \n",
              "4                     False                     False   \n",
              "\n",
              "   company_location_Belgium  ...  job_title_Research Engineer  \\\n",
              "0                     False  ...                        False   \n",
              "1                     False  ...                        False   \n",
              "2                     False  ...                        False   \n",
              "3                     False  ...                        False   \n",
              "4                     False  ...                        False   \n",
              "\n",
              "   job_title_Research Scientist  job_title_Sales Data Analyst  \\\n",
              "0                         False                         False   \n",
              "1                         False                         False   \n",
              "2                         False                         False   \n",
              "3                         False                         False   \n",
              "4                         False                         False   \n",
              "\n",
              "   job_title_Software Data Engineer  job_title_Staff Data Analyst  \\\n",
              "0                             False                         False   \n",
              "1                             False                         False   \n",
              "2                             False                         False   \n",
              "3                             False                         False   \n",
              "4                             False                         False   \n",
              "\n",
              "   job_title_Staff Data Scientist  job_title_Staff Machine Learning Engineer  \\\n",
              "0                           False                                      False   \n",
              "1                           False                                      False   \n",
              "2                           False                                      False   \n",
              "3                           False                                      False   \n",
              "4                           False                                      False   \n",
              "\n",
              "   work_setting_Hybrid  work_setting_In-person  work_setting_Remote  \n",
              "0                 True                   False                False  \n",
              "1                False                    True                False  \n",
              "2                False                    True                False  \n",
              "3                False                    True                False  \n",
              "4                False                    True                False  \n",
              "\n",
              "[5 rows x 210 columns]"
            ]
          },
          "execution_count": 126,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "scaler = MinMaxScaler()\n",
        "column_to_scale = df_dum['salary_in_usd']\n",
        "column_to_scale_array = column_to_scale.values.reshape(-1, 1)\n",
        "scaled_column = scaler.fit_transform(column_to_scale_array)\n",
        "scaled_column_1d = scaled_column.reshape(-1)\n",
        "\n",
        "# Replace the original column with the scaled column\n",
        "df_dum['salary_in_usd'] = scaled_column_1d\n",
        "\n",
        "\n",
        "# Print the df_dum\n",
        "df_dum.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_wzHNFNadf5X"
      },
      "outputs": [],
      "source": [
        "X= df_dum.drop(['salary_in_usd'], axis=1)\n",
        "y= df_dum[('salary_in_usd')].values\n",
        "\n",
        "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bHeTZHdJg77I"
      },
      "source": [
        "Random Forest Model or Algorithm"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xnJneEiOjUnt"
      },
      "outputs": [],
      "source": [
        "n_estimators_grid = np.arange(20, 50,2)\n",
        "depth_grid = np.arange(1, 10)\n",
        "min_samples_leaf_grid = np.arange(10,21,2)\n",
        "parameters = {'n_estimators': n_estimators_grid, 'max_depth': depth_grid, 'min_samples_leaf':min_samples_leaf_grid}\n",
        "gridCV = GridSearchCV(RandomForestRegressor(random_state=12345), param_grid=parameters, cv=10, n_jobs=-1)\n",
        "gridCV.fit(X_train, y_train)\n",
        "best_n_estim = gridCV.best_params_['n_estimators']\n",
        "best_depth = gridCV.best_params_['max_depth']\n",
        "best_min_samples_leaf = gridCV.best_params_['min_samples_leaf']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PRd9MBWfELNK",
        "outputId": "3bd4674f-7a82-4d3d-c30c-57c5e43a1e79"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mejor n_estimator de Random Forest : 40\n",
            "Mejor max_depth de Random Forest : 9\n",
            "Mejor min_samples_leaf de Random Forest : 10\n"
          ]
        }
      ],
      "source": [
        "print(\"Mejor n_estimator de Random Forest : \" + str(best_n_estim))\n",
        "print(\"Mejor max_depth de Random Forest : \" + str(best_depth))\n",
        "print(\"Mejor min_samples_leaf de Random Forest : \" + str(best_min_samples_leaf))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "N3_ZhvaJEOgc"
      },
      "outputs": [],
      "source": [
        "rf = RandomForestRegressor(n_estimators=best_n_estim,max_depth=best_depth, min_samples_leaf=best_min_samples_leaf,random_state=123)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9TIIYXsld3pm",
        "outputId": "5fe8093d-5605-47df-911b-a936d543184b"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "-0.09675351144057913"
            ]
          },
          "execution_count": 131,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from sklearn.model_selection import cross_val_score\n",
        "np.mean(cross_val_score(rf, X_train, y_train, scoring= 'neg_mean_absolute_error', cv=3))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P2liuSX6E-rA",
        "outputId": "a7dc13db-75b6-4521-96a9-39b74f63a03a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mean squared error: 0.014536131581898655\n",
            "R^2 score: 0.3489671525819117\n"
          ]
        }
      ],
      "source": [
        "# Make predictions on the test set\n",
        "rf.fit(X_train, y_train)\n",
        "y_pred = rf.predict(X_test)\n",
        "\n",
        "# Calculate and print the MSE\n",
        "mse = mean_squared_error(y_test, y_pred)\n",
        "print(\"Mean squared error:\", mse)\n",
        "\n",
        "# Calculate and print the R^2 score\n",
        "r2 = r2_score(y_test, y_pred)\n",
        "print(\"R^2 score:\", r2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ifrf-QPJ0Ppu"
      },
      "source": [
        "REDES NEURONALES"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m8S3BDf52f--",
        "outputId": "feaa0770-bfbe-4cef-b000-d2f3019c1edb"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model: \"sequential_3\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_12 (Dense)            (None, 209)               43890     \n",
            "                                                                 \n",
            " dense_13 (Dense)            (None, 300)               63000     \n",
            "                                                                 \n",
            " dropout_6 (Dropout)         (None, 300)               0         \n",
            "                                                                 \n",
            " dense_14 (Dense)            (None, 60)                18060     \n",
            "                                                                 \n",
            " dropout_7 (Dropout)         (None, 60)                0         \n",
            "                                                                 \n",
            " dense_15 (Dense)            (None, 1)                 61        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 125011 (488.32 KB)\n",
            "Trainable params: 125011 (488.32 KB)\n",
            "Non-trainable params: 0 (0.00 Byte)\n",
            "_________________________________________________________________\n",
            "Epoch 1/100\n",
            "107/107 [==============================] - 2s 11ms/step - loss: 0.0242 - mean_squared_error: 0.0242 - val_loss: 0.0148 - val_mean_squared_error: 0.0148\n",
            "Epoch 2/100\n",
            "107/107 [==============================] - 1s 9ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n",
            "Epoch 3/100\n",
            "107/107 [==============================] - 1s 8ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - val_loss: 0.0142 - val_mean_squared_error: 0.0142\n",
            "Epoch 4/100\n",
            "107/107 [==============================] - 1s 8ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - val_loss: 0.0142 - val_mean_squared_error: 0.0142\n",
            "Epoch 5/100\n",
            "107/107 [==============================] - 1s 7ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - val_loss: 0.0142 - val_mean_squared_error: 0.0142\n",
            "Epoch 6/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0144 - val_mean_squared_error: 0.0144\n",
            "Epoch 7/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0140 - val_mean_squared_error: 0.0140\n",
            "Epoch 8/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - val_loss: 0.0140 - val_mean_squared_error: 0.0140\n",
            "Epoch 9/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - val_loss: 0.0145 - val_mean_squared_error: 0.0145\n",
            "Epoch 10/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - val_loss: 0.0138 - val_mean_squared_error: 0.0138\n",
            "Epoch 11/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - val_loss: 0.0142 - val_mean_squared_error: 0.0142\n",
            "Epoch 12/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - val_loss: 0.0141 - val_mean_squared_error: 0.0141\n",
            "Epoch 13/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - val_loss: 0.0139 - val_mean_squared_error: 0.0139\n",
            "Epoch 14/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - val_loss: 0.0143 - val_mean_squared_error: 0.0143\n",
            "Epoch 15/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - val_loss: 0.0144 - val_mean_squared_error: 0.0144\n",
            "Epoch 16/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - val_loss: 0.0144 - val_mean_squared_error: 0.0144\n",
            "Epoch 17/100\n",
            "107/107 [==============================] - 1s 6ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - val_loss: 0.0143 - val_mean_squared_error: 0.0143\n",
            "Epoch 18/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - val_loss: 0.0144 - val_mean_squared_error: 0.0144\n",
            "Epoch 19/100\n",
            "107/107 [==============================] - 0s 5ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - val_loss: 0.0142 - val_mean_squared_error: 0.0142\n",
            "Epoch 20/100\n",
            "107/107 [==============================] - 1s 5ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - val_loss: 0.0143 - val_mean_squared_error: 0.0143\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 0.0144 - mean_squared_error: 0.0144\n"
          ]
        }
      ],
      "source": [
        "# Definir el modelo\n",
        "modelV1 = Sequential()\n",
        "\n",
        "# Capa de entrada\n",
        "modelV1.add(Dense(209, input_dim=209, activation='relu'))\n",
        "\n",
        "# Capas ocultas con Dropout\n",
        "modelV1.add(Dense(300, activation='relu'))\n",
        "modelV1.add(Dropout(0.2))  # Dropout con tasa del 20%\n",
        "modelV1.add(Dense(60, activation='relu'))\n",
        "modelV1.add(Dropout(0.2))\n",
        "\n",
        "# Capa de salida\n",
        "modelV1.add(Dense(1))\n",
        "\n",
        "# Compilar el modelV1o con la métrica adicional mean_squared_error\n",
        "modelV1.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_squared_error'])\n",
        "\n",
        "# Resumen del modelV1o\n",
        "modelV1.summary()\n",
        "\n",
        "# Ajustar los parámetros de entrenamiento\n",
        "epochs = 100  # Número de épocas\n",
        "batch_size = 32  # Tamaño de lote\n",
        "\n",
        "# Implementar EarlyStopping\n",
        "early_stopping = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True) #detiene el proceso de entrenamiento si el rendimiento deja de mejorar después de un número especificado de épocas.\n",
        "\n",
        "# Entrenar el modelo con EarlyStopping\n",
        "history = modelV1.fit(X_train, y_train, epochs=epochs, batch_size=batch_size, validation_split=0.2, callbacks=[early_stopping])\n",
        "\n",
        "# Evaluar el modelV1o en los datos de prueba\n",
        "loss, mse = modelV1.evaluate(X_test, y_test)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU734f10-jEo",
        "outputId": "1afb19ac-3273-40cf-d294-ce4612be48a8"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "34/34 [==============================] - 0s 2ms/step\n",
            "Test Loss (MSE): 0.014444037340581417\n",
            "Test Mean Squared Error (MSE): 0.014444037340581417\n",
            "Test MSE (manual): 0.014444037119014541\n",
            "Test R²: 0.3530918070723502\n"
          ]
        }
      ],
      "source": [
        "# Hacer predicciones\n",
        "predictions = modelV1.predict(X_test)\n",
        "\n",
        "# Calcular MSE y R² manualmente\n",
        "mse_manual = mean_squared_error(y_test, predictions)\n",
        "r2 = r2_score(y_test, predictions)\n",
        "\n",
        "# Imprimir las métricas de evaluación\n",
        "print(f'Test Loss (MSE): {loss}')\n",
        "print(f'Test Mean Squared Error (MSE): {mse}')\n",
        "print(f'Test MSE (manual): {mse_manual}')\n",
        "print(f'Test R²: {r2}')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_EZ_0JgxV_hH"
      },
      "source": [
        "## Trabajando con 2 variables de salida (job_title y Company_location)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RU2rDJF1WM9v"
      },
      "outputs": [],
      "source": [
        "DataCoding = Datacleaned.copy()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "5tBKE3KuWXwX",
        "outputId": "ebdcb926-e14c-428d-abb2-072da5439e9b"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df_model\",\n  \"rows\": 5341,\n  \"fields\": [\n    {\n      \"column\": \"salary_in_usd\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1786,\n        \"samples\": [\n          222000,\n          266450,\n          239748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          \"Mauritius\",\n          \"Germany\",\n          \"Bosnia and Herzegovina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 125,\n        \"samples\": [\n          \"AI Engineer\",\n          \"Data Management Specialist\",\n          \"Business Intelligence Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Senior\",\n          \"Entry-level\",\n          \"Mid-level\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Part-time\",\n          \"Freelance\",\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hybrid\",\n          \"In-person\",\n          \"Remote\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"L\",\n          \"M\",\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df_model"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-957b29b9-9a19-489b-9335-82e590f57b53\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location</th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Data DevOps Engineer</td>\n",
              "      <td>Mid-level</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>L</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>United States</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>United States</td>\n",
              "      <td>Data Architect</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>United States</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>United States</td>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>In-person</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-957b29b9-9a19-489b-9335-82e590f57b53')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-957b29b9-9a19-489b-9335-82e590f57b53 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-957b29b9-9a19-489b-9335-82e590f57b53');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-43d2d7ab-fc4b-4ab9-aaf6-5dcb7d78799e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43d2d7ab-fc4b-4ab9-aaf6-5dcb7d78799e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-43d2d7ab-fc4b-4ab9-aaf6-5dcb7d78799e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd company_location             job_title experience_level  \\\n",
              "0          95012          Germany  Data DevOps Engineer        Mid-level   \n",
              "1         186000    United States        Data Architect           Senior   \n",
              "2          81800    United States        Data Architect           Senior   \n",
              "3         212000    United States        Data Scientist           Senior   \n",
              "4          93300    United States        Data Scientist           Senior   \n",
              "\n",
              "  employment_type work_setting company_size  \n",
              "0       Full-time       Hybrid            L  \n",
              "1       Full-time    In-person            M  \n",
              "2       Full-time    In-person            M  \n",
              "3       Full-time    In-person            M  \n",
              "4       Full-time    In-person            M  "
            ]
          },
          "execution_count": 136,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_model = DataCoding[['salary_in_usd','company_location','job_title', 'experience_level', 'employment_type', 'work_setting', 'company_size']]\n",
        "df_model.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KHaciPF9Wmw3"
      },
      "outputs": [],
      "source": [
        "# Obtener dummies para todas las columnas excepto \"company_location\" y \"salary_in_usd\"\n",
        "columns_to_encode = df_model.columns.difference(['salary_in_usd','company_location'])\n",
        "df_dum = pd.get_dummies(df_model, columns=columns_to_encode)\n",
        "\n",
        "# Conservar las columnas \"company_location\" y \"salary_in_usd\" en el DataFrame resultante\n",
        "df_dum[['company_location', 'salary_in_usd']] = df_model[['company_location', 'salary_in_usd']]\n",
        "\n",
        "# Guardar el esquema de las columnas\n",
        "original_columnsV2 = df_dum.columns.difference(['salary_in_usd','company_location'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "oUptcx_pXG07",
        "outputId": "3b025449-a9a3-43c3-e7ea-820ad1b0b66e"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_dum"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-070729b7-a6ec-4b85-82d0-aad5d28177d0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location</th>\n",
              "      <th>company_size_L</th>\n",
              "      <th>company_size_M</th>\n",
              "      <th>company_size_S</th>\n",
              "      <th>employment_type_Contract</th>\n",
              "      <th>employment_type_Freelance</th>\n",
              "      <th>employment_type_Full-time</th>\n",
              "      <th>employment_type_Part-time</th>\n",
              "      <th>experience_level_Entry-level</th>\n",
              "      <th>...</th>\n",
              "      <th>job_title_Research Engineer</th>\n",
              "      <th>job_title_Research Scientist</th>\n",
              "      <th>job_title_Sales Data Analyst</th>\n",
              "      <th>job_title_Software Data Engineer</th>\n",
              "      <th>job_title_Staff Data Analyst</th>\n",
              "      <th>job_title_Staff Data Scientist</th>\n",
              "      <th>job_title_Staff Machine Learning Engineer</th>\n",
              "      <th>work_setting_Hybrid</th>\n",
              "      <th>work_setting_In-person</th>\n",
              "      <th>work_setting_Remote</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>Germany</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>United States</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>United States</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>United States</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>United States</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 141 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-070729b7-a6ec-4b85-82d0-aad5d28177d0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-070729b7-a6ec-4b85-82d0-aad5d28177d0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-070729b7-a6ec-4b85-82d0-aad5d28177d0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1966a40f-f54b-463f-8e5b-aed196763232\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1966a40f-f54b-463f-8e5b-aed196763232')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1966a40f-f54b-463f-8e5b-aed196763232 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd company_location  company_size_L  company_size_M  \\\n",
              "0          95012          Germany            True           False   \n",
              "1         186000    United States           False            True   \n",
              "2          81800    United States           False            True   \n",
              "3         212000    United States           False            True   \n",
              "4          93300    United States           False            True   \n",
              "\n",
              "   company_size_S  employment_type_Contract  employment_type_Freelance  \\\n",
              "0           False                     False                      False   \n",
              "1           False                     False                      False   \n",
              "2           False                     False                      False   \n",
              "3           False                     False                      False   \n",
              "4           False                     False                      False   \n",
              "\n",
              "   employment_type_Full-time  employment_type_Part-time  \\\n",
              "0                       True                      False   \n",
              "1                       True                      False   \n",
              "2                       True                      False   \n",
              "3                       True                      False   \n",
              "4                       True                      False   \n",
              "\n",
              "   experience_level_Entry-level  ...  job_title_Research Engineer  \\\n",
              "0                         False  ...                        False   \n",
              "1                         False  ...                        False   \n",
              "2                         False  ...                        False   \n",
              "3                         False  ...                        False   \n",
              "4                         False  ...                        False   \n",
              "\n",
              "   job_title_Research Scientist  job_title_Sales Data Analyst  \\\n",
              "0                         False                         False   \n",
              "1                         False                         False   \n",
              "2                         False                         False   \n",
              "3                         False                         False   \n",
              "4                         False                         False   \n",
              "\n",
              "   job_title_Software Data Engineer  job_title_Staff Data Analyst  \\\n",
              "0                             False                         False   \n",
              "1                             False                         False   \n",
              "2                             False                         False   \n",
              "3                             False                         False   \n",
              "4                             False                         False   \n",
              "\n",
              "   job_title_Staff Data Scientist  job_title_Staff Machine Learning Engineer  \\\n",
              "0                           False                                      False   \n",
              "1                           False                                      False   \n",
              "2                           False                                      False   \n",
              "3                           False                                      False   \n",
              "4                           False                                      False   \n",
              "\n",
              "   work_setting_Hybrid  work_setting_In-person  work_setting_Remote  \n",
              "0                 True                   False                False  \n",
              "1                False                    True                False  \n",
              "2                False                    True                False  \n",
              "3                False                    True                False  \n",
              "4                False                    True                False  \n",
              "\n",
              "[5 rows x 141 columns]"
            ]
          },
          "execution_count": 138,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_dum.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KiiQJ9o4XNbD"
      },
      "outputs": [],
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "# Crear un objeto LabelEncoder\n",
        "label_encoder = LabelEncoder()\n",
        "\n",
        "# Codificar la columna \"company_location\"\n",
        "df_dum['company_location'] = label_encoder.fit_transform(df_dum['company_location'])\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "2tARMRqaXXxn",
        "outputId": "b56b143a-7d39-4ac7-df6c-9fe70cec58fe"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_dum"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-15ac7acb-7df0-4483-943a-3a27d1cd7d54\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location</th>\n",
              "      <th>company_size_L</th>\n",
              "      <th>company_size_M</th>\n",
              "      <th>company_size_S</th>\n",
              "      <th>employment_type_Contract</th>\n",
              "      <th>employment_type_Freelance</th>\n",
              "      <th>employment_type_Full-time</th>\n",
              "      <th>employment_type_Part-time</th>\n",
              "      <th>experience_level_Entry-level</th>\n",
              "      <th>...</th>\n",
              "      <th>job_title_Research Engineer</th>\n",
              "      <th>job_title_Research Scientist</th>\n",
              "      <th>job_title_Sales Data Analyst</th>\n",
              "      <th>job_title_Software Data Engineer</th>\n",
              "      <th>job_title_Staff Data Analyst</th>\n",
              "      <th>job_title_Staff Data Scientist</th>\n",
              "      <th>job_title_Staff Machine Learning Engineer</th>\n",
              "      <th>work_setting_Hybrid</th>\n",
              "      <th>work_setting_In-person</th>\n",
              "      <th>work_setting_Remote</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>95012</td>\n",
              "      <td>23</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>186000</td>\n",
              "      <td>69</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>81800</td>\n",
              "      <td>69</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>212000</td>\n",
              "      <td>69</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>93300</td>\n",
              "      <td>69</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 141 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15ac7acb-7df0-4483-943a-3a27d1cd7d54')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-15ac7acb-7df0-4483-943a-3a27d1cd7d54 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-15ac7acb-7df0-4483-943a-3a27d1cd7d54');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0fccc386-1658-4a68-a7b8-ecdecdcb1b07\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fccc386-1658-4a68-a7b8-ecdecdcb1b07')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0fccc386-1658-4a68-a7b8-ecdecdcb1b07 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd  company_location  company_size_L  company_size_M  \\\n",
              "0          95012                23            True           False   \n",
              "1         186000                69           False            True   \n",
              "2          81800                69           False            True   \n",
              "3         212000                69           False            True   \n",
              "4          93300                69           False            True   \n",
              "\n",
              "   company_size_S  employment_type_Contract  employment_type_Freelance  \\\n",
              "0           False                     False                      False   \n",
              "1           False                     False                      False   \n",
              "2           False                     False                      False   \n",
              "3           False                     False                      False   \n",
              "4           False                     False                      False   \n",
              "\n",
              "   employment_type_Full-time  employment_type_Part-time  \\\n",
              "0                       True                      False   \n",
              "1                       True                      False   \n",
              "2                       True                      False   \n",
              "3                       True                      False   \n",
              "4                       True                      False   \n",
              "\n",
              "   experience_level_Entry-level  ...  job_title_Research Engineer  \\\n",
              "0                         False  ...                        False   \n",
              "1                         False  ...                        False   \n",
              "2                         False  ...                        False   \n",
              "3                         False  ...                        False   \n",
              "4                         False  ...                        False   \n",
              "\n",
              "   job_title_Research Scientist  job_title_Sales Data Analyst  \\\n",
              "0                         False                         False   \n",
              "1                         False                         False   \n",
              "2                         False                         False   \n",
              "3                         False                         False   \n",
              "4                         False                         False   \n",
              "\n",
              "   job_title_Software Data Engineer  job_title_Staff Data Analyst  \\\n",
              "0                             False                         False   \n",
              "1                             False                         False   \n",
              "2                             False                         False   \n",
              "3                             False                         False   \n",
              "4                             False                         False   \n",
              "\n",
              "   job_title_Staff Data Scientist  job_title_Staff Machine Learning Engineer  \\\n",
              "0                           False                                      False   \n",
              "1                           False                                      False   \n",
              "2                           False                                      False   \n",
              "3                           False                                      False   \n",
              "4                           False                                      False   \n",
              "\n",
              "   work_setting_Hybrid  work_setting_In-person  work_setting_Remote  \n",
              "0                 True                   False                False  \n",
              "1                False                    True                False  \n",
              "2                False                    True                False  \n",
              "3                False                    True                False  \n",
              "4                False                    True                False  \n",
              "\n",
              "[5 rows x 141 columns]"
            ]
          },
          "execution_count": 140,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_dum.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "iZuYwDEwXdJA",
        "outputId": "86048335-9892-4a18-c396-32befccbd506"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_dum"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-892c8963-b84d-412a-ad6c-263340c92529\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_in_usd</th>\n",
              "      <th>company_location</th>\n",
              "      <th>company_size_L</th>\n",
              "      <th>company_size_M</th>\n",
              "      <th>company_size_S</th>\n",
              "      <th>employment_type_Contract</th>\n",
              "      <th>employment_type_Freelance</th>\n",
              "      <th>employment_type_Full-time</th>\n",
              "      <th>employment_type_Part-time</th>\n",
              "      <th>experience_level_Entry-level</th>\n",
              "      <th>...</th>\n",
              "      <th>job_title_Research Engineer</th>\n",
              "      <th>job_title_Research Scientist</th>\n",
              "      <th>job_title_Sales Data Analyst</th>\n",
              "      <th>job_title_Software Data Engineer</th>\n",
              "      <th>job_title_Staff Data Analyst</th>\n",
              "      <th>job_title_Staff Data Scientist</th>\n",
              "      <th>job_title_Staff Machine Learning Engineer</th>\n",
              "      <th>work_setting_Hybrid</th>\n",
              "      <th>work_setting_In-person</th>\n",
              "      <th>work_setting_Remote</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.183936</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.393103</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.153563</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.452874</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.180000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 141 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-892c8963-b84d-412a-ad6c-263340c92529')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-892c8963-b84d-412a-ad6c-263340c92529 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-892c8963-b84d-412a-ad6c-263340c92529');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-270227ca-1298-41c7-b898-074d39f36abb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-270227ca-1298-41c7-b898-074d39f36abb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-270227ca-1298-41c7-b898-074d39f36abb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "   salary_in_usd  company_location  company_size_L  company_size_M  \\\n",
              "0       0.183936          0.333333            True           False   \n",
              "1       0.393103          1.000000           False            True   \n",
              "2       0.153563          1.000000           False            True   \n",
              "3       0.452874          1.000000           False            True   \n",
              "4       0.180000          1.000000           False            True   \n",
              "\n",
              "   company_size_S  employment_type_Contract  employment_type_Freelance  \\\n",
              "0           False                     False                      False   \n",
              "1           False                     False                      False   \n",
              "2           False                     False                      False   \n",
              "3           False                     False                      False   \n",
              "4           False                     False                      False   \n",
              "\n",
              "   employment_type_Full-time  employment_type_Part-time  \\\n",
              "0                       True                      False   \n",
              "1                       True                      False   \n",
              "2                       True                      False   \n",
              "3                       True                      False   \n",
              "4                       True                      False   \n",
              "\n",
              "   experience_level_Entry-level  ...  job_title_Research Engineer  \\\n",
              "0                         False  ...                        False   \n",
              "1                         False  ...                        False   \n",
              "2                         False  ...                        False   \n",
              "3                         False  ...                        False   \n",
              "4                         False  ...                        False   \n",
              "\n",
              "   job_title_Research Scientist  job_title_Sales Data Analyst  \\\n",
              "0                         False                         False   \n",
              "1                         False                         False   \n",
              "2                         False                         False   \n",
              "3                         False                         False   \n",
              "4                         False                         False   \n",
              "\n",
              "   job_title_Software Data Engineer  job_title_Staff Data Analyst  \\\n",
              "0                             False                         False   \n",
              "1                             False                         False   \n",
              "2                             False                         False   \n",
              "3                             False                         False   \n",
              "4                             False                         False   \n",
              "\n",
              "   job_title_Staff Data Scientist  job_title_Staff Machine Learning Engineer  \\\n",
              "0                           False                                      False   \n",
              "1                           False                                      False   \n",
              "2                           False                                      False   \n",
              "3                           False                                      False   \n",
              "4                           False                                      False   \n",
              "\n",
              "   work_setting_Hybrid  work_setting_In-person  work_setting_Remote  \n",
              "0                 True                   False                False  \n",
              "1                False                    True                False  \n",
              "2                False                    True                False  \n",
              "3                False                    True                False  \n",
              "4                False                    True                False  \n",
              "\n",
              "[5 rows x 141 columns]"
            ]
          },
          "execution_count": 141,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "scaler1 = MinMaxScaler()\n",
        "column_to_scale = df_dum['salary_in_usd']\n",
        "column_to_scale_array = column_to_scale.values.reshape(-1, 1)\n",
        "scaled_column = scaler1.fit_transform(column_to_scale_array)\n",
        "scaled_column_1d = scaled_column.reshape(-1)\n",
        "\n",
        "# Replace the original column with the scaled column\n",
        "df_dum['salary_in_usd'] = scaled_column_1d\n",
        "\n",
        "scaler2 = MinMaxScaler()\n",
        "column_to_scale = df_dum['company_location']\n",
        "column_to_scale_array = column_to_scale.values.reshape(-1, 1)\n",
        "scaled_column = scaler2.fit_transform(column_to_scale_array)\n",
        "scaled_column_1d = scaled_column.reshape(-1)\n",
        "\n",
        "# Replace the original column with the scaled column\n",
        "df_dum['company_location'] = scaled_column_1d\n",
        "\n",
        "df_dum.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5gnw2VsHXyPX"
      },
      "outputs": [],
      "source": [
        "X= df_dum.drop(['salary_in_usd','company_location'], axis=1)\n",
        "y= df_dum[['salary_in_usd','company_location']].values\n",
        "\n",
        "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xU4gWm5iYKSw"
      },
      "source": [
        "Random Forest Model or Algorithm"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZhclDz8FFchU"
      },
      "outputs": [],
      "source": [
        "n_estimators_grid = np.arange(20, 50,2)\n",
        "depth_grid = np.arange(1, 10)\n",
        "min_samples_leaf_grid = np.arange(10,21,2)\n",
        "parameters = {'n_estimators': n_estimators_grid, 'max_depth': depth_grid, 'min_samples_leaf':min_samples_leaf_grid}\n",
        "gridCV = GridSearchCV(RandomForestRegressor(random_state=12345), param_grid=parameters, cv=10, n_jobs=-1)\n",
        "gridCV.fit(X_train, y_train)\n",
        "best_n_estim = gridCV.best_params_['n_estimators']\n",
        "best_depth = gridCV.best_params_['max_depth']\n",
        "best_min_samples_leaf = gridCV.best_params_['min_samples_leaf']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W9PVvwCZFkX1",
        "outputId": "0f7b438a-ddd9-4159-b264-04014c4c818a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mejor n_estimator de Random Forest : 48\n",
            "Mejor max_depth de Random Forest : 9\n",
            "Mejor min_samples_leaf de Random Forest : 10\n"
          ]
        }
      ],
      "source": [
        "print(\"Mejor n_estimator de Random Forest : \" + str(best_n_estim))\n",
        "print(\"Mejor max_depth de Random Forest : \" + str(best_depth))\n",
        "print(\"Mejor min_samples_leaf de Random Forest : \" + str(best_min_samples_leaf))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DWWcCbw8FlE2"
      },
      "outputs": [],
      "source": [
        "rfV2 = RandomForestRegressor(n_estimators=best_n_estim,max_depth=best_depth, min_samples_leaf=best_min_samples_leaf,random_state=123)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v8DECwluFqXo",
        "outputId": "0d2dadfe-5a1e-4590-cab4-2d8f5293e660"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "-0.11043689874645712"
            ]
          },
          "execution_count": 146,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "np.mean(cross_val_score(rfV2, X_train, y_train, scoring= 'neg_mean_absolute_error', cv=3))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gfRIO2eKYJW8",
        "outputId": "7018c66a-41c3-4279-ef30-98fc09fc3139"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mean squared error: 0.02892765179292716\n",
            "R^2 score: 0.1970363556259489\n"
          ]
        }
      ],
      "source": [
        "# Make predictions on the test set\n",
        "rfV2.fit(X_train, y_train)\n",
        "y_pred = rfV2.predict(X_test)\n",
        "\n",
        "# Calculate and print the MSE\n",
        "mse = mean_squared_error(y_test, y_pred)\n",
        "print(\"Mean squared error:\", mse)\n",
        "\n",
        "# Calculate and print the R^2 score\n",
        "r2 = r2_score(y_test, y_pred)\n",
        "print(\"R^2 score:\", r2)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vq1VBcavYVsY"
      },
      "source": [
        "Redes neuronales"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oYHL-UJSYYFx",
        "outputId": "c3f86b43-a27a-466f-d231-c583bd37d853"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model: \"sequential_4\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_16 (Dense)            (None, 139)               19460     \n",
            "                                                                 \n",
            " dense_17 (Dense)            (None, 300)               42000     \n",
            "                                                                 \n",
            " dropout_8 (Dropout)         (None, 300)               0         \n",
            "                                                                 \n",
            " dense_18 (Dense)            (None, 60)                18060     \n",
            "                                                                 \n",
            " dropout_9 (Dropout)         (None, 60)                0         \n",
            "                                                                 \n",
            " dense_19 (Dense)            (None, 2)                 122       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 79642 (311.10 KB)\n",
            "Trainable params: 79642 (311.10 KB)\n",
            "Non-trainable params: 0 (0.00 Byte)\n",
            "_________________________________________________________________\n",
            "Epoch 1/100\n",
            "107/107 [==============================] - 2s 7ms/step - loss: 0.0610 - mean_squared_error: 0.0610 - val_loss: 0.0319 - val_mean_squared_error: 0.0319\n",
            "Epoch 2/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0427 - mean_squared_error: 0.0427 - val_loss: 0.0328 - val_mean_squared_error: 0.0328\n",
            "Epoch 3/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0399 - mean_squared_error: 0.0399 - val_loss: 0.0306 - val_mean_squared_error: 0.0306\n",
            "Epoch 4/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0374 - mean_squared_error: 0.0374 - val_loss: 0.0304 - val_mean_squared_error: 0.0304\n",
            "Epoch 5/100\n",
            "107/107 [==============================] - 0s 3ms/step - loss: 0.0356 - mean_squared_error: 0.0356 - val_loss: 0.0302 - val_mean_squared_error: 0.0302\n",
            "Epoch 6/100\n",
            "107/107 [==============================] - 0s 3ms/step - loss: 0.0345 - mean_squared_error: 0.0345 - val_loss: 0.0317 - val_mean_squared_error: 0.0317\n",
            "Epoch 7/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - val_loss: 0.0304 - val_mean_squared_error: 0.0304\n",
            "Epoch 8/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0325 - mean_squared_error: 0.0325 - val_loss: 0.0314 - val_mean_squared_error: 0.0314\n",
            "Epoch 9/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0324 - mean_squared_error: 0.0324 - val_loss: 0.0307 - val_mean_squared_error: 0.0307\n",
            "Epoch 10/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0310 - mean_squared_error: 0.0310 - val_loss: 0.0306 - val_mean_squared_error: 0.0306\n",
            "Epoch 11/100\n",
            "107/107 [==============================] - 0s 3ms/step - loss: 0.0303 - mean_squared_error: 0.0303 - val_loss: 0.0308 - val_mean_squared_error: 0.0308\n",
            "Epoch 12/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0298 - mean_squared_error: 0.0298 - val_loss: 0.0310 - val_mean_squared_error: 0.0310\n",
            "Epoch 13/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0297 - mean_squared_error: 0.0297 - val_loss: 0.0316 - val_mean_squared_error: 0.0316\n",
            "Epoch 14/100\n",
            "107/107 [==============================] - 0s 4ms/step - loss: 0.0296 - mean_squared_error: 0.0296 - val_loss: 0.0314 - val_mean_squared_error: 0.0314\n",
            "Epoch 15/100\n",
            "107/107 [==============================] - 0s 3ms/step - loss: 0.0288 - mean_squared_error: 0.0288 - val_loss: 0.0305 - val_mean_squared_error: 0.0305\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 0.0288 - mean_squared_error: 0.0288\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Dropout\n",
        "from tensorflow.keras.callbacks import EarlyStopping\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "\n",
        "# Definir el modelo\n",
        "modelV2 = Sequential()\n",
        "\n",
        "# Capa de entrada\n",
        "modelV2.add(Dense(139, input_dim=139, activation='relu')) # como tenemos 139 datos de entrada colocamos 139 neuronas\n",
        "\n",
        "# Capas ocultas con Dropout\n",
        "modelV2.add(Dense(300, activation='relu'))\n",
        "modelV2.add(Dropout(0.2))  # Dropout con tasa del 20%\n",
        "modelV2.add(Dense(60, activation='relu'))\n",
        "modelV2.add(Dropout(0.2))\n",
        "\n",
        "# Capa de salida\n",
        "modelV2.add(Dense(2))\n",
        "\n",
        "# Compilar el modelV2o con la métrica adicional mean_squared_error\n",
        "modelV2.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_squared_error'])\n",
        "\n",
        "# Resumen del modelV2o\n",
        "modelV2.summary()\n",
        "\n",
        "# Ajustar los parámetros de entrenamiento\n",
        "epochs = 100  # Número de épocas\n",
        "batch_size = 32  # Tamaño de lote\n",
        "\n",
        "# Implementar EarlyStopping\n",
        "early_stopping = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True) #detiene el proceso de entrenamiento si el rendimiento deja de mejorar después de un número especificado de épocas.\n",
        "\n",
        "# Entrenar el modelo con EarlyStopping\n",
        "history = modelV2.fit(X_train, y_train, epochs=epochs, batch_size=batch_size, validation_split=0.2, callbacks=[early_stopping])\n",
        "\n",
        "# Evaluar el modelV2o en los datos de prueba\n",
        "loss, mse = modelV2.evaluate(X_test, y_test)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hBdlPnG6YbZj",
        "outputId": "78d3196b-da77-46b3-bcd1-1fb1c6421e19"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "34/34 [==============================] - 0s 2ms/step\n",
            "Test Loss (MSE): 0.02883830852806568\n",
            "Test Mean Squared Error (MSE): 0.02883830852806568\n",
            "Test MSE (manual): 0.028838313381687526\n",
            "Test R²: 0.20767102339597954\n"
          ]
        }
      ],
      "source": [
        "# Hacer predicciones\n",
        "predictions = modelV2.predict(X_test)\n",
        "\n",
        "# Calcular MSE y R² manualmente\n",
        "mse_manual = mean_squared_error(y_test, predictions)\n",
        "r2 = r2_score(y_test, predictions)\n",
        "\n",
        "# Imprimir las métricas de evaluación\n",
        "print(f'Test Loss (MSE): {loss}')\n",
        "print(f'Test Mean Squared Error (MSE): {mse}')\n",
        "print(f'Test MSE (manual): {mse_manual}')\n",
        "print(f'Test R²: {r2}')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "slVdw4C2cDoy"
      },
      "source": [
        "# Resultados"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_gCy5JYkcHgu"
      },
      "source": [
        "## Interrogantes"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yGERTzNbc6Bs"
      },
      "source": [
        "PERFILES\n",
        "\n",
        "* Hispanoamericano, 5 años de experiencia, Machine Learning, compañias 50 empleados, remoto tiempo completo.\n",
        "\n",
        "* Experiencia 3 años, ciencia de datos e investigación, trabajo remoto, zona horaria (Américana).\n",
        "\n",
        "* amplia experiencia, cloud computing, trabajo hibrido o remoto tiempo completo.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PNkz9rEDehe7"
      },
      "source": [
        "________________________________________________________________________________"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h7cQyHbDelAL"
      },
      "source": [
        "### Nuestros datos de interes, utilizando una variable de salida\n",
        "\n",
        "* 'job_title', 'experience_level', 'employment_type', 'work_setting', 'company_size', 'company_location'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "2b9NjecWegTZ",
        "outputId": "a47bd3b0-3bdb-4cab-c45e-2711d50c162c"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"dfNew\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Machine Learning Engineer\",\n          \"Data Scientist\",\n          \"Cloud Computing Specialist\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Mid\",\n          \"Senior\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Hybrid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "dfNew"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-2bc5274b-4805-41c2-9a14-465f8c863de5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "      <th>company_location</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Machine Learning Engineer</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>S</td>\n",
              "      <td>Hispanoamérica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Mid</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>S</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Cloud Computing Specialist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>M</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Cloud Computing Specialist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2bc5274b-4805-41c2-9a14-465f8c863de5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2bc5274b-4805-41c2-9a14-465f8c863de5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2bc5274b-4805-41c2-9a14-465f8c863de5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-790bcacf-4552-4e46-a6e4-58ca6ea1baf5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-790bcacf-4552-4e46-a6e4-58ca6ea1baf5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-790bcacf-4552-4e46-a6e4-58ca6ea1baf5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_9d24ebc1-7f5f-43bf-811e-1fb07987bd6d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfNew')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_9d24ebc1-7f5f-43bf-811e-1fb07987bd6d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dfNew');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                    job_title experience_level employment_type work_setting  \\\n",
              "0   Machine Learning Engineer           Senior       Full-time       Remote   \n",
              "1              Data Scientist              Mid       Full-time       Remote   \n",
              "2  Cloud Computing Specialist           Senior       Full-time       Hybrid   \n",
              "3  Cloud Computing Specialist           Senior       Full-time       Remote   \n",
              "\n",
              "  company_size company_location  \n",
              "0            S   Hispanoamérica  \n",
              "1            S    United States  \n",
              "2            M    United States  \n",
              "3            L    United States  "
            ]
          },
          "execution_count": 161,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "# Definir los datos en un diccionario\n",
        "dataNew = {\n",
        "    'job_title': ['Machine Learning Engineer', 'Data Scientist', 'Cloud Computing Specialist', 'Cloud Computing Specialist'],\n",
        "    'experience_level': ['Senior', 'Mid', 'Senior','Senior'],\n",
        "    'employment_type': ['Full-time', 'Full-time','Full-time', 'Full-time'],\n",
        "    'work_setting': ['Remote', 'Remote', 'Hybrid','Remote'],\n",
        "    'company_size': ['S', 'S', 'M','L'],\n",
        "    'company_location': ['Hispanoamérica', 'United States', 'United States','United States']\n",
        "}\n",
        "\n",
        "# Crear el dataframe\n",
        "dfNew = pd.DataFrame(dataNew)\n",
        "\n",
        "# Mostrar el dataframe\n",
        "dfNew"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U803L6rgjusP"
      },
      "source": [
        "### Utilizando la red neuronal de 1 variable de salida"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Q9ujGaTzkWHQ"
      },
      "outputs": [],
      "source": [
        "# Crear el nuevo dataframe\n",
        "new_df = pd.DataFrame(dataNew)\n",
        "\n",
        "# Aplicar pd.get_dummies() a las columnas necesarias\n",
        "new_df_dum = pd.get_dummies(new_df, columns=columns_to_encode)\n",
        "\n",
        "# Añadir las columnas faltantes del esquema original con valor 0 usando pd.concat\n",
        "missing_cols = [col for col in original_columns if col not in new_df_dum.columns]\n",
        "new_df_dum = pd.concat([new_df_dum, pd.DataFrame(0, index=new_df_dum.index, columns=missing_cols)], axis=1)\n",
        "\n",
        "# Asegurarse de que las columnas estén en el mismo orden\n",
        "new_df_dum = new_df_dum[original_columns]\n",
        "new_df_dum_array = new_df_dum.to_numpy().astype(np.float32)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IKgD_0xQjuQU",
        "outputId": "510c74d3-626d-41ae-cc1c-0ac5282165db"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "1/1 [==============================] - 0s 20ms/step\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "array([[ 72366.36 ],\n",
              "       [ 56212.293],\n",
              "       [ 97292.625],\n",
              "       [107798.445]], dtype=float32)"
            ]
          },
          "execution_count": 163,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Hacer predicciones\n",
        "predictions = modelV1.predict(new_df_dum_array)\n",
        "ConvPred = scaler.inverse_transform(predictions)\n",
        "ConvPred"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CFAgGecPt-iw",
        "outputId": "30ba268e-2082-4326-b744-3d1d6326993f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Para el puesto de 'Machine Learning Engineer' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'S' y ubicación en 'Hispanoamérica', se espera un salario de $72,366.36 USD.\n",
            "Para el puesto de 'Data Scientist' con nivel de experiencia 'Mid', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'S' y ubicación en 'United States', se espera un salario de $56,212.29 USD.\n",
            "Para el puesto de 'Cloud Computing Specialist' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Hybrid', tamaño de la empresa 'M' y ubicación en 'United States', se espera un salario de $97,292.62 USD.\n",
            "Para el puesto de 'Cloud Computing Specialist' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'L' y ubicación en 'United States', se espera un salario de $107,798.45 USD.\n"
          ]
        }
      ],
      "source": [
        "# Crear un dataframe de resultados\n",
        "results = new_df.copy()\n",
        "results['predicted_salary_in_usd'] = ConvPred\n",
        "\n",
        "# Mostrar los datos de entrada junto con el salario predicho de manera explicativa\n",
        "for index, row in results.iterrows():\n",
        "    print(f\"Para el puesto de '{row['job_title']}' con nivel de experiencia '{row['experience_level']}', \"\n",
        "          f\"tipo de empleo '{row['employment_type']}', modalidad de trabajo '{row['work_setting']}', \"\n",
        "          f\"tamaño de la empresa '{row['company_size']}' y ubicación en '{row['company_location']}', \"\n",
        "          f\"se espera un salario de ${row['predicted_salary_in_usd']:,.2f} USD.\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "omX1ed9GvwBt"
      },
      "source": [
        "### Utilizando la red neuronal de 2 variable de salida"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "M0ENso83y48w",
        "outputId": "3de12122-46cb-42eb-e132-248f7a2beece"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"dfNew\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"job_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Machine Learning Engineer\",\n          \"Data Scientist\",\n          \"Cloud Computing Specialist\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"experience_level\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Mid\",\n          \"Senior\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"employment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Full-time\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"work_setting\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Hybrid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_size\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "dfNew"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-b1797e08-126e-4612-99e7-2798025607ec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_title</th>\n",
              "      <th>experience_level</th>\n",
              "      <th>employment_type</th>\n",
              "      <th>work_setting</th>\n",
              "      <th>company_size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Machine Learning Engineer</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Data Scientist</td>\n",
              "      <td>Mid</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Cloud Computing Specialist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Hybrid</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Cloud Computing Specialist</td>\n",
              "      <td>Senior</td>\n",
              "      <td>Full-time</td>\n",
              "      <td>Remote</td>\n",
              "      <td>L</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1797e08-126e-4612-99e7-2798025607ec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b1797e08-126e-4612-99e7-2798025607ec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b1797e08-126e-4612-99e7-2798025607ec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-02f370e5-e4c2-497c-a865-587706374e13\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02f370e5-e4c2-497c-a865-587706374e13')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-02f370e5-e4c2-497c-a865-587706374e13 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_6f9b3daf-0bb0-44e3-8dba-8bec09760db2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfNew')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_6f9b3daf-0bb0-44e3-8dba-8bec09760db2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dfNew');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                    job_title experience_level employment_type work_setting  \\\n",
              "0   Machine Learning Engineer           Senior       Full-time       Remote   \n",
              "1              Data Scientist              Mid       Full-time       Remote   \n",
              "2  Cloud Computing Specialist           Senior       Full-time       Hybrid   \n",
              "3  Cloud Computing Specialist           Senior       Full-time       Remote   \n",
              "\n",
              "  company_size  \n",
              "0            S  \n",
              "1            S  \n",
              "2            M  \n",
              "3            L  "
            ]
          },
          "execution_count": 165,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "# Definir los datos en un diccionario\n",
        "dataNew = {\n",
        "    'job_title': ['Machine Learning Engineer', 'Data Scientist', 'Cloud Computing Specialist', 'Cloud Computing Specialist'],\n",
        "    'experience_level': ['Senior', 'Mid', 'Senior','Senior'],\n",
        "    'employment_type': ['Full-time', 'Full-time','Full-time', 'Full-time'],\n",
        "    'work_setting': ['Remote', 'Remote', 'Hybrid','Remote'],\n",
        "    'company_size': ['S', 'S', 'M','L']\n",
        "}\n",
        "\n",
        "# Crear el dataframe\n",
        "dfNew = pd.DataFrame(dataNew)\n",
        "\n",
        "# Mostrar el dataframe\n",
        "dfNew"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j2tfmdsSxI4o"
      },
      "outputs": [],
      "source": [
        "# Crear el nuevo dataframe\n",
        "new_df = pd.DataFrame(dataNew)\n",
        "\n",
        "# Aplicar pd.get_dummies() a las columnas necesarias\n",
        "new_df_dum = pd.get_dummies(new_df, columns=columns_to_encode)\n",
        "\n",
        "# Añadir las columnas faltantes del esquema original con valor 0 usando pd.concat\n",
        "missing_cols = [col for col in original_columnsV2 if col not in new_df_dum.columns]\n",
        "new_df_dum = pd.concat([new_df_dum, pd.DataFrame(0, index=new_df_dum.index, columns=missing_cols)], axis=1)\n",
        "\n",
        "# Asegurarse de que las columnas estén en el mismo orden\n",
        "new_df_dum = new_df_dum[original_columnsV2]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZB4frco0xdj7"
      },
      "outputs": [],
      "source": [
        "# Asegúrate de que predictions tenga la forma correcta\n",
        "predictions = rfV2.predict(new_df_dum)\n",
        "\n",
        "# Asegúrate de que predictions es un array bidimensional\n",
        "predictions = np.array(predictions)\n",
        "\n",
        "# Inversa de las predicciones\n",
        "ConvPred3 = []\n",
        "ConvPred4 = []\n",
        "\n",
        "for pre1, pre2 in predictions:\n",
        "    # Asegúrate de que pre1 y pre2 son arrays de una dimensión\n",
        "    pre1 = np.array([pre1]).reshape(-1, 1)\n",
        "    pre2 = np.array([pre2]).reshape(-1, 1)\n",
        "\n",
        "    # Inversa de la escala\n",
        "    inv_pre1 = scaler1.inverse_transform(pre1)\n",
        "    inv_pre2 = scaler2.inverse_transform(pre2)\n",
        "\n",
        "    ConvPred3.append(inv_pre1[0][0])\n",
        "    # Utiliza label_encoder.inverse_transform directamente sin necesidad de convertir a int\n",
        "    ConvPred4.append(label_encoder.inverse_transform([int(inv_pre2[0][0])]))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8D4GnJ0MApAR",
        "outputId": "a2b2d6a8-f9f1-4d93-83fa-3e8a7080b4ba"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "[array(['Saudi Arabia'], dtype=object),\n",
              " array(['Mexico'], dtype=object),\n",
              " array(['Kenya'], dtype=object),\n",
              " array(['Spain'], dtype=object)]"
            ]
          },
          "execution_count": 168,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "ConvPred4"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U_PLt2p1xncP",
        "outputId": "536e4a3a-5ce2-4829-fee7-6ff8c15c855e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Para el puesto de 'Machine Learning Engineer' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'S' y ubicación esperado en '['Saudi Arabia']', se espera un salario de $142,144.23 USD.\n",
            "Para el puesto de 'Data Scientist' con nivel de experiencia 'Mid', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'S' y ubicación esperado en '['Mexico']', se espera un salario de $77,682.89 USD.\n",
            "Para el puesto de 'Cloud Computing Specialist' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Hybrid', tamaño de la empresa 'M' y ubicación esperado en '['Kenya']', se espera un salario de $88,859.77 USD.\n",
            "Para el puesto de 'Cloud Computing Specialist' con nivel de experiencia 'Senior', tipo de empleo 'Full-time', modalidad de trabajo 'Remote', tamaño de la empresa 'L' y ubicación esperado en '['Spain']', se espera un salario de $152,112.78 USD.\n"
          ]
        }
      ],
      "source": [
        "results = new_df.copy()\n",
        "results['predicted_salary_in_usd'] = ConvPred3\n",
        "results['predicted_location'] = ConvPred4\n",
        "\n",
        "# Displaying the data with detailed information\n",
        "for index, row in results.iterrows():\n",
        "    print(f\"Para el puesto de '{row['job_title']}' con nivel de experiencia '{row['experience_level']}', \"\n",
        "          f\"tipo de empleo '{row['employment_type']}', modalidad de trabajo '{row['work_setting']}', \"\n",
        "          f\"tamaño de la empresa '{row['company_size']}' y ubicación esperado en '{row['predicted_location']}', \"\n",
        "          f\"se espera un salario de ${row['predicted_salary_in_usd']:,.2f} USD.\")"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "hcTWq0qxKBhL"
      ],
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
